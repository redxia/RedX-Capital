#polyReg <- lm(T.Adjusted~exp(-VXZ.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(VXZ_rets$VXZ.Adjusted), y=mean(MO_rets$ZIVB.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$ZIVB.Adjusted,VXZ_rets$VXZ.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * length(MO_rets$ZIVB.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * round(sqrt(length(MO_rets$ZIVB.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(VXZ_rets$VXZ.Adjusted) * length(VXZ_rets$VXZ.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(VXZ_rets$VXZ.Adjusted) * round(sqrt(length(VXZ_rets$VXZ.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(VXZ_rets$VXZ.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(VXZ_rets$VXZ.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$ZIVB.Adjusted < 0 & data$VXZ.Adjusted > 0,]) +
nrow(data[data$ZIVB.Adjusted > 0 & data$VXZ.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off VXZgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$ZIVB.Adjusted > 0 & data$VXZ.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$ZIVB.Adjusted < 0 & data$VXZ.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$ZIVB.Adjusted > 0 & data$VXZ.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$ZIVB.Adjusted < 0 & data$VXZ.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('ZIVB','VIXM')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*.5) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(ZIVB$ZIVB.Adjusted / shift(ZIVB$ZIVB.Adjusted) - 1)
VIXM_rets = na.omit(VIXM$VIXM.Adjusted / shift(VIXM$VIXM.Adjusted) - 1)
data = data.frame(MO_rets$ZIVB.Adjusted, VIXM_rets$VIXM.Adjusted)
data = data[order(data$VIXM.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$VIXM.Adjusted-rf, data$ZIVB.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$VIXM.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(ZIVB.Adjusted-rf)~I(VIXM.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~VIXM.Adjusted + I(VIXM.Adjusted^2) + I(VIXM.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-VIXM.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(VIXM_rets$VIXM.Adjusted), y=mean(MO_rets$ZIVB.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$ZIVB.Adjusted,VIXM_rets$VIXM.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * length(MO_rets$ZIVB.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * round(sqrt(length(MO_rets$ZIVB.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(VIXM_rets$VIXM.Adjusted) * length(VIXM_rets$VIXM.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(VIXM_rets$VIXM.Adjusted) * round(sqrt(length(VIXM_rets$VIXM.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(VIXM_rets$VIXM.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(VIXM_rets$VIXM.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$ZIVB.Adjusted < 0 & data$VIXM.Adjusted > 0,]) +
nrow(data[data$ZIVB.Adjusted > 0 & data$VIXM.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off VIXMgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$ZIVB.Adjusted > 0 & data$VIXM.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$ZIVB.Adjusted < 0 & data$VIXM.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$ZIVB.Adjusted > 0 & data$VIXM.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$ZIVB.Adjusted < 0 & data$VIXM.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('VIXM','ZIVB')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*1) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(VIXM$VIXM.Adjusted / shift(VIXM$VIXM.Adjusted) - 1)
ZIVB_rets = na.omit(ZIVB$ZIVB.Adjusted / shift(ZIVB$ZIVB.Adjusted) - 1)
data = data.frame(MO_rets$VIXM.Adjusted, ZIVB_rets$ZIVB.Adjusted)
data = data[order(data$ZIVB.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$ZIVB.Adjusted-rf, data$VIXM.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$ZIVB.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(VIXM.Adjusted-rf)~I(ZIVB.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~ZIVB.Adjusted + I(ZIVB.Adjusted^2) + I(ZIVB.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-ZIVB.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(ZIVB_rets$ZIVB.Adjusted), y=mean(MO_rets$VIXM.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$VIXM.Adjusted,ZIVB_rets$ZIVB.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$VIXM.Adjusted) * length(MO_rets$VIXM.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$VIXM.Adjusted) * round(sqrt(length(MO_rets$VIXM.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(ZIVB_rets$ZIVB.Adjusted) * length(ZIVB_rets$ZIVB.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(ZIVB_rets$ZIVB.Adjusted) * round(sqrt(length(ZIVB_rets$ZIVB.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$VIXM.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$VIXM.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(ZIVB_rets$ZIVB.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(ZIVB_rets$ZIVB.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$VIXM.Adjusted < 0 & data$ZIVB.Adjusted > 0,]) +
nrow(data[data$VIXM.Adjusted > 0 & data$ZIVB.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off ZIVBgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$VIXM.Adjusted > 0 & data$ZIVB.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$VIXM.Adjusted < 0 & data$ZIVB.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$VIXM.Adjusted > 0 & data$ZIVB.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$VIXM.Adjusted < 0 & data$ZIVB.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('SVXY','ZIVB')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*1) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(SVXY$SVXY.Adjusted / shift(SVXY$SVXY.Adjusted) - 1)
ZIVB_rets = na.omit(ZIVB$ZIVB.Adjusted / shift(ZIVB$ZIVB.Adjusted) - 1)
data = data.frame(MO_rets$SVXY.Adjusted, ZIVB_rets$ZIVB.Adjusted)
data = data[order(data$ZIVB.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$ZIVB.Adjusted-rf, data$SVXY.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$ZIVB.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(SVXY.Adjusted-rf)~I(ZIVB.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~ZIVB.Adjusted + I(ZIVB.Adjusted^2) + I(ZIVB.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-ZIVB.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(ZIVB_rets$ZIVB.Adjusted), y=mean(MO_rets$SVXY.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$SVXY.Adjusted,ZIVB_rets$ZIVB.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$SVXY.Adjusted) * length(MO_rets$SVXY.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$SVXY.Adjusted) * round(sqrt(length(MO_rets$SVXY.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(ZIVB_rets$ZIVB.Adjusted) * length(ZIVB_rets$ZIVB.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(ZIVB_rets$ZIVB.Adjusted) * round(sqrt(length(ZIVB_rets$ZIVB.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$SVXY.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$SVXY.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(ZIVB_rets$ZIVB.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(ZIVB_rets$ZIVB.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$SVXY.Adjusted < 0 & data$ZIVB.Adjusted > 0,]) +
nrow(data[data$SVXY.Adjusted > 0 & data$ZIVB.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off ZIVBgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$SVXY.Adjusted > 0 & data$ZIVB.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$SVXY.Adjusted < 0 & data$ZIVB.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$SVXY.Adjusted > 0 & data$ZIVB.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$SVXY.Adjusted < 0 & data$ZIVB.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('WEEL','SPY')
# date = Sys.Date() - 365 #
date = Sys.Date() - 5 # (365*1) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(WEEL$WEEL.Adjusted / shift(WEEL$WEEL.Adjusted) - 1)
SPY_rets = na.omit(SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1)
data = data.frame(MO_rets$WEEL.Adjusted, SPY_rets$SPY.Adjusted)
data = data[order(data$SPY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SPY.Adjusted-rf, data$WEEL.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SPY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(WEEL.Adjusted-rf)~I(SPY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SPY.Adjusted + I(SPY.Adjusted^2) + I(SPY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SPY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SPY_rets$SPY.Adjusted), y=mean(MO_rets$WEEL.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$WEEL.Adjusted,SPY_rets$SPY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$WEEL.Adjusted) * length(MO_rets$WEEL.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$WEEL.Adjusted) * round(sqrt(length(MO_rets$WEEL.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * length(SPY_rets$SPY.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * round(sqrt(length(SPY_rets$SPY.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$WEEL.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$WEEL.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$WEEL.Adjusted < 0 & data$SPY.Adjusted > 0,]) +
nrow(data[data$WEEL.Adjusted > 0 & data$SPY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off SPYgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$WEEL.Adjusted > 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$WEEL.Adjusted < 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$WEEL.Adjusted > 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$WEEL.Adjusted < 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
View(SPY_rets)
View(MO_rets)
View(SPY_rets)
View(MO_rets)
View(SPY_rets)
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('ZIVB','SPY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*1) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(ZIVB$ZIVB.Adjusted / shift(ZIVB$ZIVB.Adjusted) - 1)
SPY_rets = na.omit(SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1)
data = data.frame(MO_rets$ZIVB.Adjusted, SPY_rets$SPY.Adjusted)
data = data[order(data$SPY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SPY.Adjusted-rf, data$ZIVB.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SPY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(ZIVB.Adjusted-rf)~I(SVXY.Adjusted-rf), data = data)
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('ZIVB','SVXY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*1) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(ZIVB$ZIVB.Adjusted / shift(ZIVB$ZIVB.Adjusted) - 1)
SVXY_rets = na.omit(SVXY$SVXY.Adjusted / shift(SVXY$SVXY.Adjusted) - 1)
data = data.frame(MO_rets$ZIVB.Adjusted, SVXY_rets$SVXY.Adjusted)
data = data[order(data$SVXY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SVXY.Adjusted-rf, data$ZIVB.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SVXY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(ZIVB.Adjusted-rf)~I(SVXY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SVXY.Adjusted + I(SVXY.Adjusted^2) + I(SVXY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SVXY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SVXY_rets$SVXY.Adjusted), y=mean(MO_rets$ZIVB.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$ZIVB.Adjusted,SVXY_rets$SVXY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * length(MO_rets$ZIVB.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * round(sqrt(length(MO_rets$ZIVB.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(SVXY_rets$SVXY.Adjusted) * length(SVXY_rets$SVXY.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(SVXY_rets$SVXY.Adjusted) * round(sqrt(length(SVXY_rets$SVXY.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SVXY_rets$SVXY.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SVXY_rets$SVXY.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$ZIVB.Adjusted < 0 & data$SVXY.Adjusted > 0,]) +
nrow(data[data$ZIVB.Adjusted > 0 & data$SVXY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off SVXYgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$ZIVB.Adjusted > 0 & data$SVXY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$ZIVB.Adjusted < 0 & data$SVXY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$ZIVB.Adjusted > 0 & data$SVXY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$ZIVB.Adjusted < 0 & data$SVXY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('ZIVB','SVXY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*.35) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(ZIVB$ZIVB.Adjusted / shift(ZIVB$ZIVB.Adjusted) - 1)
SVXY_rets = na.omit(SVXY$SVXY.Adjusted / shift(SVXY$SVXY.Adjusted) - 1)
data = data.frame(MO_rets$ZIVB.Adjusted, SVXY_rets$SVXY.Adjusted)
data = data[order(data$SVXY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SVXY.Adjusted-rf, data$ZIVB.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SVXY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(ZIVB.Adjusted-rf)~I(SVXY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SVXY.Adjusted + I(SVXY.Adjusted^2) + I(SVXY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SVXY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SVXY_rets$SVXY.Adjusted), y=mean(MO_rets$ZIVB.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$ZIVB.Adjusted,SVXY_rets$SVXY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * length(MO_rets$ZIVB.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * round(sqrt(length(MO_rets$ZIVB.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(SVXY_rets$SVXY.Adjusted) * length(SVXY_rets$SVXY.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(SVXY_rets$SVXY.Adjusted) * round(sqrt(length(SVXY_rets$SVXY.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$ZIVB.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$ZIVB.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SVXY_rets$SVXY.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SVXY_rets$SVXY.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$ZIVB.Adjusted < 0 & data$SVXY.Adjusted > 0,]) +
nrow(data[data$ZIVB.Adjusted > 0 & data$SVXY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off SVXYgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$ZIVB.Adjusted > 0 & data$SVXY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$ZIVB.Adjusted < 0 & data$SVXY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$ZIVB.Adjusted > 0 & data$SVXY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$ZIVB.Adjusted < 0 & data$SVXY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('GLD','SPY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*.35) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(GLD$GLD.Adjusted / shift(GLD$GLD.Adjusted) - 1)
SPY_rets = na.omit(SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1)
data = data.frame(MO_rets$GLD.Adjusted, SPY_rets$SPY.Adjusted)
data = data[order(data$SPY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SPY.Adjusted-rf, data$GLD.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SPY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(GLD.Adjusted-rf)~I(SPY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SPY.Adjusted + I(SPY.Adjusted^2) + I(SPY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SPY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SPY_rets$SPY.Adjusted), y=mean(MO_rets$GLD.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$GLD.Adjusted,SPY_rets$SPY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$GLD.Adjusted) * length(MO_rets$GLD.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$GLD.Adjusted) * round(sqrt(length(MO_rets$GLD.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * length(SPY_rets$SPY.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * round(sqrt(length(SPY_rets$SPY.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$GLD.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$GLD.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$GLD.Adjusted < 0 & data$SPY.Adjusted > 0,]) +
nrow(data[data$GLD.Adjusted > 0 & data$SPY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off SPYgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$GLD.Adjusted > 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$GLD.Adjusted < 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$GLD.Adjusted > 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$GLD.Adjusted < 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('GLD','SPY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*1) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DMO3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DMO3MO[nrow(DMO3MO),]) / 100
rf=0
MO_rets = na.omit(GLD$GLD.Adjusted / shift(GLD$GLD.Adjusted) - 1)
SPY_rets = na.omit(SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1)
data = data.frame(MO_rets$GLD.Adjusted, SPY_rets$SPY.Adjusted)
data = data[order(data$SPY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SPY.Adjusted-rf, data$GLD.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SPY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(GLD.Adjusted-rf)~I(SPY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SPY.Adjusted + I(SPY.Adjusted^2) + I(SPY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SPY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SPY_rets$SPY.Adjusted), y=mean(MO_rets$GLD.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(MO_rets$GLD.Adjusted,SPY_rets$SPY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * 252 * 100,2)) #annualized
# cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$GLD.Adjusted) * length(MO_rets$GLD.Adjusted) * 100,2))
# cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$GLD.Adjusted) * round(sqrt(length(MO_rets$GLD.Adjusted))) * 100,2))
# cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * length(SPY_rets$SPY.Adjusted) * 100,2))
# cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * round(sqrt(length(SPY_rets$SPY.Adjusted))) * 100),2)
cat(paste(tickers[1],'Mean: '), round(mean(MO_rets$GLD.Adjusted) * 252 * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(MO_rets$GLD.Adjusted) * sqrt(252) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * 252 * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * sqrt(252) * 100),2)
prob_error = (nrow(data[data$GLD.Adjusted < 0 & data$SPY.Adjusted > 0,]) +
nrow(data[data$GLD.Adjusted > 0 & data$SPY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off SPYgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$GLD.Adjusted > 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$GLD.Adjusted < 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$GLD.Adjusted > 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$GLD.Adjusted < 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
install.packages("installr")
library(installr)
updateR()
setwd("C:/RedXCapital/Market Analysis")
