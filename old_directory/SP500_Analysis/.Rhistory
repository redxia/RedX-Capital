axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
library(dplyr)
symbols <- c("^GSPC","^VIX")
getSymbols(symbols, from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
getSymbols("TLT", from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
TLT=to.period(TLT, period='months')
TLT$Returns=TLT$TLT.Adjusted/shift(TLT$TLT.Adjusted) -1
View(TLT)
mean(TLT$Returns, na.rm=TRUE)
sd(TLT$Returns, na.rm=TRUE)
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
library(dplyr)
symbols <- c("HYG","^VIX")
getSymbols(symbols, from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
HYG=to.period(HYG)
VIX=to.period(VIX)
# HYG=to.period(HYG, period='years')
# VIX=to.period(VIX, period='years')
HYG$Returns=HYG$HYG.Adjusted/shift(HYG$HYG.Adjusted) -1
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
library(dplyr)
symbols <- c("LQD","^VIX")
getSymbols(symbols, from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
LQD=to.period(LQD)
VIX=to.period(VIX)
# LQD=to.period(LQD, period='years')
# VIX=to.period(VIX, period='years')
LQD$Returns=LQD$LQD.Adjusted/shift(LQD$LQD.Adjusted) -1
View(HYG)
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
library(dplyr)
symbols <- c("TLT","^VIX")
getSymbols(symbols, from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
TLT=to.period(TLT)
VIX=to.period(VIX)
# TLT=to.period(TLT, period='years')
# VIX=to.period(VIX, period='years')
TLT$Returns=TLT$TLT.Adjusted/shift(TLT$TLT.Adjusted) -1
mean(HYG,na.rm=TRUE)
sd(HYG, na.rm=TRUE)
mean(LQD, na.rm=TRUE)
sd(LQD, na.rm=TRUE)
mean(TLT, na.rm=TRUE)
sd(TLT, na.rm=TRUE)
mean(HYG$Returns,na.rm=TRUE)
sd(HYG$Returns, na.rm=TRUE)
mean(LQD$Returns, na.rm=TRUE)
sd(LQD$Returns, na.rm=TRUE)
mean(TLT$Returns, na.rm=TRUE)
sd(TLT$Returns, na.rm=TRUE)
mean(HYG$Returns,na.rm=TRUE)
sd(HYG$Returns, na.rm=TRUE)
mean(HYG$Returns,na.rm=TRUE)/sd(HYG$Returns, na.rm=TRUE)
mean(LQD$Returns, na.rm=TRUE)
sd(LQD$Returns, na.rm=TRUE)
mean(LQD$Returns, na.rm=TRUE)/sd(LQD$Returns, na.rm=TRUE)
mean(TLT$Returns, na.rm=TRUE)
sd(TLT$Returns, na.rm=TRUE)
mean(TLT$Returns, na.rm=TRUE)/sd(TLT$Returns, na.rm=TRUE)
View(LQD)
mean(HYG$Returns,na.rm=TRUE)
median(HYG$Returns,na.rm=TRUE)
sd(HYG$Returns, na.rm=TRUE)
mean(HYG$Returns,na.rm=TRUE)/sd(HYG$Returns, na.rm=TRUE)
mean(LQD$Returns, na.rm=TRUE)
median(LQD$Returns, na.rm=TRUE)
sd(LQD$Returns, na.rm=TRUE)
mean(LQD$Returns, na.rm=TRUE)/sd(LQD$Returns, na.rm=TRUE)
mean(TLT$Returns, na.rm=TRUE)
median(TLT$Returns, na.rm=TRUE)
sd(TLT$Returns, na.rm=TRUE)
mean(TLT$Returns, na.rm=TRUE)/sd(TLT$Returns, na.rm=TRUE)
mean(HYG$Returns,na.rm=TRUE)
median(HYG$Returns,na.rm=TRUE)
sd(HYG$Returns, na.rm=TRUE)
mean(HYG$Returns,na.rm=TRUE)/sd(HYG$Returns, na.rm=TRUE)
mean(LQD$Returns, na.rm=TRUE)
median(LQD$Returns, na.rm=TRUE)
sd(LQD$Returns, na.rm=TRUE)
mean(LQD$Returns, na.rm=TRUE)/sd(LQD$Returns, na.rm=TRUE)
mean(TLT$Returns, na.rm=TRUE)
median(TLT$Returns, na.rm=TRUE)
sd(TLT$Returns, na.rm=TRUE)
mean(TLT$Returns, na.rm=TRUE)/sd(TLT$Returns, na.rm=TRUE)
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
library(dplyr)
symbols <- c("^GSPC","^VIX")
getSymbols(symbols, from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
GSPC=to.period(GSPC)
View(GSPC)
GSPC$Returns=GSPC$GSPC.Adjusted/shift(GSPC$GSPC.Adjusted) -1
View(GSPC)
GSPC[nrow(GSPC),]
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
library(dplyr)
symbols <- c("^GSPC","^VIX")
getSymbols(symbols, from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
GSPC=to.period(GSPC)
VIX=to.period(VIX)
# GSPC=to.period(GSPC, period='years')
# VIX=to.period(VIX, period='years')
GSPC$Returns=GSPC$GSPC.Adjusted/shift(GSPC$GSPC.Adjusted) -1
# avgRet <- function(x){
#   return(prod(x + 1))
# }
# GSPC$Returns <- rollapply(GSPC$Returns, width = 5, FUN = avgRet)-1
# GSPC$Returns <- c(rep(NA,2),rollapply(GSPC$Returns, width = 3, FUN = avgRet))-1
GSPC=data.frame(GSPC)
GSPC$Date=as.Date(rownames(GSPC))
VIX=data.frame(VIX)
VIX$Date=as.Date(rownames(VIX))
sp500_vix=merge(VIX, GSPC[c("Date","Returns")], by='Date', all.x=TRUE)
sp500_vix=na.omit(sp500_vix)
decile_amt=5
sp500_vix$vix_decile=ntile(sp500_vix$VIX.Adjusted,decile_amt)
View(sp500_vix)
View(GSPC)
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('JEPI','SPY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*2) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DJEPI3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DJEPI3MO[nrow(DJEPI3MO),]) / 100
rf=0
JEPI_rets = na.omit(JEPI$JEPI.Close / shift(JEPI$JEPI.Close) - 1)
SPY_rets = na.omit(SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1)
data = data.frame(JEPI_rets$JEPI.Close, SPY_rets$SPY.Adjusted)
data = data[order(data$SPY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SPY.Adjusted-rf, data$JEPI.Close-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SPY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(JEPI.Close-rf)~I(SPY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SPY.Adjusted + I(SPY.Adjusted^2) + I(SPY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SPY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SPY_rets$SPY.Adjusted), y=mean(JEPI_rets$JEPI.Close), col='darkred', pch=22,lwd=4)
stock_cor = cor(JEPI_rets$JEPI.Close,SPY_rets$SPY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * length(JEPI_rets$JEPI.Close) * 100,2)) #annualized
cat(paste(tickers[1],'Mean: '), round(mean(JEPI_rets$JEPI.Close) * length(JEPI_rets$JEPI.Close) * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(JEPI_rets$JEPI.Close) * sqrt(length(JEPI_rets$JEPI.Close)) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * length(SPY_rets$SPY.Adjusted) * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * sqrt(length(SPY_rets$SPY.Adjusted)) * 100),2)
prob_error = (nrow(data[data$JEPI.Close < 0 & data$SPY.Adjusted > 0,]) +
nrow(data[data$JEPI.Close > 0 & data$SPY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off SPYgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$JEPI.Close > 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$JEPI.Close < 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$JEPI.Close > 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$JEPI.Close < 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('JEPi','SPY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*2) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DJEPi3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DJEPi3MO[nrow(DJEPi3MO),]) / 100
rf=0
JEPi_rets = na.omit(JEPi$JEPi.Adjusted / shift(JEPi$JEPi.Adjusted) - 1)
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('JEPI','SPY')
# date = Sys.Date() - 365 #
date = Sys.Date() - (365*2) #
# date = Sys.Date() - 183 #
# date = Sys.Date() - 88 #
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
# getSymbols('DJEPI3MO', src='FRED', from=date, to = Sys.Date()+1)
#rf = as.numeric(DJEPI3MO[nrow(DJEPI3MO),]) / 100
rf=0
JEPI_rets = na.omit(JEPI$JEPI.Adjusted / shift(JEPI$JEPI.Adjusted) - 1)
SPY_rets = na.omit(SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1)
data = data.frame(JEPI_rets$JEPI.Adjusted, SPY_rets$SPY.Adjusted)
data = data[order(data$SPY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SPY.Adjusted-rf, data$JEPI.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SPY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(JEPI.Adjusted-rf)~I(SPY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SPY.Adjusted + I(SPY.Adjusted^2) + I(SPY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SPY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SPY_rets$SPY.Adjusted), y=mean(JEPI_rets$JEPI.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(JEPI_rets$JEPI.Adjusted,SPY_rets$SPY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * length(JEPI_rets$JEPI.Adjusted) * 100,2)) #annualized
cat(paste(tickers[1],'Mean: '), round(mean(JEPI_rets$JEPI.Adjusted) * length(JEPI_rets$JEPI.Adjusted) * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(JEPI_rets$JEPI.Adjusted) * sqrt(length(JEPI_rets$JEPI.Adjusted)) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * length(SPY_rets$SPY.Adjusted) * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * sqrt(length(SPY_rets$SPY.Adjusted)) * 100),2)
prob_error = (nrow(data[data$JEPI.Adjusted < 0 & data$SPY.Adjusted > 0,]) +
nrow(data[data$JEPI.Adjusted > 0 & data$SPY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off SPYgonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$JEPI.Adjusted > 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$JEPI.Adjusted < 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$JEPI.Adjusted > 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$JEPI.Adjusted < 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=3
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
symbols <- "SPY"
rolling_amt=5
SPY <- getSymbols("SPY", from=Sys.Date()-(365*2), to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
par(mfrow=c(2,1))
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SPY Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,rolling_amt-1),rollapply(SPY$Returns, width = rolling_amt, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SPY/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.01))
abline(h = seq(-.2,.15,.01),v=seq(1,252*2,21))
library(quantmod)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
library(dplyr)
symbols <- c("^GSPC","^VIX")
getSymbols(symbols, from=Sys.Date()-(365*150), to = Sys.Date()+1, verbose = FALSE)
setwd("C:/RedXCapital/SP500_Analysis")
write.csv(GSPC)
write.csv(GSPC,"GSPC.csv")
GSPC$Date <- rownames(GSPC)
write.csv(GSPC,"GSPC.csv", row.names=FALSE)
View(GSPC)
GSPC=data.frame(GSPC)
GSPC$Date <- rownames(GSPC)
write.csv(GSPC,"GSPC.csv", row.names=FALSE)
