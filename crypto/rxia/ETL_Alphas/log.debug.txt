2021-11-04 12:02:31,242 | MainThread | DEBUG | init_logger | root | Logging configured

2021-11-04 12:02:31,243 | MainThread | INFO | <module> | gp.settings | SETTINGS FILE: settings.rx.json

2021-11-04 12:02:31,245 | MainThread | DEBUG | <module> | gp.settings | settings: {
    "email.enabled": false,
    "snowflake.debug": true
}

2021-11-04 12:02:33,030 | MainThread | DEBUG | __init__ | snowflake.connector.converter_issue23517 | initialized

2021-11-04 12:02:33,030 | MainThread | DEBUG | from_int | snowflake.connector.vendored.urllib3.util.retry | Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)

2021-11-04 12:02:33,030 | MainThread | DEBUG | from_int | snowflake.connector.vendored.urllib3.util.retry | Converted retries value: 1 -> Retry(total=1, connect=None, read=None, redirect=None, status=None)

2021-11-04 12:02:33,032 | MainThread | DEBUG | _new_conn | snowflake.connector.vendored.urllib3.connectionpool | Starting new HTTPS connection (1): guidepoint.snowflakecomputing.com:443

2021-11-04 12:02:33,440 | MainThread | DEBUG | reset_cache_dir | snowflake.connector.ocsp_snowflake | cache directory: C:\Users\redmond.xia\AppData\Local\Snowflake\Caches

2021-11-04 12:02:33,483 | MainThread | DEBUG | reset_ocsp_response_cache_uri | snowflake.connector.ocsp_snowflake | ocsp_response_cache_uri: file://C:/Users/redmond.xia/AppData/Local/Snowflake/Caches/ocsp_response_cache.json

2021-11-04 12:02:33,483 | MainThread | DEBUG | reset_ocsp_response_cache_uri | snowflake.connector.ocsp_snowflake | OCSP_VALIDATION_CACHE size: 0

2021-11-04 12:02:33,483 | MainThread | DEBUG | reset_ocsp_dynamic_cache_server_url | snowflake.connector.ocsp_snowflake | OCSP response cache server is enabled: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json

2021-11-04 12:02:33,483 | MainThread | DEBUG | reset_ocsp_dynamic_cache_server_url | snowflake.connector.ocsp_snowflake | OCSP dynamic cache server RETRY URL: None

2021-11-04 12:02:33,483 | MainThread | DEBUG | check_ocsp_response_cache_lock_dir | snowflake.connector.ocsp_snowflake | The cache is older than 1 day. Deleted the cache file: C:/Users/redmond.xia/AppData/Local/Snowflake/Caches/ocsp_response_cache.json

2021-11-04 12:02:33,483 | MainThread | DEBUG | read_ocsp_response_cache_file | snowflake.connector.ocsp_snowflake | Failed to locate OCSP response cache file. No worry. It will validate with OCSP server: C:/Users/redmond.xia/AppData/Local/Snowflake/Caches/ocsp_response_cache.json

2021-11-04 12:02:33,484 | MainThread | DEBUG | validate | snowflake.connector.ocsp_snowflake | validating certificate: guidepoint.snowflakecomputing.com

2021-11-04 12:02:33,499 | MainThread | DEBUG | find_cache | snowflake.connector.ocsp_snowflake | not hit cache for subject: OrderedDict([('common_name', '*.us-west-2.snowflakecomputing.com')])

2021-11-04 12:02:33,499 | MainThread | DEBUG | _download_ocsp_response_cache | snowflake.connector.ocsp_snowflake | started downloading OCSP response cache file: http://ocsp.snowflakecomputing.com/ocsp_response_cache.json

2021-11-04 12:02:33,686 | MainThread | DEBUG | _download_ocsp_response_cache | snowflake.connector.ocsp_snowflake | ended downloading OCSP response cache file. elapsed time: 0.1865382194519043s

2021-11-04 12:02:33,686 | MainThread | DEBUG | download_cache_from_server | snowflake.connector.ocsp_snowflake | downloaded OCSP response cache file from http://ocsp.snowflakecomputing.com/ocsp_response_cache.json

2021-11-04 12:02:33,686 | MainThread | DEBUG | download_cache_from_server | snowflake.connector.ocsp_snowflake | # of certificates: 154

2021-11-04 12:02:33,687 | MainThread | DEBUG | find_cache | snowflake.connector.ocsp_snowflake | hit cache for subject: OrderedDict([('common_name', '*.us-west-2.snowflakecomputing.com')])

2021-11-04 12:02:33,688 | MainThread | DEBUG | validate_by_direct_connection | snowflake.connector.ocsp_snowflake | using OCSP response cache

2021-11-04 12:02:33,712 | MainThread | DEBUG | find_cache | snowflake.connector.ocsp_snowflake | hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('organizational_unit_name', 'Server CA 1B'), ('common_name', 'Amazon')])

2021-11-04 12:02:33,712 | MainThread | DEBUG | validate_by_direct_connection | snowflake.connector.ocsp_snowflake | using OCSP response cache

2021-11-04 12:02:33,717 | MainThread | DEBUG | find_cache | snowflake.connector.ocsp_snowflake | hit cache for subject: OrderedDict([('country_name', 'US'), ('organization_name', 'Amazon'), ('common_name', 'Amazon Root CA 1')])

2021-11-04 12:02:33,718 | MainThread | DEBUG | validate_by_direct_connection | snowflake.connector.ocsp_snowflake | using OCSP response cache

2021-11-04 12:02:33,724 | MainThread | DEBUG | find_cache | snowflake.connector.ocsp_snowflake | hit cache for subject: OrderedDict([('country_name', 'US'), ('state_or_province_name', 'Arizona'), ('locality_name', 'Scottsdale'), ('organization_name', 'Starfield Technologies, Inc.'), ('common_name', 'Starfield Services Root Certificate Authority - G2')])

2021-11-04 12:02:33,725 | MainThread | DEBUG | validate_by_direct_connection | snowflake.connector.ocsp_snowflake | using OCSP response cache

2021-11-04 12:02:33,729 | MainThread | DEBUG | write_ocsp_response_cache_file | snowflake.connector.ocsp_snowflake | writing OCSP response cache file to C:/Users/redmond.xia/AppData/Local/Snowflake/Caches/ocsp_response_cache.json

2021-11-04 12:02:33,729 | MainThread | DEBUG | encode_ocsp_response_cache | snowflake.connector.ocsp_snowflake | encoding OCSP response cache to JSON

2021-11-04 12:02:33,745 | MainThread | DEBUG | _validate | snowflake.connector.ocsp_snowflake | ok

2021-11-04 12:02:34,579 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /session/v1/login-request?request_id=48de1e28-908a-49cd-ae87-91f1ae791642&warehouse=vader&roleName=analyst&request_guid=eac9eb18-a928-440f-890c-cd2f4e6534c6 HTTP/1.1" 200 1429

2021-11-04 12:02:34,580 | MainThread | DEBUG | connect | gp.snowflake | Snowflake Connector Version: 2.3.10

2021-11-04 12:02:34,580 | MainThread | DEBUG | connect | gp.snowflake | Snowflake Connected: user=rxia

2021-11-04 12:02:34,580 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    select rawdata.metadata.job_run_id.nextval as run_id

2021-11-04 12:02:34,950 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8cb55b90-c9df-4339-be28-13f256335f5f&request_guid=6d2dcaf7-5063-40cb-bf6e-860f38b89b5f HTTP/1.1" 200 1005

2021-11-04 12:02:34,952 | MainThread | INFO | get_run_id | gp.runlog | RUN_ID: 51782

2021-11-04 12:02:34,953 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    alter session set query_tag='RUN_ID=51782'

2021-11-04 12:02:36,181 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3f949956-1c23-42fc-b552-9ebf32200808&request_guid=ad766743-9b8f-4734-8cf8-abd63a2b331d HTTP/1.1" 200 1011

2021-11-04 12:02:36,182 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    set current_run_id=51782::number

2021-11-04 12:02:36,381 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1b151f86-2649-4b92-99f2-74c0a38b6f80&request_guid=cc851aa2-4ebd-4a46-8eaf-5606dff620bd HTTP/1.1" 200 1013

2021-11-04 12:02:36,766 | MainThread | DEBUG | _initialize | gp.job | Python Version: 3.8.7 (tags/v3.8.7:6503f05, Dec 21 2020, 17:59:51) [MSC v.1928 64 bit (AMD64)]

2021-11-04 12:02:36,899 | MainThread | DEBUG | _initialize | gp.job | Working Directory: C:\dev\da.research\personal\rxia\ETL_Alphas

2021-11-04 12:02:36,899 | MainThread | DEBUG | _initialize | gp.job | Username=redmond.xia, Hostname=GP-BSX70Z2, Host IP=192.168.0.14, External IP=<!DOCTYPE HTML>
<html lang="en-US">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1" />
  <meta name="robots" content="noindex, nofollow" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Just a moment...</title>
  <style type="text/css">
    html, body {width: 100%; height: 100%; margin: 0; padding: 0;}
    body {background-color: #ffffff; color: #000000; font-family:-apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, "Helvetica Neue",Arial, sans-serif; font-size: 16px; line-height: 1.7em;-webkit-font-smoothing: antialiased;}
    h1 { text-align: center; font-weight:700; margin: 16px 0; font-size: 32px; color:#000000; line-height: 1.25;}
    p {font-size: 20px; font-weight: 400; margin: 8px 0;}
    p, .attribution, {text-align: center;}
    #spinner {margin: 0 auto 30px auto; display: block;}
    .attribution {margin-top: 32px;}
    @keyframes fader     { 0% {opacity: 0.2;} 50% {opacity: 1.0;} 100% {opacity: 0.2;} }
    @-webkit-keyframes fader { 0% {opacity: 0.2;} 50% {opacity: 1.0;} 100% {opacity: 0.2;} }
    #cf-bubbles > .bubbles { animation: fader 1.6s infinite;}
    #cf-bubbles > .bubbles:nth-child(2) { animation-delay: .2s;}
    #cf-bubbles > .bubbles:nth-child(3) { animation-delay: .4s;}
    .bubbles { background-color: #f58220; width:20px; height: 20px; margin:2px; border-radius:100%; display:inline-block; }
    a { color: #2c7cb0; text-decoration: none; -moz-transition: color 0.15s ease; -o-transition: color 0.15s ease; -webkit-transition: color 0.15s ease; transition: color 0.15s ease; }
    a:hover{color: #f4a15d}
    .attribution{font-size: 16px; line-height: 1.5;}
    .ray_id{display: block; margin-top: 8px;}
    #cf-wrapper #challenge-form { padding-top:25px; padding-bottom:25px; }
    #cf-hcaptcha-container { text-align:center;}
    #cf-hcaptcha-container iframe { display: inline-block;}
  </style>

      <meta http-equiv="refresh" content="35">
  <script type="text/javascript">
    //<![CDATA[
    (function(){
      
      window._cf_chl_opt={
        cvId: "2",
        cType: "non-interactive",
        cNounce: "81018",
        cRay: "6a8f114f9c6ae6c0",
        cHash: "79988cb35e5086f",
        cPMDTk: "",
        cFPWv: "b",
        cTTimeMs: "1000",
        cRq: {
          ru: "aHR0cHM6Ly9pcGFwaS5jby9pcC8=",
          ra: "cHl0aG9uLXJlcXVlc3RzLzIuMjUuMQ==",
          rm: "R0VU",
          d: "OaZF6jBWodjKhBXHoze6V3lQzpcbtslrkBvN/slDIjOY20HZ3bbXWIVvcZ/5LCUyL0RiHacn9jowcww/vKuFcHKdwM+wUBflGg1qWvzqBfNH8y0Ux5MrsgcKVucgatUyRtn2OyAW91ovZVhMN+YAzs0g4XAa6rgPqTTmS43ltrX+HT7falBEvH6oc7R6yasx+L1WmhCIiFWgEbsRoVMlWSkuSWIWQ35mpGyf96kpYRrKTiqWwR5SonEoFbUCj/Fp0XpEo/HmOKYjMAMYg5LRldBXrQXA52L3ySRkLhPtyDNAkdM4ZW5ywedIqYxC/31iLYXT+m/lrcp6o/pfYBscZozXn8AiXrLY43DaanCGc5TTgFYxc8S1LET6i2sNK1lWDH6Tdh9U776HbWZVCS4AurUKygqqINWvKSnxBQxJpltWCh/smM0h8Z7GnQe+JZMF1zXerzCxfZf8ol8/FXrZvO1tXuHH0HHD7k9K8hpCdGNdZKkXP3TlmNQ7iHqRy6/s+4AdJKkKLzSuiCzRquLoB5bDbimtX9+Y2iumNHTbomz6a5J9ad/GTaLqxYVydaFK",
          t: "MTYzNjA0MTc1Ni4xMTEwMDA=",
          m: "GUEB34gQFOjxtzxl4uTOLx3AkdjovOzaPfQkugUM3RU=",
          i1: "037I5+olSBz6ZJunB65ldA==",
          i2: "dLQQj2L32U2DF/QvfmB0NA==",
          zh: "ehhURLEN7D1vmSeD1BoitpJLkHang/UmzauCWNPXHvs=",
          uh: "5GU+jYv2xJ+bCaE/ARmi/DORbiS/v56CW7E0TH4XWQk=",
          hh: "YdUqYPZUvPfXwCP5KDdC12lOuVGuzQskNEUHhqHTVPY=",
        }
      }
      window._cf_chl_enter = function(){window._cf_chl_opt.p=1};
      
    })();
    //]]>
  </script>
  

</head>
<body>
  <table width="100%" height="100%" cellpadding="20">
    <tr>
      <td align="center" valign="middle">
          <div class="cf-browser-verification cf-im-under-attack">
  <noscript>
    <h1 data-translate="turn_on_js" style="color:#bd2426;">Please turn JavaScript on and reload the page.</h1>
  </noscript>
  <div id="cf-content" style="display:none">
    
    <div id="cf-bubbles">
      <div class="bubbles"></div>
      <div class="bubbles"></div>
      <div class="bubbles"></div>
    </div>
    <h1><span data-translate="checking_browser">Checking your browser before accessing</span> ipapi.co.</h1>
    
    <div id="no-cookie-warning" class="cookie-warning" data-translate="turn_on_cookies" style="display:none">
      <p data-translate="turn_on_cookies" style="color:#bd2426;">Please enable Cookies and reload the page.</p>
    </div>
    <p data-translate="process_is_automatic">This process is automatic. Your browser will redirect to your requested content shortly.</p>
    <p data-translate="allow_5_secs" id="cf-spinner-allow-5-secs" >Please allow up to 5 seconds&hellip;</p>
    <p data-translate="redirecting" id="cf-spinner-redirecting" style="display:none">Redirecting&hellip;</p>
  </div>
   
  <form class="challenge-form" id="challenge-form" action="/ip/?__cf_chl_jschl_tk__=dWIk0OT8QIYXonX9wzB_WUlPYyMCd_nhfFvXKREwRS4-1636041756-0-gaNycGzNBtE" method="POST" enctype="application/x-www-form-urlencoded">
    <input type="hidden" name="md" value="cwGeCkZetaH6ItmAVKFd3qHmLECbaTzbqJ.8_NwSPjo-1636041756-0-AbrnmG91RLXewRw4I7Rk7MQ_d4xtwhNC31Ic9D51-WQ_AZWbSqyWVYEHGsVvYrheQxStw5eiUhuOWwzAK1QOjlLhWmjiJdx-Uis4XTwvM6Sl4x7qnWkAqOryhINiR5OHF7f3I8BW37uANGAgW-21SIwc9-KU5LZeR4i8k5cbGLE8zA1dlzyJetIVcGCRfWjMhpsUctUPttlYUJqk2snZCmKL_hoihoZ3JTjL1gdzs7NUXXZnrz8uTtk4SBX4yqR0myaZFjJ7sy2FveoOrl-y5s7hzdel23zJiCHj9316L3sWiL0E2D6W48MJyONQyrxGZBu3A7xKZ73WNg9oBoHuS4PJaMAYToRAHjtz8njFySQ4tw_db5UAOgr4rzuOykTeprwB1TqmLPWMqs0Vu86Tt8LqXTfF2RdhzMWy36OZMVcbhima-RZJSWcS50s0TM9W0qATogexLW9VtJQ0cPs83OecCLuwg_QnMaambcZKLkvm2GI6Y85pU0-AYZDV-NFbjrA4jKh2qVHEPx_kUAJObaI" />
    <input type="hidden" name="r" value="cdhMh6cKTZpXnWhSXhEbLuz_sgv0J7y4Y65KsBaXj7U-1636041756-0-AZCS79pQ4YbBKTAjnLbhVLUZWZ31qrFoedx4Cxnl4DMKINbs3ADXqLWfKzQ4wRBVeB4+xZbBK8TbMuy1KT46tTYla+c+4/PSLxrfNkxPtwKp3loN1PPGA/N0BfeCNj57sVYcOuylGp8S/tA8/8KP/KR6reiKnsQjUiBxAMpgBhbsg/m9zU2pdXuKUJO6iJDLHMse8P2BonFrPbdwopsLpjNpg4Zz4gNU90mxCTkD4y0KX/47g8jdst7B174IfLpDZDzqrm+Ijw1/YI0zgtDAY+mgWdnp8iW5VN0HNjEY2vbGWz72CzzU+JlomU2vO6AYSbgOZv0w4PEro1ddy5JAo5l4KobG7pjfHnGt9EP/3qU8Y9HnU1vSZ0KhiJzyII2xk5TmCe2q95FI4Lfh40J1gN2P3yjp8wWobwqY/sf3gzD2rdJKUBiBTR7//Y2MwzH1isJpsLQJI2cpn3YW3DUrI12ZjlnZPtb+jejWRdtLH7siTpq1epFHQkn4EyL1baeJEYrRIVFj5UX9i8v2PxvAEdFjHoGiYy3TFtdNO1vgG5tyIBebTzqqd9ruA+N8H908WI5HeoobgDTi8CMhjmxGWp42EtJyMAGZH9jlh1xJs8mn2Zxq7fZpscGinKh2pCbI71PDKqM8tnaQ61NJbsC7TCcUvmnUP6QUpo19IkSVPxm6NoORMAo/nV0BCsQmzmtLFh+MwZzeb+HANXkmW09jz2yeMtR/JGh7mQ6t5G01DNQr/yiiBbeZZUJ5kyMmx+d2nb/7TVFQPSbVF+OHElcETEz6u9g1Jzc/5n7fuGhX3gUgpf+ffqWOWm9LIErmoROxNAnkUxldDKxbwHkKk1+SXY5wkoG1nceNdJ3Vyr023gb2yaMnHwlHMVVj74Jowhg8rCrki3pdO/mTpJG2oBkzdIi7zWDRWRuCzLvkr4fWuxlXXlU557xrqfBzqf3QnXKddzYl0xrySnZACqO97P1Vu6+DrfxPO/9IxNFMWGOsWAekOZP4ktyWbQJ43jrlIhvB/OsyPvEpM/YTU837t8TdkEM+6qw7j3vJxaueUINHAnXi9DNQjXWA3Zm5oIVloKPIlcFleJ23PJu2YzFM3K+wcFLXfABirS6YnzYBtwqZtU3tmwRSRc8iLR/16pjQSLBbmf7ACpkR/NmyQdiSBjHII4Wwz+wfdi2MOkm3k6qrY/vZl0+iYFih1eay78BMAELqK27G1HJatYw3MV4tCiGxorX7dSLNj+OaclvuyfYfyIk4u6HPJXNidWQUCy0tAX6pnYecao3/qhSXalermjN+M7NlgdK+WzLxQLyWJSX2EyINzaSZRQg8bsOSrJBL40rJ4fYW2u3f7FLw9U0WDyqjJ4GEHvW2IH3/jEy0Hs+RLgvhrSt/yLHlb1XrgfYztt3jZvEzfosUTbh9j+5nYtTxyhqfjAnP/QhMfl3SxMBv2Ee418L0tnsV5II5GDbsWA0BualuNOCIARx6LfJz5O0W/gIH1pd52PBGNlYj9sC4225or5dom0E7b/kT7Nj1k+BBBLePwp+9kXatUZoVh8pbZL4WHzHcDpCGREFyxZEtfCS0c2yNaFYt/fvbwRMp/lxzlXUPQbeMizGj5+P+As8KpwSLAPQ3luokmNw5UqZdqHcU6DExe5SjvUf/DMWAzRnH7wfxkwznmbFzuie/fpUVWgc="/>
    <input type="hidden" value="9916c0a2c6cdabf1ec6b29dda0534cdd" id="jschl-vc" name="jschl_vc"/>
    <!-- <input type="hidden" value="" id="jschl-vc" name="jschl_vc"/> -->
    <input type="hidden" name="pass" value="1636041757.111-4trgYseVWB"/>
    <input type="hidden" id="jschl-answer" name="jschl_answer"/>
  </form>
     
    <script type="text/javascript">
      //<![CDATA[
      (function(){
          var a = document.getElementById('cf-content');
          a.style.display = 'block';
          var isIE = /(MSIE|Trident\/|Edge\/)/i.test(window.navigator.userAgent);
          var trkjs = isIE ? new Image() : document.createElement('img');
          trkjs.setAttribute("src", "/cdn-cgi/images/trace/jschal/js/transparent.gif?ray=6a8f114f9c6ae6c0");
          trkjs.id = "trk_jschal_js";
          trkjs.setAttribute("alt", "");
          document.body.appendChild(trkjs);
          
          var cpo=document.createElement('script');
          cpo.type='text/javascript';
          cpo.src="/cdn-cgi/challenge-platform/h/b/orchestrate/jsch/v1?ray=6a8f114f9c6ae6c0";
          document.getElementsByTagName('head')[0].appendChild(cpo);
        }());
      //]]>
    </script>
  

  
  <div id="trk_jschal_nojs" style="background-image:url('/cdn-cgi/images/trace/jschal/nojs/transparent.gif?ray=6a8f114f9c6ae6c0')"> </div>
</div>

          
          <div class="attribution">
            DDoS protection by <a rel="noopener noreferrer" href="https://www.cloudflare.com/5xx-error-landing/" target="_blank">Cloudflare</a>
            <br />
            <span class="ray_id">Ray ID: <code>6a8f114f9c6ae6c0</code></span>
          </div>
      </td>
     
    </tr>
  </table>
</body>
</html>


2021-11-04 12:02:36,899 | MainThread | DEBUG | _initialize | gp.job | Windows 10.0.19041, 64bit, AMD64, Intel64 Family 6 Model 158 Stepping 13, GenuineIntel 

2021-11-04 12:02:36,900 | MainThread | DEBUG | _initialize | gp.job | Memmory Used: 10.7 MB

2021-11-04 12:02:36,900 | MainThread | DEBUG | _initialize | gp.job | Module Paths: ['C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'c:\\dev\\da.etl', 'c:\\dev\\da.main\\Job\\shared', 'C:\\dev\\da.research\\personal\\rxia', 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\python38.zip', 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\DLLs', 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib', 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python', 'C:\\Users\\redmond.xia\\AppData\\Roaming\\Python\\Python38\\site-packages', 'C:\\Users\\redmond.xia\\AppData\\Roaming\\Python\\Python38\\site-packages\\win32', 'C:\\Users\\redmond.xia\\AppData\\Roaming\\Python\\Python38\\site-packages\\win32\\lib', 'C:\\Users\\redmond.xia\\AppData\\Roaming\\Python\\Python38\\site-packages\\Pythonwin', 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages']

2021-11-04 12:02:36,900 | MainThread | DEBUG | _initialize | gp.job | Command Line: ['main.py', 'rx']

2021-11-04 12:02:36,900 | MainThread | DEBUG | _initialize | gp.job | Boto3 Version: 1.17.4

2021-11-04 12:02:37,199 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=f6d4b69f-ec46-4d23-a495-fb856f5c2ce1&request_guid=5e484efb-11a5-48c7-b86b-e48704b1bd53 HTTP/1.1" 200 1397

2021-11-04 12:02:37,412 | MainThread | DEBUG | get_warehouse_details | gp.snowflake | {'name': 'SKYWALKER', 'state': 'STARTED', 'type': 'STANDARD', 'size': 'Small', 'running': 1, 'queued': 0, 'is_default': 'Y', 'is_current': 'N', 'auto_suspend': 300, 'auto_resume': 'true', 'available': ' 100', 'provisioning': '0', 'quiescing': '0', 'other': '0', 'created_on': datetime.datetime(2017, 2, 13, 14, 10, 54, 143000, tzinfo=<DstTzInfo 'America/New_York' EST-1 day, 19:00:00 STD>), 'resumed_on': datetime.datetime(2021, 11, 4, 11, 22, 42, 741000, tzinfo=<DstTzInfo 'America/New_York' EDT-1 day, 20:00:00 DST>), 'updated_on': datetime.datetime(2021, 11, 4, 11, 22, 42, 741000, tzinfo=<DstTzInfo 'America/New_York' EDT-1 day, 20:00:00 DST>), 'owner': 'SYSADMIN', 'comment': 'Thursday Moa Run', 'resource_monitor': 'null', 'actives': 2, 'pendings': 0, 'failed': 0, 'suspended': 0, 'uuid': '1012996'}

2021-11-04 12:02:37,413 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    insert into rawdata.metadata.job_run_v3 (run_id, job_group, job_name, settings_file, host_ip, host_name, windows_user, git_timestamp, git_hash, git_status, git_describe, warehouse_size, details)
            select $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, parse_json($13)
            from values (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);

2021-11-04 12:02:37,413 | MainThread | DEBUG | execute | gp.snowflake | Args:
    [
        51782,
        "rxia",
        "ETL Alphas",
        "settings.rx.json",
        "192.168.0.14",
        "GP-BSX70Z2",
        "REDMOND.XIA",
        "2021-11-03 14:46:22 -0400",
        "aa5329f43a922a03a3cab17fb8dc13e53a920030",
        " M Job/moa/job_moa_prod_transform/settings.rx.json\n M Job/monitor/job_build_product_2/settings.CRM.json\n M Job/monitor/job_build_product_2_RX/settings.CRM.json\n M Job/monitor/job_build_product_2_RX/steps/step_10_build_transaction_source.sql\n M Job/monitor/job_build_product_2_RX/steps/step_81_apply_scale_factors.sql\n",
        "v20180326.2001-4999-gaa5329f4",
        "Small",
        "{\"python_version\": \"3.8.7 (tags/v3.8.7:6503f05, Dec 21 2020, 17:59:51) [MSC v.1928 64 bit (AMD64)]\", \"external_ip\": \"<!DOCTYPE HTML>\\n<html lang=\\\"en-US\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\" />\\n  <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\" />\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge,chrome=1\\\" />\\n  <meta name=\\\"robots\\\" content=\\\"noindex, nofollow\\\" />\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\" />\\n  <title>Just a moment...</title>\\n  <style type=\\\"text/css\\\">\\n    html, body {width: 100%; height: 100%; margin: 0; padding: 0;}\\n    body {background-color: #ffffff; color: #000000; font-family:-apple-system, system-ui, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Oxygen, Ubuntu, \\\"Helvetica Neue\\\",Arial, sans-serif; font-size: 16px; line-height: 1.7em;-webkit-font-smoothing: antialiased;}\\n    h1 { text-align: center; font-weight:700; margin: 16px 0; font-size: 32px; color:#000000; line-height: 1.25;}\\n    p {font-size: 20px; font-weight: 400; margin: 8px 0;}\\n    p, .attribution, {text-align: center;}\\n    #spinner {margin: 0 auto 30px auto; display: block;}\\n    .attribution {margin-top: 32px;}\\n    @keyframes fader     { 0% {opacity: 0.2;} 50% {opacity: 1.0;} 100% {opacity: 0.2;} }\\n    @-webkit-keyframes fader { 0% {opacity: 0.2;} 50% {opacity: 1.0;} 100% {opacity: 0.2;} }\\n    #cf-bubbles > .bubbles { animation: fader 1.6s infinite;}\\n    #cf-bubbles > .bubbles:nth-child(2) { animation-delay: .2s;}\\n    #cf-bubbles > .bubbles:nth-child(3) { animation-delay: .4s;}\\n    .bubbles { background-color: #f58220; width:20px; height: 20px; margin:2px; border-radius:100%; display:inline-block; }\\n    a { color: #2c7cb0; text-decoration: none; -moz-transition: color 0.15s ease; -o-transition: color 0.15s ease; -webkit-transition: color 0.15s ease; transition: color 0.15s ease; }\\n    a:hover{color: #f4a15d}\\n    .attribution{font-size: 16px; line-height: 1.5;}\\n    .ray_id{display: block; margin-top: 8px;}\\n    #cf-wrapper #challenge-form { padding-top:25px; padding-bottom:25px; }\\n    #cf-hcaptcha-container { text-align:center;}\\n    #cf-hcaptcha-container iframe { display: inline-block;}\\n  </style>\\n\\n      <meta http-equiv=\\\"refresh\\\" content=\\\"35\\\">\\n  <script type=\\\"text/javascript\\\">\\n    //<![CDATA[\\n    (function(){\\n      \\n      window._cf_chl_opt={\\n        cvId: \\\"2\\\",\\n        cType: \\\"non-interactive\\\",\\n        cNounce: \\\"81018\\\",\\n        cRay: \\\"6a8f114f9c6ae6c0\\\",\\n        cHash: \\\"79988cb35e5086f\\\",\\n        cPMDTk: \\\"\\\",\\n        cFPWv: \\\"b\\\",\\n        cTTimeMs: \\\"1000\\\",\\n        cRq: {\\n          ru: \\\"aHR0cHM6Ly9pcGFwaS5jby9pcC8=\\\",\\n          ra: \\\"cHl0aG9uLXJlcXVlc3RzLzIuMjUuMQ==\\\",\\n          rm: \\\"R0VU\\\",\\n          d: \\\"OaZF6jBWodjKhBXHoze6V3lQzpcbtslrkBvN/slDIjOY20HZ3bbXWIVvcZ/5LCUyL0RiHacn9jowcww/vKuFcHKdwM+wUBflGg1qWvzqBfNH8y0Ux5MrsgcKVucgatUyRtn2OyAW91ovZVhMN+YAzs0g4XAa6rgPqTTmS43ltrX+HT7falBEvH6oc7R6yasx+L1WmhCIiFWgEbsRoVMlWSkuSWIWQ35mpGyf96kpYRrKTiqWwR5SonEoFbUCj/Fp0XpEo/HmOKYjMAMYg5LRldBXrQXA52L3ySRkLhPtyDNAkdM4ZW5ywedIqYxC/31iLYXT+m/lrcp6o/pfYBscZozXn8AiXrLY43DaanCGc5TTgFYxc8S1LET6i2sNK1lWDH6Tdh9U776HbWZVCS4AurUKygqqINWvKSnxBQxJpltWCh/smM0h8Z7GnQe+JZMF1zXerzCxfZf8ol8/FXrZvO1tXuHH0HHD7k9K8hpCdGNdZKkXP3TlmNQ7iHqRy6/s+4AdJKkKLzSuiCzRquLoB5bDbimtX9+Y2iumNHTbomz6a5J9ad/GTaLqxYVydaFK\\\",\\n          t: \\\"MTYzNjA0MTc1Ni4xMTEwMDA=\\\",\\n          m: \\\"GUEB34gQFOjxtzxl4uTOLx3AkdjovOzaPfQkugUM3RU=\\\",\\n          i1: \\\"037I5+olSBz6ZJunB65ldA==\\\",\\n          i2: \\\"dLQQj2L32U2DF/QvfmB0NA==\\\",\\n          zh: \\\"ehhURLEN7D1vmSeD1BoitpJLkHang/UmzauCWNPXHvs=\\\",\\n          uh: \\\"5GU+jYv2xJ+bCaE/ARmi/DORbiS/v56CW7E0TH4XWQk=\\\",\\n          hh: \\\"YdUqYPZUvPfXwCP5KDdC12lOuVGuzQskNEUHhqHTVPY=\\\",\\n        }\\n      }\\n      window._cf_chl_enter = function(){window._cf_chl_opt.p=1};\\n      \\n    })();\\n    //]]>\\n  </script>\\n  \\n\\n</head>\\n<body>\\n  <table width=\\\"100%\\\" height=\\\"100%\\\" cellpadding=\\\"20\\\">\\n    <tr>\\n      <td align=\\\"center\\\" valign=\\\"middle\\\">\\n          <div class=\\\"cf-browser-verification cf-im-under-attack\\\">\\n  <noscript>\\n    <h1 data-translate=\\\"turn_on_js\\\" style=\\\"color:#bd2426;\\\">Please turn JavaScript on and reload the page.</h1>\\n  </noscript>\\n  <div id=\\\"cf-content\\\" style=\\\"display:none\\\">\\n    \\n    <div id=\\\"cf-bubbles\\\">\\n      <div class=\\\"bubbles\\\"></div>\\n      <div class=\\\"bubbles\\\"></div>\\n      <div class=\\\"bubbles\\\"></div>\\n    </div>\\n    <h1><span data-translate=\\\"checking_browser\\\">Checking your browser before accessing</span> ipapi.co.</h1>\\n    \\n    <div id=\\\"no-cookie-warning\\\" class=\\\"cookie-warning\\\" data-translate=\\\"turn_on_cookies\\\" style=\\\"display:none\\\">\\n      <p data-translate=\\\"turn_on_cookies\\\" style=\\\"color:#bd2426;\\\">Please enable Cookies and reload the page.</p>\\n    </div>\\n    <p data-translate=\\\"process_is_automatic\\\">This process is automatic. Your browser will redirect to your requested content shortly.</p>\\n    <p data-translate=\\\"allow_5_secs\\\" id=\\\"cf-spinner-allow-5-secs\\\" >Please allow up to 5 seconds&hellip;</p>\\n    <p data-translate=\\\"redirecting\\\" id=\\\"cf-spinner-redirecting\\\" style=\\\"display:none\\\">Redirecting&hellip;</p>\\n  </div>\\n   \\n  <form class=\\\"challenge-form\\\" id=\\\"challenge-form\\\" action=\\\"/ip/?__cf_chl_jschl_tk__=dWIk0OT8QIYXonX9wzB_WUlPYyMCd_nhfFvXKREwRS4-1636041756-0-gaNycGzNBtE\\\" method=\\\"POST\\\" enctype=\\\"application/x-www-form-urlencoded\\\">\\n    <input type=\\\"hidden\\\" name=\\\"md\\\" value=\\\"cwGeCkZetaH6ItmAVKFd3qHmLECbaTzbqJ.8_NwSPjo-1636041756-0-AbrnmG91RLXewRw4I7Rk7MQ_d4xtwhNC31Ic9D51-WQ_AZWbSqyWVYEHGsVvYrheQxStw5eiUhuOWwzAK1QOjlLhWmjiJdx-Uis4XTwvM6Sl4x7qnWkAqOryhINiR5OHF7f3I8BW37uANGAgW-21SIwc9-KU5LZeR4i8k5cbGLE8zA1dlzyJetIVcGCRfWjMhpsUctUPttlYUJqk2snZCmKL_hoihoZ3JTjL1gdzs7NUXXZnrz8uTtk4SBX4yqR0myaZFjJ7sy2FveoOrl-y5s7hzdel23zJiCHj9316L3sWiL0E2D6W48MJyONQyrxGZBu3A7xKZ73WNg9oBoHuS4PJaMAYToRAHjtz8njFySQ4tw_db5UAOgr4rzuOykTeprwB1TqmLPWMqs0Vu86Tt8LqXTfF2RdhzMWy36OZMVcbhima-RZJSWcS50s0TM9W0qATogexLW9VtJQ0cPs83OecCLuwg_QnMaambcZKLkvm2GI6Y85pU0-AYZDV-NFbjrA4jKh2qVHEPx_kUAJObaI\\\" />\\n    <input type=\\\"hidden\\\" name=\\\"r\\\" value=\\\"cdhMh6cKTZpXnWhSXhEbLuz_sgv0J7y4Y65KsBaXj7U-1636041756-0-AZCS79pQ4YbBKTAjnLbhVLUZWZ31qrFoedx4Cxnl4DMKINbs3ADXqLWfKzQ4wRBVeB4+xZbBK8TbMuy1KT46tTYla+c+4/PSLxrfNkxPtwKp3loN1PPGA/N0BfeCNj57sVYcOuylGp8S/tA8/8KP/KR6reiKnsQjUiBxAMpgBhbsg/m9zU2pdXuKUJO6iJDLHMse8P2BonFrPbdwopsLpjNpg4Zz4gNU90mxCTkD4y0KX/47g8jdst7B174IfLpDZDzqrm+Ijw1/YI0zgtDAY+mgWdnp8iW5VN0HNjEY2vbGWz72CzzU+JlomU2vO6AYSbgOZv0w4PEro1ddy5JAo5l4KobG7pjfHnGt9EP/3qU8Y9HnU1vSZ0KhiJzyII2xk5TmCe2q95FI4Lfh40J1gN2P3yjp8wWobwqY/sf3gzD2rdJKUBiBTR7//Y2MwzH1isJpsLQJI2cpn3YW3DUrI12ZjlnZPtb+jejWRdtLH7siTpq1epFHQkn4EyL1baeJEYrRIVFj5UX9i8v2PxvAEdFjHoGiYy3TFtdNO1vgG5tyIBebTzqqd9ruA+N8H908WI5HeoobgDTi8CMhjmxGWp42EtJyMAGZH9jlh1xJs8mn2Zxq7fZpscGinKh2pCbI71PDKqM8tnaQ61NJbsC7TCcUvmnUP6QUpo19IkSVPxm6NoORMAo/nV0BCsQmzmtLFh+MwZzeb+HANXkmW09jz2yeMtR/JGh7mQ6t5G01DNQr/yiiBbeZZUJ5kyMmx+d2nb/7TVFQPSbVF+OHElcETEz6u9g1Jzc/5n7fuGhX3gUgpf+ffqWOWm9LIErmoROxNAnkUxldDKxbwHkKk1+SXY5wkoG1nceNdJ3Vyr023gb2yaMnHwlHMVVj74Jowhg8rCrki3pdO/mTpJG2oBkzdIi7zWDRWRuCzLvkr4fWuxlXXlU557xrqfBzqf3QnXKddzYl0xrySnZACqO97P1Vu6+DrfxPO/9IxNFMWGOsWAekOZP4ktyWbQJ43jrlIhvB/OsyPvEpM/YTU837t8TdkEM+6qw7j3vJxaueUINHAnXi9DNQjXWA3Zm5oIVloKPIlcFleJ23PJu2YzFM3K+wcFLXfABirS6YnzYBtwqZtU3tmwRSRc8iLR/16pjQSLBbmf7ACpkR/NmyQdiSBjHII4Wwz+wfdi2MOkm3k6qrY/vZl0+iYFih1eay78BMAELqK27G1HJatYw3MV4tCiGxorX7dSLNj+OaclvuyfYfyIk4u6HPJXNidWQUCy0tAX6pnYecao3/qhSXalermjN+M7NlgdK+WzLxQLyWJSX2EyINzaSZRQg8bsOSrJBL40rJ4fYW2u3f7FLw9U0WDyqjJ4GEHvW2IH3/jEy0Hs+RLgvhrSt/yLHlb1XrgfYztt3jZvEzfosUTbh9j+5nYtTxyhqfjAnP/QhMfl3SxMBv2Ee418L0tnsV5II5GDbsWA0BualuNOCIARx6LfJz5O0W/gIH1pd52PBGNlYj9sC4225or5dom0E7b/kT7Nj1k+BBBLePwp+9kXatUZoVh8pbZL4WHzHcDpCGREFyxZEtfCS0c2yNaFYt/fvbwRMp/lxzlXUPQbeMizGj5+P+As8KpwSLAPQ3luokmNw5UqZdqHcU6DExe5SjvUf/DMWAzRnH7wfxkwznmbFzuie/fpUVWgc=\\\"/>\\n    <input type=\\\"hidden\\\" value=\\\"9916c0a2c6cdabf1ec6b29dda0534cdd\\\" id=\\\"jschl-vc\\\" name=\\\"jschl_vc\\\"/>\\n    <!-- <input type=\\\"hidden\\\" value=\\\"\\\" id=\\\"jschl-vc\\\" name=\\\"jschl_vc\\\"/> -->\\n    <input type=\\\"hidden\\\" name=\\\"pass\\\" value=\\\"1636041757.111-4trgYseVWB\\\"/>\\n    <input type=\\\"hidden\\\" id=\\\"jschl-answer\\\" name=\\\"jschl_answer\\\"/>\\n  </form>\\n     \\n    <script type=\\\"text/javascript\\\">\\n      //<![CDATA[\\n      (function(){\\n          var a = document.getElementById('cf-content');\\n          a.style.display = 'block';\\n          var isIE = /(MSIE|Trident\\\\/|Edge\\\\/)/i.test(window.navigator.userAgent);\\n          var trkjs = isIE ? new Image() : document.createElement('img');\\n          trkjs.setAttribute(\\\"src\\\", \\\"/cdn-cgi/images/trace/jschal/js/transparent.gif?ray=6a8f114f9c6ae6c0\\\");\\n          trkjs.id = \\\"trk_jschal_js\\\";\\n          trkjs.setAttribute(\\\"alt\\\", \\\"\\\");\\n          document.body.appendChild(trkjs);\\n          \\n          var cpo=document.createElement('script');\\n          cpo.type='text/javascript';\\n          cpo.src=\\\"/cdn-cgi/challenge-platform/h/b/orchestrate/jsch/v1?ray=6a8f114f9c6ae6c0\\\";\\n          document.getElementsByTagName('head')[0].appendChild(cpo);\\n        }());\\n      //]]>\\n    </script>\\n  \\n\\n  \\n  <div id=\\\"trk_jschal_nojs\\\" style=\\\"background-image:url('/cdn-cgi/images/trace/jschal/nojs/transparent.gif?ray=6a8f114f9c6ae6c0')\\\"> </div>\\n</div>\\n\\n          \\n          <div class=\\\"attribution\\\">\\n            DDoS protection by <a rel=\\\"noopener noreferrer\\\" href=\\\"https://www.cloudflare.com/5xx-error-landing/\\\" target=\\\"_blank\\\">Cloudflare</a>\\n            <br />\\n            <span class=\\\"ray_id\\\">Ray ID: <code>6a8f114f9c6ae6c0</code></span>\\n          </div>\\n      </td>\\n     \\n    </tr>\\n  </table>\\n</body>\\n</html>\\n\", \"workding_dir\": \"C:\\\\dev\\\\da.research\\\\personal\\\\rxia\\\\ETL_Alphas\", \"command_line\": \"main.py rx\", \"platform_system\": \"Windows\", \"plaform_version\": \"10.0.19041\", \"platform_architecture\": \"64bit\", \"platform_machine\": \"AMD64\", \"platform_processor\": \"Intel64 Family 6 Model 158 Stepping 13, GenuineIntel\", \"memory_used_mb\": 10.6934272, \"module_paths\": \"C:\\\\dev\\\\da.research\\\\personal\\\\rxia\\\\ETL_Alphas;c:\\\\dev\\\\da.etl;c:\\\\dev\\\\da.main\\\\Job\\\\shared;C:\\\\dev\\\\da.research\\\\personal\\\\rxia;C:\\\\dev\\\\da.research\\\\personal\\\\rxia\\\\ETL_Alphas;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\python38.zip;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\DLLs;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\lib;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Local\\\\Programs\\\\Python;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Roaming\\\\Python\\\\Python38\\\\site-packages;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Roaming\\\\Python\\\\Python38\\\\site-packages\\\\win32;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Roaming\\\\Python\\\\Python38\\\\site-packages\\\\win32\\\\lib;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Roaming\\\\Python\\\\Python38\\\\site-packages\\\\Pythonwin;C:\\\\Users\\\\redmond.xia\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\lib\\\\site-packages\", \"settings_file\": {\"email_enabled\": false, \"debug\": true, \"run_auto\": true, \"cut_date\": \"20170727\", \"prev_18mo\": \"'2016-01-01'\", \"FY_QTR\": \"2017Q2\", \"exclude_id\": \"\", \"wkbk_exist\": false, \"keep_temp_tables\": false, \"replace_build_schemas\": false, \"replace_stage_schema\": false, \"drop_stage_tables\": false, \"database\": \"MOA\", \"build_schema\": \"build_kd_\", \"foundation_schema\": \"foundation_ys\", \"stage_schema\": \"stage_kd\", \"product_schema\": \"*** not used yet ***\", \"limit\": null, \"ticker_list\": [\"CSII\"], \"max_threads\": 10, \"warehouse\": \"vader\"}}"
    ]

2021-11-04 12:02:38,418 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3641efd0-16b3-4a05-930b-8c65821b1067&request_guid=6f9b6641-0779-43dd-9305-f25191865c68 HTTP/1.1" 200 1055

2021-11-04 12:02:38,419 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    set current_git_hash=%s::text

2021-11-04 12:02:38,420 | MainThread | DEBUG | execute | gp.snowflake | Args:
    "aa5329f43a922a03a3cab17fb8dc13e53a920030"

2021-11-04 12:02:38,649 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=85130c7a-9179-4ff8-8bde-37022f3de278&request_guid=a38dbfea-e380-4c37-877e-9eeff024d891 HTTP/1.1" 200 1013

2021-11-04 12:02:39,684 | MainThread | DEBUG | run_steps | gp.runner | steps: ['steps\\__pycache__\\step_00b_py_functions.cpython-38.pyc', 'steps\\__pycache__\\step_01_get_settings.cpython-38.pyc', 'steps\\__pycache__\\step_03_projection_excel_sheet_creation.cpython-38.pyc', 'steps\\log.debug.txt', 'steps\\log.txt', 'steps\\step_00_init_sql.sql', 'steps\\step_01a_create_12_03_SS_summary_tbl.sql', 'steps\\step_01b_create_12_03_non_SS_summary_tbl_.sql', 'steps\\step_02a_create_12_12_SS_projection_tbl.sql', 'steps\\step_02b_create_12_12_non_SS_projection_tbl.sql', 'steps\\step_03_projection_excel_sheet_creation.py', 'steps\\step_99_finish.sql']

2021-11-04 12:02:39,684 | MainThread | INFO | run_sql_step | gp.runner | run_sql_step: steps\step_00_init_sql.sql

2021-11-04 12:02:39,685 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}}

2021-11-04 12:02:39,689 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}}

2021-11-04 12:02:39,690 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:39,690 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    use MOA.build_kd_20170727

2021-11-04 12:02:39,881 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=147e9fb7-c954-4af7-acf7-540dc58eea4b&request_guid=45fb5a88-aabb-4f5f-b0ef-25b4da961132 HTTP/1.1" 200 1019

2021-11-04 12:02:39,884 | MainThread | DEBUG | run_sql_step | gp.runner | [('Statement executed successfully.',)]

2021-11-04 12:02:39,885 | MainThread | DEBUG | execute | gp.snowflake | SKIPPING EMPTY QUERY:

2021-11-04 12:02:39,885 | MainThread | DEBUG | execute | gp.snowflake | SQL:
    --alter session set timezone = 'America/New_York'

2021-11-04 12:02:39,885 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    

2021-11-04 12:02:39,885 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    alter session set timezone = 'UTC'

2021-11-04 12:02:40,069 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7ab76562-4fa1-44e0-baf5-5006957f7524&request_guid=da8f850f-92c4-4536-951c-244bc37e1cc5 HTTP/1.1" 200 1008

2021-11-04 12:02:40,071 | MainThread | DEBUG | run_sql_step | gp.runner | [('Statement executed successfully.',)]

2021-11-04 12:02:40,073 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    select current_user(), current_role(), current_warehouse(), current_database(), current_schema(), current_session()

2021-11-04 12:02:40,255 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=7319e8c2-1e3a-4e6d-96cd-124c9bff863b&request_guid=34f2a0ff-0ab4-4b31-92d3-ca12d9925446 HTTP/1.1" 200 1067

2021-11-04 12:02:40,257 | MainThread | DEBUG | run_sql_step | gp.runner | [('RXIA', 'ANALYST', 'VADER', 'MOA', 'BUILD_KD_20170727', '16995209695274')]

2021-11-04 12:02:40,257 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show locks

2021-11-04 12:02:40,465 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=8864ff1e-c6c0-4162-9866-cf044ebd8c76&request_guid=db0b2ee5-bcca-44c4-96be-baddcf315e3d HTTP/1.1" 200 1097

2021-11-04 12:02:40,467 | MainThread | DEBUG | run_sql_step | gp.runner | []

2021-11-04 12:02:40,468 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show transactions

2021-11-04 12:02:40,748 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=16f1587f-cef1-4007-8f94-fb5100981161&request_guid=e1958eff-8128-488a-b6b9-cc85f7ab72a8 HTTP/1.1" 200 1094

2021-11-04 12:02:40,752 | MainThread | DEBUG | run_sql_step | gp.runner | []

2021-11-04 12:02:40,753 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show databases

2021-11-04 12:02:40,956 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c3a1a432-bcd5-4031-b386-d57a4b598cc6&request_guid=ab191b1c-83a4-4131-b53b-d8b9a6d39584 HTTP/1.1" 200 1945

2021-11-04 12:02:40,960 | MainThread | DEBUG | run_sql_step | gp.runner | [(datetime.datetime(2021, 10, 18, 20, 4, 5, 70000, tzinfo=<UTC>), 'AHA', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 18, 20, 5, 32, 131000, tzinfo=<UTC>), 'AHA_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2020, 3, 19, 14, 47, 15, 889000, tzinfo=<UTC>), 'AUROCHS', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2018, 5, 4, 13, 13, 49, 59000, tzinfo=<UTC>), 'BACKUP', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2021, 3, 16, 21, 11, 45, 107000, tzinfo=<UTC>), 'BISON', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 3, 16, 21, 15, 58, 132000, tzinfo=<UTC>), 'BISON_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2017, 5, 10, 13, 51, 21, 627000, tzinfo=<UTC>), 'CHINAJOBS', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2018, 4, 24, 15, 58, 34, 944000, tzinfo=<UTC>), 'CLIENT', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 6, 349000, tzinfo=<UTC>), 'CMS_NPPES', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 11, 439000, tzinfo=<UTC>), 'CMS_NPPES_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 16, 304000, tzinfo=<UTC>), 'CMS_PROVIDER_OF_SERVICE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 20, 44000, tzinfo=<UTC>), 'CMS_PROVIDER_OF_SERVICE_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2017, 5, 10, 20, 36, 41, 445000, tzinfo=<UTC>), 'FOOKU', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 4, 30, 13, 52, 44, 176000, tzinfo=<UTC>), 'MAMMOTH', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 5, 10, 20, 38, 21, 832000, tzinfo=<UTC>), 'MOA', 'N', 'Y', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2018, 1, 22, 14, 41, 58, 380000, tzinfo=<UTC>), 'MOA_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2020, 6, 23, 21, 26, 3, 825000, tzinfo=<UTC>), 'MOA_LIVE_ARCHIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 1, 20, 40, 11, 674000, tzinfo=<UTC>), 'MONITOR', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 9, 28, 16, 51, 1, 276000, tzinfo=<UTC>), 'MONITOR_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2019, 5, 1, 22, 17, 48, 996000, tzinfo=<UTC>), 'PETREL', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2019, 5, 13, 20, 46, 56, 191000, tzinfo=<UTC>), 'PETREL_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2020, 6, 1, 17, 15, 49, 687000, tzinfo=<UTC>), 'PIKA', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2018, 12, 17, 17, 31, 11, 90000, tzinfo=<UTC>), 'POTOROO', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2019, 5, 13, 21, 24, 7, 869000, tzinfo=<UTC>), 'POTOROO_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2020, 2, 28, 17, 59, 36, 675000, tzinfo=<UTC>), 'PUBLICDATA', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2019, 8, 20, 13, 49, 57, 361000, tzinfo=<UTC>), 'PUBLISH_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2019, 8, 20, 14, 23, 35, 969000, tzinfo=<UTC>), 'PUBLISH_STAGE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2017, 5, 10, 13, 44, 41, 757000, tzinfo=<UTC>), 'QUAGGA', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 2, 27, 18, 29, 58, 460000, tzinfo=<UTC>), 'RAPTOR', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 5, 5, 15, 16, 4, 153000, tzinfo=<UTC>), 'RAWDATA', 'N', 'N', '', 'SYSADMIN', 'Original data, Read/Write for ETL, Read/Only for Analysts', '', '1'), (datetime.datetime(2017, 2, 13, 18, 48, 10, 531000, tzinfo=<UTC>), 'RESEARCH', 'Y', 'N', '', 'SYSADMIN', 'For R&D', '', '1'), (datetime.datetime(2021, 7, 28, 19, 8, 14, 219000, tzinfo=<UTC>), 'SARCO', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 7, 28, 19, 8, 19, 694000, tzinfo=<UTC>), 'SARCO_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2020, 2, 28, 17, 59, 52, 793000, tzinfo=<UTC>), 'SHARED', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2018, 8, 22, 4, 12, 45, 68000, tzinfo=<UTC>), 'SNOWFLAKE', 'N', 'N', 'SNOWFLAKE.ACCOUNT_USAGE', '', '', '', '1'), (datetime.datetime(2017, 5, 8, 14, 16, 13, 8000, tzinfo=<UTC>), 'STEGA', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2021, 10, 18, 20, 6, 30, 999000, tzinfo=<UTC>), 'TARPAN', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 18, 20, 6, 32, 653000, tzinfo=<UTC>), 'TARPAN_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2018, 12, 17, 17, 30, 58, 527000, tzinfo=<UTC>), 'TEMP', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 2, 27, 18, 29, 59, 63000, tzinfo=<UTC>), 'TRACKER', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2019, 3, 8, 18, 7, 17, 943000, tzinfo=<UTC>), 'TRACKER2_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2020, 3, 20, 15, 18, 58, 984000, tzinfo=<UTC>), 'TRACKER3_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1')]

2021-11-04 12:02:40,971 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show variables

2021-11-04 12:02:41,143 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=6c8e5220-7bae-47be-bde6-afd7c1593c2c&request_guid=2a06be9a-52f0-437e-ae77-fc8d08a1ffc2 HTTP/1.1" 200 1202

2021-11-04 12:02:41,145 | MainThread | DEBUG | run_sql_step | gp.runner | [(16995209695274, datetime.datetime(2021, 11, 4, 16, 2, 37, 713000, tzinfo=<UTC>), datetime.datetime(2021, 11, 4, 16, 2, 37, 774000, tzinfo=<UTC>), 'CURRENT_GIT_HASH', 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'text', ''), (16995209695274, datetime.datetime(2021, 11, 4, 16, 2, 35, 467000, tzinfo=<UTC>), datetime.datetime(2021, 11, 4, 16, 2, 35, 530000, tzinfo=<UTC>), 'CURRENT_RUN_ID', '51782', 'fixed', '')]

2021-11-04 12:02:41,146 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show parameters

2021-11-04 12:02:41,323 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0ea6c206-8e34-4ee2-9a63-fa78df2f9d75&request_guid=e97b73b3-e885-430b-8a6b-ad83256c7c83 HTTP/1.1" 200 5400

2021-11-04 12:02:41,326 | MainThread | DEBUG | run_sql_step | gp.runner | [('ABORT_DETACHED_QUERY', 'true', 'false', 'ACCOUNT', 'If true, Snowflake will automatically abort queries when it detects that the client has disappeared.', 'BOOLEAN'), ('AUTOCOMMIT', 'true', 'true', '', 'The autocommit property determines whether is statement should to be implicitly\nwrapped within a transaction or not. If autocommit is set to true, then a \nstatement that requires a transaction is executed within a transaction \nimplicitly. If autocommit is off then an explicit commit or rollback is required\nto close a transaction. The default autocommit value is true.', 'BOOLEAN'), ('AUTOCOMMIT_API_SUPPORTED', 'true', 'true', '', 'Whether autocommit feature is enabled for this client. This parameter is for\nSnowflake use only.', 'BOOLEAN'), ('BINARY_INPUT_FORMAT', 'HEX', 'HEX', '', 'input format for binary', 'STRING'), ('BINARY_OUTPUT_FORMAT', 'HEX', 'HEX', '', 'display format for binary', 'STRING'), ('CLIENT_ENABLE_CONSERVATIVE_MEMORY_USAGE', 'true', 'true', '', 'Enables conservative memory usage for JDBC', 'BOOLEAN'), ('CLIENT_ENABLE_DEFAULT_OVERWRITE_IN_PUT', 'false', 'false', '', 'Set default value of overwrite option to true for put command, if overwrite option is not specified in the sql command.', 'BOOLEAN'), ('CLIENT_ENABLE_LOG_INFO_STATEMENT_PARAMETERS', 'false', 'false', '', 'Enable info-level logging for Prepared Statement binding parameters', 'BOOLEAN'), ('CLIENT_MEMORY_LIMIT', '1536', '1536', '', 'Limit the amount of memory used by the client in MB', 'NUMBER'), ('CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog and schema if set to true', 'BOOLEAN'), ('CLIENT_METADATA_USE_SESSION_DATABASE', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog but multiple schemas if set to true (in conjunction with CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'BOOLEAN'), ('CLIENT_PREFETCH_THREADS', '4', '4', 'SESSION', 'Customer parameter to control threads, 0=auto', 'NUMBER'), ('CLIENT_RESULT_CHUNK_SIZE', '160', '160', '', 'Set the max result chunk size in MB on the client side', 'NUMBER'), ('CLIENT_RESULT_COLUMN_CASE_INSENSITIVE', 'false', 'false', '', 'Column name search is case insensitive in clients', 'BOOLEAN'), ('CLIENT_SESSION_CLONE', 'false', 'false', '', 'If true, client clones a new session from the previously used tokens for the account and user.', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE', 'false', 'false', '', 'If true, client session will not expire automatically', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY', '900', '3600', 'SESSION', 'Heartbeat frequency in seconds for CLIENT_SESSION_KEEP_ALIVE.', 'NUMBER'), ('CLIENT_TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_LTZ', 'TIMESTAMP_LTZ', '', 'If a variable is bound to the TIMESTAMP data type using the bind API, determines which TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ (default), TIMESTAMP_NTZ', 'STRING'), ('C_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to C API', 'STRING'), ('DATE_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for date', 'STRING'), ('DATE_OUTPUT_FORMAT', 'YYYY-MM-DD', 'YYYY-MM-DD', '', 'display format for date', 'STRING'), ('ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION', 'true', 'true', '', 'Enable physical-type optimizations used in Snowflake to affect the Parquet output', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_MERGE', 'true', 'true', '', 'raise an error when attempting to merge-update a row that joins many rows', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_UPDATE', 'false', 'false', '', 'raise an error when attempting to update a row that joins many rows', 'BOOLEAN'), ('GEOGRAPHY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOGRAPHY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GEOMETRY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOMETRY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GO_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to golang driver', 'STRING'), ('JDBC_FORMAT_DATE_WITH_TIMEZONE', 'true', 'true', '', "When true, ResultSet#getDate(int columnIndex, Calendar cal) and getDate(String columnName, Calendar cal) will display the date using the Calendar's output.", 'BOOLEAN'), ('JDBC_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to jdbc', 'STRING'), ('JDBC_TREAT_DECIMAL_AS_INT', 'true', 'true', '', 'When scale is 0, whether to treat Decimal as Int in JDBC', 'BOOLEAN'), ('JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC', 'false', 'false', '', 'When true, Timestamp_NTZ values are always stored in UTC timezone', 'BOOLEAN'), ('JDBC_USE_SESSION_TIMEZONE', 'true', 'true', '', 'When true, JDBC driver will not display timezone offset between JVM and session.', 'BOOLEAN'), ('JSON_INDENT', '2', '2', '', 'Width of indentation in JSON output (0 for compact)', 'NUMBER'), ('JS_TREAT_INTEGER_AS_BIGINT', 'false', 'false', '', 'If true, the nodejs client will convert all integer columns to bigint type', 'BOOLEAN'), ('LANGUAGE', 'en', 'en', '', 'The selected language that will be used by UI, GS, Query Coordination and XP. The input languages should be in BCP-47 format. AKA. dash format.See LocaleUtil.java for the details.', 'STRING'), ('LOCK_TIMEOUT', '10800', '43200', 'ACCOUNT', 'Number of seconds to wait while trying to lock a resource, before timing out \nand aborting the statement. A value of 0 turns off lock waiting i.e. the \nstatement must acquire the lock immediately or abort. If multiple resources \nneed to be locked by the statement, the timeout applies separately to each \nlock attempt.', 'NUMBER'), ('LOG_LEVEL', 'OFF', 'OFF', '', 'LOG_LEVEL to use when filtering events', 'STRING'), ('MULTI_STATEMENT_COUNT', '1', '1', '', 'Number of statement included in submitted query text.\nThis parameter is submitted by user to avoid sql injection.\nValue 1 means one statement, value > 1 means n statement\ncan be executed, if not equal to the value will raise the\nexception. Value 0 means any number of statement can be\n executed', 'NUMBER'), ('ODBC_QUERY_RESULT_FORMAT', 'ARROW', 'JSON', 'SYSTEM', 'Format used to serialize query result to send back to odbc', 'STRING'), ('ODBC_SCHEMA_CACHING', 'false', 'false', '', 'When true, enables schema caching in ODBC. This can speed up SQLColumns API calls.', 'BOOLEAN'), ('ODBC_USE_CUSTOM_SQL_DATA_TYPES', 'false', 'false', '', 'ODBC return snowflake specific sql data types in result set metadata', 'BOOLEAN'), ('PREVENT_UNLOAD_TO_INTERNAL_STAGES', 'false', 'false', '', 'Prevent unload sensitive data to non-external stages (user stage, table stage, named stage).', 'BOOLEAN'), ('PYTHON_CONNECTOR_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('QA_TEST_NAME', '', '', '', 'Test name if running in QA mode. Used as a diversifier for shared pools', 'STRING'), ('QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to client ', 'STRING'), ('QUERY_TAG', 'RUN_ID=51782', '', 'SESSION', 'String (up to 2000 characters) used to tag statements executed by the session', 'STRING'), ('QUOTED_IDENTIFIERS_IGNORE_CASE', 'false', 'false', '', 'If true, the case of quoted identifiers is ignored', 'BOOLEAN'), ('ROWS_PER_RESULTSET', '0', '0', '', 'maxium number of rows in a result set', 'NUMBER'), ('SEARCH_PATH', '$current, $public', '$current, $public', '', 'Search path for unqualified object references.', 'STRING'), ('SHOW_EXTERNAL_TABLE_KIND_AS_TABLE', 'true', 'true', '', 'Change the way external table KIND info is displayed by SHOW TABLES and SHOW OBJECTS. The KIND column of external tables is displayed as TABLE if true, EXTERNAL_TABLE otherwise.', 'BOOLEAN'), ('SIMULATED_DATA_SHARING_CONSUMER', '', '', '', 'Data sharing views will return rows as if executed in the specified consumer account.', 'STRING'), ('SNOWPARK_LAZY_ANALYSIS', 'true', 'true', '', 'Enable lazy result schema analysis for Snowpark', 'BOOLEAN'), ('SQL_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'The result set will use the format provided with the default of JSON', 'STRING'), ('STATEMENT_QUEUED_TIMEOUT_IN_SECONDS', '10800', '0', 'ACCOUNT', 'Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.', 'NUMBER'), ('STATEMENT_TIMEOUT_IN_SECONDS', '10800', '172800', 'ACCOUNT', 'Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.', 'NUMBER'), ('STRICT_JSON_OUTPUT', 'false', 'false', '', 'JSON output is strictly compliant to the specification', 'BOOLEAN'), ('TIMESTAMP_DAY_IS_ALWAYS_24H', 'false', 'false', '', 'If set, arithmetic on days always uses 24 hours per day,\npossibly not preserving the time (due to DST changes)', 'BOOLEAN'), ('TIMESTAMP_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for timestamp', 'STRING'), ('TIMESTAMP_LTZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_LTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_NTZ_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3', 'YYYY-MM-DD HH24:MI:SS.FF3', '', 'Display format for TIMESTAMP_NTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', '', 'Default display format for all timestamp types.', 'STRING'), ('TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_NTZ', 'TIMESTAMP_NTZ', '', 'If TIMESTAMP type is used, what specific TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ, TIMESTAMP_NTZ (default) or TIMESTAMP_TZ', 'STRING'), ('TIMESTAMP_TZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_TZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMEZONE', 'UTC', 'America/Los_Angeles', 'SESSION', 'time zone', 'STRING'), ('TIME_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for time', 'STRING'), ('TIME_OUTPUT_FORMAT', 'HH24:MI:SS', 'HH24:MI:SS', '', 'display format for time', 'STRING'), ('TRANSACTION_ABORT_ON_ERROR', 'false', 'false', '', 'If this parameter is true, and a statement issued within a non-autocommit\ntransaction returns with an error, then the non-autocommit transaction is\naborted. All statements issued inside that transaction will fail until an\ncommit or rollback statement is executed to close that transaction.', 'BOOLEAN'), ('TRANSACTION_DEFAULT_ISOLATION_LEVEL', 'READ COMMITTED', 'READ COMMITTED', '', 'The default isolation level when starting a starting a transaction, when no\nisolation level was specified', 'STRING'), ('TWO_DIGIT_CENTURY_START', '1970', '1970', '', "For 2-digit dates, defines a century-start year.\nFor example, when set to 1980:\n  - parsing a string '79' will produce 2079\n  - parsing a string '80' will produce 1980", 'NUMBER'), ('UI_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('UNSUPPORTED_DDL_ACTION', 'ignore', 'ignore', '', 'The action to take upon encountering an unsupported ddl statement', 'STRING'), ('USE_CACHED_RESULT', 'true', 'true', '', 'If enabled, query results can be reused between successive invocations of the same query as long as the original result has not expired', 'BOOLEAN'), ('WEEK_OF_YEAR_POLICY', '0', '0', '', 'Defines the policy of assigning weeks to years:\n0: the week needs to have 4 days in a given year;\n1: a week with January 1st always belongs to a given year.', 'NUMBER'), ('WEEK_START', '0', '0', '', 'Defines the first day of the week:\n0: legacy Snowflake behavior; 1: Monday .. 7: Sunday.', 'NUMBER')]

2021-11-04 12:02:41,335 | MainThread | DEBUG | execute | gp.snowflake | SKIPPING EMPTY QUERY:

2021-11-04 12:02:41,335 | MainThread | DEBUG | execute | gp.snowflake | SQL:
    --------------------------------------------------------------------
    -- DONE
    --------------------------------------------------------------------

2021-11-04 12:02:41,335 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    

2021-11-04 12:02:41,335 | MainThread | INFO | run_sql_step | gp.runner | run_sql_step: steps\step_01a_create_12_03_SS_summary_tbl.sql

2021-11-04 12:02:41,338 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('ABORT_DETACHED_QUERY', 'true', 'false', 'ACCOUNT', 'If true, Snowflake will automatically abort queries when it detects that the client has disappeared.', 'BOOLEAN'), ('AUTOCOMMIT', 'true', 'true', '', 'The autocommit property determines whether is statement should to be implicitly\nwrapped within a transaction or not. If autocommit is set to true, then a \nstatement that requires a transaction is executed within a transaction \nimplicitly. If autocommit is off then an explicit commit or rollback is required\nto close a transaction. The default autocommit value is true.', 'BOOLEAN'), ('AUTOCOMMIT_API_SUPPORTED', 'true', 'true', '', 'Whether autocommit feature is enabled for this client. This parameter is for\nSnowflake use only.', 'BOOLEAN'), ('BINARY_INPUT_FORMAT', 'HEX', 'HEX', '', 'input format for binary', 'STRING'), ('BINARY_OUTPUT_FORMAT', 'HEX', 'HEX', '', 'display format for binary', 'STRING'), ('CLIENT_ENABLE_CONSERVATIVE_MEMORY_USAGE', 'true', 'true', '', 'Enables conservative memory usage for JDBC', 'BOOLEAN'), ('CLIENT_ENABLE_DEFAULT_OVERWRITE_IN_PUT', 'false', 'false', '', 'Set default value of overwrite option to true for put command, if overwrite option is not specified in the sql command.', 'BOOLEAN'), ('CLIENT_ENABLE_LOG_INFO_STATEMENT_PARAMETERS', 'false', 'false', '', 'Enable info-level logging for Prepared Statement binding parameters', 'BOOLEAN'), ('CLIENT_MEMORY_LIMIT', '1536', '1536', '', 'Limit the amount of memory used by the client in MB', 'NUMBER'), ('CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog and schema if set to true', 'BOOLEAN'), ('CLIENT_METADATA_USE_SESSION_DATABASE', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog but multiple schemas if set to true (in conjunction with CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'BOOLEAN'), ('CLIENT_PREFETCH_THREADS', '4', '4', 'SESSION', 'Customer parameter to control threads, 0=auto', 'NUMBER'), ('CLIENT_RESULT_CHUNK_SIZE', '160', '160', '', 'Set the max result chunk size in MB on the client side', 'NUMBER'), ('CLIENT_RESULT_COLUMN_CASE_INSENSITIVE', 'false', 'false', '', 'Column name search is case insensitive in clients', 'BOOLEAN'), ('CLIENT_SESSION_CLONE', 'false', 'false', '', 'If true, client clones a new session from the previously used tokens for the account and user.', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE', 'false', 'false', '', 'If true, client session will not expire automatically', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY', '900', '3600', 'SESSION', 'Heartbeat frequency in seconds for CLIENT_SESSION_KEEP_ALIVE.', 'NUMBER'), ('CLIENT_TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_LTZ', 'TIMESTAMP_LTZ', '', 'If a variable is bound to the TIMESTAMP data type using the bind API, determines which TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ (default), TIMESTAMP_NTZ', 'STRING'), ('C_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to C API', 'STRING'), ('DATE_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for date', 'STRING'), ('DATE_OUTPUT_FORMAT', 'YYYY-MM-DD', 'YYYY-MM-DD', '', 'display format for date', 'STRING'), ('ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION', 'true', 'true', '', 'Enable physical-type optimizations used in Snowflake to affect the Parquet output', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_MERGE', 'true', 'true', '', 'raise an error when attempting to merge-update a row that joins many rows', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_UPDATE', 'false', 'false', '', 'raise an error when attempting to update a row that joins many rows', 'BOOLEAN'), ('GEOGRAPHY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOGRAPHY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GEOMETRY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOMETRY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GO_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to golang driver', 'STRING'), ('JDBC_FORMAT_DATE_WITH_TIMEZONE', 'true', 'true', '', "When true, ResultSet#getDate(int columnIndex, Calendar cal) and getDate(String columnName, Calendar cal) will display the date using the Calendar's output.", 'BOOLEAN'), ('JDBC_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to jdbc', 'STRING'), ('JDBC_TREAT_DECIMAL_AS_INT', 'true', 'true', '', 'When scale is 0, whether to treat Decimal as Int in JDBC', 'BOOLEAN'), ('JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC', 'false', 'false', '', 'When true, Timestamp_NTZ values are always stored in UTC timezone', 'BOOLEAN'), ('JDBC_USE_SESSION_TIMEZONE', 'true', 'true', '', 'When true, JDBC driver will not display timezone offset between JVM and session.', 'BOOLEAN'), ('JSON_INDENT', '2', '2', '', 'Width of indentation in JSON output (0 for compact)', 'NUMBER'), ('JS_TREAT_INTEGER_AS_BIGINT', 'false', 'false', '', 'If true, the nodejs client will convert all integer columns to bigint type', 'BOOLEAN'), ('LANGUAGE', 'en', 'en', '', 'The selected language that will be used by UI, GS, Query Coordination and XP. The input languages should be in BCP-47 format. AKA. dash format.See LocaleUtil.java for the details.', 'STRING'), ('LOCK_TIMEOUT', '10800', '43200', 'ACCOUNT', 'Number of seconds to wait while trying to lock a resource, before timing out \nand aborting the statement. A value of 0 turns off lock waiting i.e. the \nstatement must acquire the lock immediately or abort. If multiple resources \nneed to be locked by the statement, the timeout applies separately to each \nlock attempt.', 'NUMBER'), ('LOG_LEVEL', 'OFF', 'OFF', '', 'LOG_LEVEL to use when filtering events', 'STRING'), ('MULTI_STATEMENT_COUNT', '1', '1', '', 'Number of statement included in submitted query text.\nThis parameter is submitted by user to avoid sql injection.\nValue 1 means one statement, value > 1 means n statement\ncan be executed, if not equal to the value will raise the\nexception. Value 0 means any number of statement can be\n executed', 'NUMBER'), ('ODBC_QUERY_RESULT_FORMAT', 'ARROW', 'JSON', 'SYSTEM', 'Format used to serialize query result to send back to odbc', 'STRING'), ('ODBC_SCHEMA_CACHING', 'false', 'false', '', 'When true, enables schema caching in ODBC. This can speed up SQLColumns API calls.', 'BOOLEAN'), ('ODBC_USE_CUSTOM_SQL_DATA_TYPES', 'false', 'false', '', 'ODBC return snowflake specific sql data types in result set metadata', 'BOOLEAN'), ('PREVENT_UNLOAD_TO_INTERNAL_STAGES', 'false', 'false', '', 'Prevent unload sensitive data to non-external stages (user stage, table stage, named stage).', 'BOOLEAN'), ('PYTHON_CONNECTOR_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('QA_TEST_NAME', '', '', '', 'Test name if running in QA mode. Used as a diversifier for shared pools', 'STRING'), ('QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to client ', 'STRING'), ('QUERY_TAG', 'RUN_ID=51782', '', 'SESSION', 'String (up to 2000 characters) used to tag statements executed by the session', 'STRING'), ('QUOTED_IDENTIFIERS_IGNORE_CASE', 'false', 'false', '', 'If true, the case of quoted identifiers is ignored', 'BOOLEAN'), ('ROWS_PER_RESULTSET', '0', '0', '', 'maxium number of rows in a result set', 'NUMBER'), ('SEARCH_PATH', '$current, $public', '$current, $public', '', 'Search path for unqualified object references.', 'STRING'), ('SHOW_EXTERNAL_TABLE_KIND_AS_TABLE', 'true', 'true', '', 'Change the way external table KIND info is displayed by SHOW TABLES and SHOW OBJECTS. The KIND column of external tables is displayed as TABLE if true, EXTERNAL_TABLE otherwise.', 'BOOLEAN'), ('SIMULATED_DATA_SHARING_CONSUMER', '', '', '', 'Data sharing views will return rows as if executed in the specified consumer account.', 'STRING'), ('SNOWPARK_LAZY_ANALYSIS', 'true', 'true', '', 'Enable lazy result schema analysis for Snowpark', 'BOOLEAN'), ('SQL_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'The result set will use the format provided with the default of JSON', 'STRING'), ('STATEMENT_QUEUED_TIMEOUT_IN_SECONDS', '10800', '0', 'ACCOUNT', 'Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.', 'NUMBER'), ('STATEMENT_TIMEOUT_IN_SECONDS', '10800', '172800', 'ACCOUNT', 'Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.', 'NUMBER'), ('STRICT_JSON_OUTPUT', 'false', 'false', '', 'JSON output is strictly compliant to the specification', 'BOOLEAN'), ('TIMESTAMP_DAY_IS_ALWAYS_24H', 'false', 'false', '', 'If set, arithmetic on days always uses 24 hours per day,\npossibly not preserving the time (due to DST changes)', 'BOOLEAN'), ('TIMESTAMP_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for timestamp', 'STRING'), ('TIMESTAMP_LTZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_LTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_NTZ_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3', 'YYYY-MM-DD HH24:MI:SS.FF3', '', 'Display format for TIMESTAMP_NTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', '', 'Default display format for all timestamp types.', 'STRING'), ('TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_NTZ', 'TIMESTAMP_NTZ', '', 'If TIMESTAMP type is used, what specific TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ, TIMESTAMP_NTZ (default) or TIMESTAMP_TZ', 'STRING'), ('TIMESTAMP_TZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_TZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMEZONE', 'UTC', 'America/Los_Angeles', 'SESSION', 'time zone', 'STRING'), ('TIME_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for time', 'STRING'), ('TIME_OUTPUT_FORMAT', 'HH24:MI:SS', 'HH24:MI:SS', '', 'display format for time', 'STRING'), ('TRANSACTION_ABORT_ON_ERROR', 'false', 'false', '', 'If this parameter is true, and a statement issued within a non-autocommit\ntransaction returns with an error, then the non-autocommit transaction is\naborted. All statements issued inside that transaction will fail until an\ncommit or rollback statement is executed to close that transaction.', 'BOOLEAN'), ('TRANSACTION_DEFAULT_ISOLATION_LEVEL', 'READ COMMITTED', 'READ COMMITTED', '', 'The default isolation level when starting a starting a transaction, when no\nisolation level was specified', 'STRING'), ('TWO_DIGIT_CENTURY_START', '1970', '1970', '', "For 2-digit dates, defines a century-start year.\nFor example, when set to 1980:\n  - parsing a string '79' will produce 2079\n  - parsing a string '80' will produce 1980", 'NUMBER'), ('UI_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('UNSUPPORTED_DDL_ACTION', 'ignore', 'ignore', '', 'The action to take upon encountering an unsupported ddl statement', 'STRING'), ('USE_CACHED_RESULT', 'true', 'true', '', 'If enabled, query results can be reused between successive invocations of the same query as long as the original result has not expired', 'BOOLEAN'), ('WEEK_OF_YEAR_POLICY', '0', '0', '', 'Defines the policy of assigning weeks to years:\n0: the week needs to have 4 days in a given year;\n1: a week with January 1st always belongs to a given year.', 'NUMBER'), ('WEEK_START', '0', '0', '', 'Defines the first day of the week:\n0: legacy Snowflake behavior; 1: Monday .. 7: Sunday.', 'NUMBER')], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:41,342 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('ABORT_DETACHED_QUERY', 'true', 'false', 'ACCOUNT', 'If true, Snowflake will automatically abort queries when it detects that the client has disappeared.', 'BOOLEAN'), ('AUTOCOMMIT', 'true', 'true', '', 'The autocommit property determines whether is statement should to be implicitly\nwrapped within a transaction or not. If autocommit is set to true, then a \nstatement that requires a transaction is executed within a transaction \nimplicitly. If autocommit is off then an explicit commit or rollback is required\nto close a transaction. The default autocommit value is true.', 'BOOLEAN'), ('AUTOCOMMIT_API_SUPPORTED', 'true', 'true', '', 'Whether autocommit feature is enabled for this client. This parameter is for\nSnowflake use only.', 'BOOLEAN'), ('BINARY_INPUT_FORMAT', 'HEX', 'HEX', '', 'input format for binary', 'STRING'), ('BINARY_OUTPUT_FORMAT', 'HEX', 'HEX', '', 'display format for binary', 'STRING'), ('CLIENT_ENABLE_CONSERVATIVE_MEMORY_USAGE', 'true', 'true', '', 'Enables conservative memory usage for JDBC', 'BOOLEAN'), ('CLIENT_ENABLE_DEFAULT_OVERWRITE_IN_PUT', 'false', 'false', '', 'Set default value of overwrite option to true for put command, if overwrite option is not specified in the sql command.', 'BOOLEAN'), ('CLIENT_ENABLE_LOG_INFO_STATEMENT_PARAMETERS', 'false', 'false', '', 'Enable info-level logging for Prepared Statement binding parameters', 'BOOLEAN'), ('CLIENT_MEMORY_LIMIT', '1536', '1536', '', 'Limit the amount of memory used by the client in MB', 'NUMBER'), ('CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog and schema if set to true', 'BOOLEAN'), ('CLIENT_METADATA_USE_SESSION_DATABASE', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog but multiple schemas if set to true (in conjunction with CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'BOOLEAN'), ('CLIENT_PREFETCH_THREADS', '4', '4', 'SESSION', 'Customer parameter to control threads, 0=auto', 'NUMBER'), ('CLIENT_RESULT_CHUNK_SIZE', '160', '160', '', 'Set the max result chunk size in MB on the client side', 'NUMBER'), ('CLIENT_RESULT_COLUMN_CASE_INSENSITIVE', 'false', 'false', '', 'Column name search is case insensitive in clients', 'BOOLEAN'), ('CLIENT_SESSION_CLONE', 'false', 'false', '', 'If true, client clones a new session from the previously used tokens for the account and user.', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE', 'false', 'false', '', 'If true, client session will not expire automatically', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY', '900', '3600', 'SESSION', 'Heartbeat frequency in seconds for CLIENT_SESSION_KEEP_ALIVE.', 'NUMBER'), ('CLIENT_TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_LTZ', 'TIMESTAMP_LTZ', '', 'If a variable is bound to the TIMESTAMP data type using the bind API, determines which TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ (default), TIMESTAMP_NTZ', 'STRING'), ('C_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to C API', 'STRING'), ('DATE_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for date', 'STRING'), ('DATE_OUTPUT_FORMAT', 'YYYY-MM-DD', 'YYYY-MM-DD', '', 'display format for date', 'STRING'), ('ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION', 'true', 'true', '', 'Enable physical-type optimizations used in Snowflake to affect the Parquet output', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_MERGE', 'true', 'true', '', 'raise an error when attempting to merge-update a row that joins many rows', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_UPDATE', 'false', 'false', '', 'raise an error when attempting to update a row that joins many rows', 'BOOLEAN'), ('GEOGRAPHY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOGRAPHY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GEOMETRY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOMETRY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GO_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to golang driver', 'STRING'), ('JDBC_FORMAT_DATE_WITH_TIMEZONE', 'true', 'true', '', "When true, ResultSet#getDate(int columnIndex, Calendar cal) and getDate(String columnName, Calendar cal) will display the date using the Calendar's output.", 'BOOLEAN'), ('JDBC_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to jdbc', 'STRING'), ('JDBC_TREAT_DECIMAL_AS_INT', 'true', 'true', '', 'When scale is 0, whether to treat Decimal as Int in JDBC', 'BOOLEAN'), ('JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC', 'false', 'false', '', 'When true, Timestamp_NTZ values are always stored in UTC timezone', 'BOOLEAN'), ('JDBC_USE_SESSION_TIMEZONE', 'true', 'true', '', 'When true, JDBC driver will not display timezone offset between JVM and session.', 'BOOLEAN'), ('JSON_INDENT', '2', '2', '', 'Width of indentation in JSON output (0 for compact)', 'NUMBER'), ('JS_TREAT_INTEGER_AS_BIGINT', 'false', 'false', '', 'If true, the nodejs client will convert all integer columns to bigint type', 'BOOLEAN'), ('LANGUAGE', 'en', 'en', '', 'The selected language that will be used by UI, GS, Query Coordination and XP. The input languages should be in BCP-47 format. AKA. dash format.See LocaleUtil.java for the details.', 'STRING'), ('LOCK_TIMEOUT', '10800', '43200', 'ACCOUNT', 'Number of seconds to wait while trying to lock a resource, before timing out \nand aborting the statement. A value of 0 turns off lock waiting i.e. the \nstatement must acquire the lock immediately or abort. If multiple resources \nneed to be locked by the statement, the timeout applies separately to each \nlock attempt.', 'NUMBER'), ('LOG_LEVEL', 'OFF', 'OFF', '', 'LOG_LEVEL to use when filtering events', 'STRING'), ('MULTI_STATEMENT_COUNT', '1', '1', '', 'Number of statement included in submitted query text.\nThis parameter is submitted by user to avoid sql injection.\nValue 1 means one statement, value > 1 means n statement\ncan be executed, if not equal to the value will raise the\nexception. Value 0 means any number of statement can be\n executed', 'NUMBER'), ('ODBC_QUERY_RESULT_FORMAT', 'ARROW', 'JSON', 'SYSTEM', 'Format used to serialize query result to send back to odbc', 'STRING'), ('ODBC_SCHEMA_CACHING', 'false', 'false', '', 'When true, enables schema caching in ODBC. This can speed up SQLColumns API calls.', 'BOOLEAN'), ('ODBC_USE_CUSTOM_SQL_DATA_TYPES', 'false', 'false', '', 'ODBC return snowflake specific sql data types in result set metadata', 'BOOLEAN'), ('PREVENT_UNLOAD_TO_INTERNAL_STAGES', 'false', 'false', '', 'Prevent unload sensitive data to non-external stages (user stage, table stage, named stage).', 'BOOLEAN'), ('PYTHON_CONNECTOR_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('QA_TEST_NAME', '', '', '', 'Test name if running in QA mode. Used as a diversifier for shared pools', 'STRING'), ('QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to client ', 'STRING'), ('QUERY_TAG', 'RUN_ID=51782', '', 'SESSION', 'String (up to 2000 characters) used to tag statements executed by the session', 'STRING'), ('QUOTED_IDENTIFIERS_IGNORE_CASE', 'false', 'false', '', 'If true, the case of quoted identifiers is ignored', 'BOOLEAN'), ('ROWS_PER_RESULTSET', '0', '0', '', 'maxium number of rows in a result set', 'NUMBER'), ('SEARCH_PATH', '$current, $public', '$current, $public', '', 'Search path for unqualified object references.', 'STRING'), ('SHOW_EXTERNAL_TABLE_KIND_AS_TABLE', 'true', 'true', '', 'Change the way external table KIND info is displayed by SHOW TABLES and SHOW OBJECTS. The KIND column of external tables is displayed as TABLE if true, EXTERNAL_TABLE otherwise.', 'BOOLEAN'), ('SIMULATED_DATA_SHARING_CONSUMER', '', '', '', 'Data sharing views will return rows as if executed in the specified consumer account.', 'STRING'), ('SNOWPARK_LAZY_ANALYSIS', 'true', 'true', '', 'Enable lazy result schema analysis for Snowpark', 'BOOLEAN'), ('SQL_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'The result set will use the format provided with the default of JSON', 'STRING'), ('STATEMENT_QUEUED_TIMEOUT_IN_SECONDS', '10800', '0', 'ACCOUNT', 'Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.', 'NUMBER'), ('STATEMENT_TIMEOUT_IN_SECONDS', '10800', '172800', 'ACCOUNT', 'Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.', 'NUMBER'), ('STRICT_JSON_OUTPUT', 'false', 'false', '', 'JSON output is strictly compliant to the specification', 'BOOLEAN'), ('TIMESTAMP_DAY_IS_ALWAYS_24H', 'false', 'false', '', 'If set, arithmetic on days always uses 24 hours per day,\npossibly not preserving the time (due to DST changes)', 'BOOLEAN'), ('TIMESTAMP_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for timestamp', 'STRING'), ('TIMESTAMP_LTZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_LTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_NTZ_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3', 'YYYY-MM-DD HH24:MI:SS.FF3', '', 'Display format for TIMESTAMP_NTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', '', 'Default display format for all timestamp types.', 'STRING'), ('TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_NTZ', 'TIMESTAMP_NTZ', '', 'If TIMESTAMP type is used, what specific TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ, TIMESTAMP_NTZ (default) or TIMESTAMP_TZ', 'STRING'), ('TIMESTAMP_TZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_TZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMEZONE', 'UTC', 'America/Los_Angeles', 'SESSION', 'time zone', 'STRING'), ('TIME_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for time', 'STRING'), ('TIME_OUTPUT_FORMAT', 'HH24:MI:SS', 'HH24:MI:SS', '', 'display format for time', 'STRING'), ('TRANSACTION_ABORT_ON_ERROR', 'false', 'false', '', 'If this parameter is true, and a statement issued within a non-autocommit\ntransaction returns with an error, then the non-autocommit transaction is\naborted. All statements issued inside that transaction will fail until an\ncommit or rollback statement is executed to close that transaction.', 'BOOLEAN'), ('TRANSACTION_DEFAULT_ISOLATION_LEVEL', 'READ COMMITTED', 'READ COMMITTED', '', 'The default isolation level when starting a starting a transaction, when no\nisolation level was specified', 'STRING'), ('TWO_DIGIT_CENTURY_START', '1970', '1970', '', "For 2-digit dates, defines a century-start year.\nFor example, when set to 1980:\n  - parsing a string '79' will produce 2079\n  - parsing a string '80' will produce 1980", 'NUMBER'), ('UI_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('UNSUPPORTED_DDL_ACTION', 'ignore', 'ignore', '', 'The action to take upon encountering an unsupported ddl statement', 'STRING'), ('USE_CACHED_RESULT', 'true', 'true', '', 'If enabled, query results can be reused between successive invocations of the same query as long as the original result has not expired', 'BOOLEAN'), ('WEEK_OF_YEAR_POLICY', '0', '0', '', 'Defines the policy of assigning weeks to years:\n0: the week needs to have 4 days in a given year;\n1: a week with January 1st always belongs to a given year.', 'NUMBER'), ('WEEK_START', '0', '0', '', 'Defines the first day of the week:\n0: legacy Snowflake behavior; 1: Monday .. 7: Sunday.', 'NUMBER')], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:41,343 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('ABORT_DETACHED_QUERY', 'true', 'false', 'ACCOUNT', 'If true, Snowflake will automatically abort queries when it detects that the client has disappeared.', 'BOOLEAN'), ('AUTOCOMMIT', 'true', 'true', '', 'The autocommit property determines whether is statement should to be implicitly\nwrapped within a transaction or not. If autocommit is set to true, then a \nstatement that requires a transaction is executed within a transaction \nimplicitly. If autocommit is off then an explicit commit or rollback is required\nto close a transaction. The default autocommit value is true.', 'BOOLEAN'), ('AUTOCOMMIT_API_SUPPORTED', 'true', 'true', '', 'Whether autocommit feature is enabled for this client. This parameter is for\nSnowflake use only.', 'BOOLEAN'), ('BINARY_INPUT_FORMAT', 'HEX', 'HEX', '', 'input format for binary', 'STRING'), ('BINARY_OUTPUT_FORMAT', 'HEX', 'HEX', '', 'display format for binary', 'STRING'), ('CLIENT_ENABLE_CONSERVATIVE_MEMORY_USAGE', 'true', 'true', '', 'Enables conservative memory usage for JDBC', 'BOOLEAN'), ('CLIENT_ENABLE_DEFAULT_OVERWRITE_IN_PUT', 'false', 'false', '', 'Set default value of overwrite option to true for put command, if overwrite option is not specified in the sql command.', 'BOOLEAN'), ('CLIENT_ENABLE_LOG_INFO_STATEMENT_PARAMETERS', 'false', 'false', '', 'Enable info-level logging for Prepared Statement binding parameters', 'BOOLEAN'), ('CLIENT_MEMORY_LIMIT', '1536', '1536', '', 'Limit the amount of memory used by the client in MB', 'NUMBER'), ('CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog and schema if set to true', 'BOOLEAN'), ('CLIENT_METADATA_USE_SESSION_DATABASE', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog but multiple schemas if set to true (in conjunction with CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'BOOLEAN'), ('CLIENT_PREFETCH_THREADS', '4', '4', 'SESSION', 'Customer parameter to control threads, 0=auto', 'NUMBER'), ('CLIENT_RESULT_CHUNK_SIZE', '160', '160', '', 'Set the max result chunk size in MB on the client side', 'NUMBER'), ('CLIENT_RESULT_COLUMN_CASE_INSENSITIVE', 'false', 'false', '', 'Column name search is case insensitive in clients', 'BOOLEAN'), ('CLIENT_SESSION_CLONE', 'false', 'false', '', 'If true, client clones a new session from the previously used tokens for the account and user.', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE', 'false', 'false', '', 'If true, client session will not expire automatically', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY', '900', '3600', 'SESSION', 'Heartbeat frequency in seconds for CLIENT_SESSION_KEEP_ALIVE.', 'NUMBER'), ('CLIENT_TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_LTZ', 'TIMESTAMP_LTZ', '', 'If a variable is bound to the TIMESTAMP data type using the bind API, determines which TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ (default), TIMESTAMP_NTZ', 'STRING'), ('C_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to C API', 'STRING'), ('DATE_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for date', 'STRING'), ('DATE_OUTPUT_FORMAT', 'YYYY-MM-DD', 'YYYY-MM-DD', '', 'display format for date', 'STRING'), ('ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION', 'true', 'true', '', 'Enable physical-type optimizations used in Snowflake to affect the Parquet output', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_MERGE', 'true', 'true', '', 'raise an error when attempting to merge-update a row that joins many rows', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_UPDATE', 'false', 'false', '', 'raise an error when attempting to update a row that joins many rows', 'BOOLEAN'), ('GEOGRAPHY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOGRAPHY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GEOMETRY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOMETRY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GO_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to golang driver', 'STRING'), ('JDBC_FORMAT_DATE_WITH_TIMEZONE', 'true', 'true', '', "When true, ResultSet#getDate(int columnIndex, Calendar cal) and getDate(String columnName, Calendar cal) will display the date using the Calendar's output.", 'BOOLEAN'), ('JDBC_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to jdbc', 'STRING'), ('JDBC_TREAT_DECIMAL_AS_INT', 'true', 'true', '', 'When scale is 0, whether to treat Decimal as Int in JDBC', 'BOOLEAN'), ('JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC', 'false', 'false', '', 'When true, Timestamp_NTZ values are always stored in UTC timezone', 'BOOLEAN'), ('JDBC_USE_SESSION_TIMEZONE', 'true', 'true', '', 'When true, JDBC driver will not display timezone offset between JVM and session.', 'BOOLEAN'), ('JSON_INDENT', '2', '2', '', 'Width of indentation in JSON output (0 for compact)', 'NUMBER'), ('JS_TREAT_INTEGER_AS_BIGINT', 'false', 'false', '', 'If true, the nodejs client will convert all integer columns to bigint type', 'BOOLEAN'), ('LANGUAGE', 'en', 'en', '', 'The selected language that will be used by UI, GS, Query Coordination and XP. The input languages should be in BCP-47 format. AKA. dash format.See LocaleUtil.java for the details.', 'STRING'), ('LOCK_TIMEOUT', '10800', '43200', 'ACCOUNT', 'Number of seconds to wait while trying to lock a resource, before timing out \nand aborting the statement. A value of 0 turns off lock waiting i.e. the \nstatement must acquire the lock immediately or abort. If multiple resources \nneed to be locked by the statement, the timeout applies separately to each \nlock attempt.', 'NUMBER'), ('LOG_LEVEL', 'OFF', 'OFF', '', 'LOG_LEVEL to use when filtering events', 'STRING'), ('MULTI_STATEMENT_COUNT', '1', '1', '', 'Number of statement included in submitted query text.\nThis parameter is submitted by user to avoid sql injection.\nValue 1 means one statement, value > 1 means n statement\ncan be executed, if not equal to the value will raise the\nexception. Value 0 means any number of statement can be\n executed', 'NUMBER'), ('ODBC_QUERY_RESULT_FORMAT', 'ARROW', 'JSON', 'SYSTEM', 'Format used to serialize query result to send back to odbc', 'STRING'), ('ODBC_SCHEMA_CACHING', 'false', 'false', '', 'When true, enables schema caching in ODBC. This can speed up SQLColumns API calls.', 'BOOLEAN'), ('ODBC_USE_CUSTOM_SQL_DATA_TYPES', 'false', 'false', '', 'ODBC return snowflake specific sql data types in result set metadata', 'BOOLEAN'), ('PREVENT_UNLOAD_TO_INTERNAL_STAGES', 'false', 'false', '', 'Prevent unload sensitive data to non-external stages (user stage, table stage, named stage).', 'BOOLEAN'), ('PYTHON_CONNECTOR_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('QA_TEST_NAME', '', '', '', 'Test name if running in QA mode. Used as a diversifier for shared pools', 'STRING'), ('QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to client ', 'STRING'), ('QUERY_TAG', 'RUN_ID=51782', '', 'SESSION', 'String (up to 2000 characters) used to tag statements executed by the session', 'STRING'), ('QUOTED_IDENTIFIERS_IGNORE_CASE', 'false', 'false', '', 'If true, the case of quoted identifiers is ignored', 'BOOLEAN'), ('ROWS_PER_RESULTSET', '0', '0', '', 'maxium number of rows in a result set', 'NUMBER'), ('SEARCH_PATH', '$current, $public', '$current, $public', '', 'Search path for unqualified object references.', 'STRING'), ('SHOW_EXTERNAL_TABLE_KIND_AS_TABLE', 'true', 'true', '', 'Change the way external table KIND info is displayed by SHOW TABLES and SHOW OBJECTS. The KIND column of external tables is displayed as TABLE if true, EXTERNAL_TABLE otherwise.', 'BOOLEAN'), ('SIMULATED_DATA_SHARING_CONSUMER', '', '', '', 'Data sharing views will return rows as if executed in the specified consumer account.', 'STRING'), ('SNOWPARK_LAZY_ANALYSIS', 'true', 'true', '', 'Enable lazy result schema analysis for Snowpark', 'BOOLEAN'), ('SQL_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'The result set will use the format provided with the default of JSON', 'STRING'), ('STATEMENT_QUEUED_TIMEOUT_IN_SECONDS', '10800', '0', 'ACCOUNT', 'Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.', 'NUMBER'), ('STATEMENT_TIMEOUT_IN_SECONDS', '10800', '172800', 'ACCOUNT', 'Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.', 'NUMBER'), ('STRICT_JSON_OUTPUT', 'false', 'false', '', 'JSON output is strictly compliant to the specification', 'BOOLEAN'), ('TIMESTAMP_DAY_IS_ALWAYS_24H', 'false', 'false', '', 'If set, arithmetic on days always uses 24 hours per day,\npossibly not preserving the time (due to DST changes)', 'BOOLEAN'), ('TIMESTAMP_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for timestamp', 'STRING'), ('TIMESTAMP_LTZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_LTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_NTZ_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3', 'YYYY-MM-DD HH24:MI:SS.FF3', '', 'Display format for TIMESTAMP_NTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', '', 'Default display format for all timestamp types.', 'STRING'), ('TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_NTZ', 'TIMESTAMP_NTZ', '', 'If TIMESTAMP type is used, what specific TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ, TIMESTAMP_NTZ (default) or TIMESTAMP_TZ', 'STRING'), ('TIMESTAMP_TZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_TZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMEZONE', 'UTC', 'America/Los_Angeles', 'SESSION', 'time zone', 'STRING'), ('TIME_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for time', 'STRING'), ('TIME_OUTPUT_FORMAT', 'HH24:MI:SS', 'HH24:MI:SS', '', 'display format for time', 'STRING'), ('TRANSACTION_ABORT_ON_ERROR', 'false', 'false', '', 'If this parameter is true, and a statement issued within a non-autocommit\ntransaction returns with an error, then the non-autocommit transaction is\naborted. All statements issued inside that transaction will fail until an\ncommit or rollback statement is executed to close that transaction.', 'BOOLEAN'), ('TRANSACTION_DEFAULT_ISOLATION_LEVEL', 'READ COMMITTED', 'READ COMMITTED', '', 'The default isolation level when starting a starting a transaction, when no\nisolation level was specified', 'STRING'), ('TWO_DIGIT_CENTURY_START', '1970', '1970', '', "For 2-digit dates, defines a century-start year.\nFor example, when set to 1980:\n  - parsing a string '79' will produce 2079\n  - parsing a string '80' will produce 1980", 'NUMBER'), ('UI_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('UNSUPPORTED_DDL_ACTION', 'ignore', 'ignore', '', 'The action to take upon encountering an unsupported ddl statement', 'STRING'), ('USE_CACHED_RESULT', 'true', 'true', '', 'If enabled, query results can be reused between successive invocations of the same query as long as the original result has not expired', 'BOOLEAN'), ('WEEK_OF_YEAR_POLICY', '0', '0', '', 'Defines the policy of assigning weeks to years:\n0: the week needs to have 4 days in a given year;\n1: a week with January 1st always belongs to a given year.', 'NUMBER'), ('WEEK_START', '0', '0', '', 'Defines the first day of the week:\n0: legacy Snowflake behavior; 1: Monday .. 7: Sunday.', 'NUMBER')], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:41,344 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace table estimator_12_01_CSII_global_facility_count_20170727_rx as
    with
    t as(
    select
    facility_id as FacilityID,
    sum(total_spend) as total_spend
    from runner_10_cleaned_base_table
    group by 1
    ),
    s as(
    select
    *,
    case
    when datediff(day,dateadd(month,1,gp_transaction_date::date), (left('20170727',4)|| '-' || left(right('20170727',4),2) || '-' || right('20170727',2))::date) < 06  then 'Flag' -- use the day after if it includes an extra month. default 6
    else null
    end flag
    from runner_10_cleaned_base_table
    where facility_id in (select FacilityID from t where total_spend > 100000)
    )
    select
    gp_transaction_date as transaction_date,
    count(distinct facility_id) as facility_count
    from s
    where flag is null
    group by 1

2021-11-04 12:02:45,107 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=1277ad3a-1c23-4d03-87b9-c3e1cb0c08c4&request_guid=91056b46-b642-4ed6-b99c-edfae8659524 HTTP/1.1" 200 1040

2021-11-04 12:02:45,112 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_01_CSII_GLOBAL_FACILITY_COUNT_20170727_RX successfully created.',)]

2021-11-04 12:02:45,114 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace table estimator_12_02_CSII_manufacturer_facility_count_20170727_rx as
    with
    t as(
    select
    facility_id as FacilityID,
    sum(total_spend) as total_spend
    from runner_10_cleaned_base_table
    group by 1
    ),
    a as (
    select *
    from runner_11_05_CSII_aggregation_20170727
    
    )
    select
    transaction_date,
    sum(total_spend)/count(distinct facilityid) as avg_facility_spend,
    count(distinct facilityid)                  as facility_count,
    sum(total_spend)                            as total_spend
    from a
    where (facilityid
    in (select facilityid from t where total_spend > 100000))
    
    and (facilityid in (select facility_id from estimator_12_00_all_moa_same_store_20170727))
    group by 1

2021-11-04 12:02:47,148 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=082b03f5-a086-4bed-99d4-3d4311205ccc&request_guid=1192f6c3-432a-4fdb-8d46-f68ec5485ffd HTTP/1.1" 200 1044

2021-11-04 12:02:47,155 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_02_CSII_MANUFACTURER_FACILITY_COUNT_20170727_RX successfully created.',)]

2021-11-04 12:02:47,156 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace table estimator_12_03_CSII_factor_20170727_rx as
    select
    a.transaction_date                                      as gp_transaction_date,
    a.facility_count                                        as panel_facility_cnt,
    5100/a.facility_count                                   as facility_factor,
    b.avg_facility_spend,
    b.facility_count                                        as company_facility_count,
    b.total_spend,
    (5100/a.facility_count)*b.facility_count                as company_factor,
    row_number() over (order by a.transaction_date asc)     as date_cnt,
    row_number() over (order by a.transaction_date desc) as months_from_current
    from estimator_12_01_CSII_global_facility_count_20170727_rx as a
    left join estimator_12_02_CSII_manufacturer_facility_count_20170727_rx as b
    on a.transaction_date = b.transaction_date
    
    order by gp_transaction_date

2021-11-04 12:02:49,097 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=666e93ff-90a6-4795-b18f-4ba2529c4018&request_guid=e25cd312-7f2f-4ac8-97da-cba11587f07a HTTP/1.1" 200 1028

2021-11-04 12:02:49,100 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_RX successfully created.',)]

2021-11-04 12:02:49,100 | MainThread | INFO | run_sql_step | gp.runner | run_sql_step: steps\step_01b_create_12_03_non_SS_summary_tbl_.sql

2021-11-04 12:02:49,103 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_RX successfully created.',)], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:49,106 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_RX successfully created.',)], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:49,106 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_RX successfully created.',)], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:49,108 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace table estimator_12_02_CSII_manufacturer_facility_count_20170727_non_SS_rx as
    with
    t as(
    select
    facility_id         as FacilityID,
    sum(total_spend)    as total_spend
    from runner_10_cleaned_base_table
    group by 1
    ),
    a as (
    select *
    from runner_11_05_CSII_aggregation_20170727
    
    )
    select
    transaction_date,
    sum(total_spend)/count(distinct facilityid)     as avg_facility_spend,
    count(distinct facilityid)                      as facility_count,
    sum(total_spend)                                as total_spend
    from a
    where (facilityid in (select facilityid from t where total_spend > 100000))
    
    
    group by 1

2021-11-04 12:02:55,188 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=da226986-e26f-4c1f-9c13-223f96a78144&request_guid=db63b120-b759-4cbb-bfca-d47bf7c722d9 HTTP/1.1" 200 1050

2021-11-04 12:02:55,189 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_02_CSII_MANUFACTURER_FACILITY_COUNT_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:02:55,190 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace table estimator_12_03_CSII_factor_20170727_non_SS_rx as
    select
    a.transaction_date                                      as gp_transaction_date,
    a.facility_count                                        as panel_facility_cnt,
    5100/a.facility_count                                   as facility_factor,
    b.avg_facility_spend,
    b.facility_count                                        as company_facility_count,
    b.total_spend,
    (5100/a.facility_count)*b.facility_count                as company_factor,
    row_number() over (order by a.transaction_date asc)     as date_cnt,
    row_number() over (order by a.transaction_date desc)    as months_from_current
    from estimator_12_01_CSII_global_facility_count_20170727_rx as a
    left join estimator_12_02_CSII_manufacturer_facility_count_20170727_non_SS_rx as b
    on a.transaction_date = b.transaction_date
    
    order by gp_transaction_date

2021-11-04 12:02:56,786 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=33c0862b-1b79-4334-b468-2569fb74db47&request_guid=a534e39e-7a76-46e5-b2d0-92bc27928440 HTTP/1.1" 200 1031

2021-11-04 12:02:56,787 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:02:56,788 | MainThread | INFO | run_sql_step | gp.runner | run_sql_step: steps\step_02a_create_12_12_SS_projection_tbl.sql

2021-11-04 12:02:56,789 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_NON_SS_RX successfully created.',)], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:56,799 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_NON_SS_RX successfully created.',)], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:56,800 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [('Table ESTIMATOR_12_03_CSII_FACTOR_20170727_NON_SS_RX successfully created.',)], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:02:56,801 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_04_CSII_panel_20170727_rx as
    with t
    as (
    select
    *,
    case
    when months_from_current < 4 then 1
    else null
    end flag
    from estimator_12_03_CSII_factor_20170727_rx
    where flag is null
    order by months_from_current asc
    LIMIT 15
    )
    
    select
    gp_transaction_date,
    date_cnt                as x_date_cnt,
    company_factor          as y_facility_share,
    date_cnt*date_cnt       as x2_date,
    date_cnt*company_factor as xy_date_share
    from t
    order by gp_transaction_date asc

2021-11-04 12:02:57,969 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ebce6deb-8037-4765-92d0-2aa5cdb62dd0&request_guid=538205ad-f73e-45a1-8bb9-1c0eb51b3483 HTTP/1.1" 200 1027

2021-11-04 12:02:57,971 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_04_CSII_PANEL_20170727_RX successfully created.',)]

2021-11-04 12:02:57,972 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_05_CSII_summations_20170727_rx as
    select
    count(*)                as n,
    sum(x_date_cnt)         as sum_x,
    sum(y_facility_share)   as sum_y,
    sum(x2_date)            as sum_x2,
    sum(xy_date_share)      as sum_xy
    from estimator_12_04_CSII_panel_20170727_rx

2021-11-04 12:02:59,419 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=c4ae0dda-2c8e-4d8c-803b-6005ecb37687&request_guid=39b8ba18-ff24-4452-a2ed-4c3535d495db HTTP/1.1" 200 1031

2021-11-04 12:02:59,421 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_05_CSII_SUMMATIONS_20170727_RX successfully created.',)]

2021-11-04 12:02:59,421 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_06_CSII_slope_20170727_rx as
    select
    (n*sum_xy - sum_x*sum_y)/(n*sum_x2-(sum_x*sum_x)) as slope
    from estimator_12_05_CSII_summations_20170727_rx

2021-11-04 12:03:00,474 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b6dee094-b969-4803-8177-82e2f93166d1&request_guid=4b7ba557-62b8-4097-8c26-e309118c1cfd HTTP/1.1" 200 1028

2021-11-04 12:03:00,478 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_06_CSII_SLOPE_20170727_RX successfully created.',)]

2021-11-04 12:03:00,479 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_07_CSII_intercept_20170727_rx as
    with t as(
    select *
    from estimator_12_05_CSII_summations_20170727_rx
    cross join estimator_12_06_CSII_slope_20170727_rx
    )
    select
    *,
    (sum_y-slope*sum_x)/n as intercept
    from t

2021-11-04 12:03:01,479 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5db442bf-8e39-43ad-b123-a2d04fc9a2b3&request_guid=92383f96-ae9e-4a69-b0de-1772a182eb9f HTTP/1.1" 200 1030

2021-11-04 12:03:01,483 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_07_CSII_INTERCEPT_20170727_RX successfully created.',)]

2021-11-04 12:03:01,484 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_08_CSII_new_factor_20170727_rx as(
    with
    t as(
    select
    *,
    case
    when months_from_current < 4 then 1
    else null
    end flag
    from estimator_12_03_CSII_factor_20170727_rx
    order by gp_transaction_date asc
    ),
    s as(
    select
    a.*,
    b.slope,
    b.intercept
    from t as a
    left join estimator_12_07_CSII_intercept_20170727_rx as b
    on flag is not null
    )
    select
    *,
    ifnull((slope*date_cnt)+intercept, company_factor) as new_factor
    from s
    )

2021-11-04 12:03:02,663 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2bef1399-8a5e-4ece-bc2c-959de615bfbb&request_guid=fa7dacf7-3603-4a0a-ad23-c10369d2ae95 HTTP/1.1" 200 1031

2021-11-04 12:03:02,667 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_08_CSII_NEW_FACTOR_20170727_RX successfully created.',)]

2021-11-04 12:03:02,667 | MainThread | DEBUG | execute | gp.snowflake | SKIPPING EMPTY QUERY:

2021-11-04 12:03:02,668 | MainThread | DEBUG | execute | gp.snowflake | SQL:
    -- select * from estimator_12_08_CSII_new_factor_20170727_rx

2021-11-04 12:03:02,668 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    

2021-11-04 12:03:02,668 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_09_CSII_quarterly_estimate_20170727_rx as
    with
    t as(
    select
    case
    when 'CSII' ilike 'MDT%' then dateadd(month, -1, gp_transaction_date)
    else gp_transaction_date
    end new_date,
    gp_transaction_date,
    new_factor,
    avg_facility_spend
    from estimator_12_08_CSII_new_factor_20170727_rx
    )
    select
    year(new_date)                                                                          as year,
    quarter(new_date)                                                                       as quarter,
    listagg(distinct new_date, ',') within group (order by new_date)                        as new_months_agg,
    listagg(distinct gp_transaction_date, ',') within group (order by gp_transaction_date)  as old_months_agg,
    sum(new_factor*avg_facility_spend)                                                      as quarterly_estimate
    from t
    group by 1,2
    having year >=2012
    order by year, quarter

2021-11-04 12:03:03,854 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=da2e488c-df0f-4bc4-a674-bf705ca3576b&request_guid=eaf800f0-d1c6-4540-89d1-d1c28e34db57 HTTP/1.1" 200 1035

2021-11-04 12:03:03,856 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_09_CSII_QUARTERLY_ESTIMATE_20170727_RX successfully created.',)]

2021-11-04 12:03:03,858 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_10_CSII_join_official_revenue_20170727_rx as
    with
    t as(
    select
    year,
    quarter,
    official_revenue,
    fiscal_quarter,
    '20170727' as cut_date,
    reported_date,
    estimate
    from moa.FOUNDATION_ys.foundations_ticker_revenue_information
    where revenue_category = 'CSII'
    order by year, quarter
    ),
    s as(
    select
    max(reported_date) reported_date
    from t
    where reported_date >= cut_date
    and official_revenue is not null
    )
    select
    d.year,
    d.quarter,
    d.quarterly_estimate::float as quarterly_estimate,
    new_months_agg,
    old_months_agg,
    (
    case
    when e.official_revenue = 0 then d.quarterly_estimate
    when reported_date in (select reported_date from s) then null
    else e.official_revenue
    end
    )::float official_revenue,
    fiscal_quarter
    from estimator_12_09_CSII_quarterly_estimate_20170727_rx as d
    left join t as e
    on d.year = e.year
    and d.quarter = e.quarter

2021-11-04 12:03:05,352 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d9dcc816-9217-4aa2-963d-92e6c894945c&request_guid=444de5de-cd52-49b6-839c-47b56b0a346b HTTP/1.1" 200 1042

2021-11-04 12:03:05,354 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_10_CSII_JOIN_OFFICIAL_REVENUE_20170727_RX successfully created.',)]

2021-11-04 12:03:05,354 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_11_CSII_scaling_factor_20170727_rx as
    with
    n0 as(
    select
    *,
    row_number() over(order by year desc, quarter desc) as rwnumb,
    case
    when official_revenue is null then 1
    else 0
    end flag
    from estimator_12_10_CSII_join_official_revenue_20170727_rx
    ),
    n1 as(
    select
    year,
    quarter,
    quarterly_estimate,
    case
    when rwnumb = 1 and flag = 0 then null
    else official_revenue
    end official_revenue,
    rwnumb,
    case
    when rwnumb = 1 then 1
    when flag = 1 then flag
    else 0
    end flag
    from n0
    ),
    n2 as(
    select
    min(rwnumb) as min_numb
    from n1 where flag = 0
    ),
    n3 as(
    select
    max(rwnumb) as max_numb
    from n1
    where rwnumb < (select min_numb from n2)
    ),
    t as(
    select
    *,
    'CSII' as company_name,
    row_number() over(order by year desc, quarter desc) as numb
    from estimator_12_10_CSII_join_official_revenue_20170727_rx
    ),
    s as(
    select
    sum(quarterly_estimate) as qe_sum
    from t
    where
    case
    when company_name = 'CTEC' then numb between 1 + (select max_numb from n3) and 6 + (select max_numb from n3)
    when company_name != 'CTEC' then numb between 1 + (select max_numb from n3) and 4 + (select max_numb from n3)
    end
    ),
    u as(
    select
    sum(official_revenue) as or_sum
    from t
    where
    case
    when company_name = 'CTEC' then numb between 1 + (select max_numb from n3) and 6 + (select max_numb from n3)
    when company_name != 'CTEC' then numb between 1 + (select max_numb from n3) and 4 + (select max_numb from n3)
    end
    )
    select
    *,
    or_sum/qe_sum as factor
    from s
    left join u

2021-11-04 12:03:07,227 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=874b71f6-f69e-493f-8f6b-2d48d8b8c6d6&request_guid=1b081804-b81d-403a-bc3f-aeb8dd9b37e5 HTTP/1.1" 200 1035

2021-11-04 12:03:07,230 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_11_CSII_SCALING_FACTOR_20170727_RX successfully created.',)]

2021-11-04 12:03:07,230 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_12_CSII_scaled_estimate_20170727_rx as
    select
    a.*,
    b.factor,
    a.quarterly_estimate*b.factor as scaled_quarterly_estimate
    from estimator_12_10_CSII_join_official_revenue_20170727_rx as a
    left join estimator_12_11_CSII_scaling_factor_20170727_rx as b
    where 1 = 1

2021-11-04 12:03:08,481 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2fb52ada-5dca-43ab-b3bf-8eb7539312f6&request_guid=bdf13f98-37de-4b6c-a972-dd258498b6d8 HTTP/1.1" 200 1032

2021-11-04 12:03:08,485 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_12_CSII_SCALED_ESTIMATE_20170727_RX successfully created.',)]

2021-11-04 12:03:08,487 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    select
    year,
    quarter,
    official_revenue/1000000,
    quarterly_estimate/1000000,
    factor, scaled_quarterly_estimate/1000000,
    'CSII',
    '20170727'
    from estimator_12_12_CSII_scaled_estimate_20170727_rx
    where year > '2018'
    order by 1,2 asc

2021-11-04 12:03:09,010 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=161d0f6f-1bcc-4b6e-a8f8-f5235d58e197&request_guid=8173e9fd-b9ce-4fea-9eb2-ce4a951e8670 HTTP/1.1" 200 1171

2021-11-04 12:03:09,013 | MainThread | DEBUG | run_sql_step | gp.runner | []

2021-11-04 12:03:09,013 | MainThread | DEBUG | execute | gp.snowflake | SKIPPING EMPTY QUERY:

2021-11-04 12:03:09,013 | MainThread | DEBUG | execute | gp.snowflake | SQL:
    --------------------
    -- DONE
    --------------------

2021-11-04 12:03:09,013 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    

2021-11-04 12:03:09,013 | MainThread | INFO | run_sql_step | gp.runner | run_sql_step: steps\step_02b_create_12_12_non_SS_projection_tbl.sql

2021-11-04 12:03:09,015 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:03:09,024 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:03:09,024 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {}, 'IDBS': 'MOA.build_kd_20170727'}

2021-11-04 12:03:09,025 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_04_CSII_panel_20170727_non_SS_rx as
    with
    t as(
    select
    *,
    case
    when months_from_current < 4 then 1
    else null
    end flag
    from estimator_12_03_CSII_factor_20170727_non_SS_rx
    where flag is null
    order by months_from_current asc
    LIMIT 15
    )
    select
    gp_transaction_date,
    date_cnt                    as x_date_cnt,
    company_factor              as y_facility_share,
    date_cnt*date_cnt           as x2_date,
    date_cnt*company_factor     as xy_date_share
    from t
    order by gp_transaction_date asc

2021-11-04 12:03:14,160 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=3ffe640c-2555-4a6f-8e40-bba1f8b4002e&request_guid=f4d71f66-3828-4c2a-84f0-105dc725e5d4 HTTP/1.1" 200 1032

2021-11-04 12:03:14,162 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_04_CSII_PANEL_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:14,163 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_05_CSII_summations_20170727_non_SS_rx as
    select
    count(*)                as n,
    sum(x_date_cnt)         as sum_x,
    sum(y_facility_share)   as sum_y,
    sum(x2_date)            as sum_x2,
    sum(xy_date_share)      as sum_xy
    from estimator_12_04_CSII_panel_20170727_non_SS_rx

2021-11-04 12:03:15,546 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=32da6e65-4330-450f-8236-9e174f9acbd3&request_guid=462a39c6-2347-46cc-9809-2c2d3c19f2d2 HTTP/1.1" 200 1036

2021-11-04 12:03:15,550 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_05_CSII_SUMMATIONS_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:15,551 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_06_CSII_slope_20170727_non_SS_rx as
    select (n*sum_xy - sum_x*sum_y)/(n*sum_x2-(sum_x*sum_x)) as slope
    from estimator_12_05_CSII_summations_20170727_non_SS_rx

2021-11-04 12:03:18,579 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ac0cfb54-4b5e-44a7-be84-14c612e8b0dc&request_guid=aafe34cd-e994-401f-a8de-5ca56245b639 HTTP/1.1" 200 1034

2021-11-04 12:03:18,580 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_06_CSII_SLOPE_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:18,580 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_07_CSII_intercept_20170727_non_SS_rx as
    with
    t as(
    select *
    from estimator_12_05_CSII_summations_20170727_non_SS_rx
    cross join estimator_12_06_CSII_slope_20170727_non_SS_rx
    )
    select
    *,
    (sum_y-slope*sum_x)/n as intercept
    from t

2021-11-04 12:03:21,884 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=5a864c69-7d7e-4dad-97ea-c523b2230dfb&request_guid=71903ffb-b7b2-452c-b726-fab5c16235a3 HTTP/1.1" 200 1036

2021-11-04 12:03:21,885 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_07_CSII_INTERCEPT_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:21,886 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_08_CSII_new_factor_20170727_non_SS_rx as(
    with t as(
    select
    *,
    case
    when months_from_current < 4 then 1
    else null
    end flag
    from estimator_12_03_CSII_factor_20170727_non_SS_rx
    order by gp_transaction_date asc
    ),
    s as(
    select
    a.*,
    b.slope,
    b.intercept
    from t as a
    left join estimator_12_07_CSII_intercept_20170727_non_SS_rx as b
    on flag is not null
    )
    select
    *,
    ifnull((slope*date_cnt)+intercept, company_factor) as new_factor
    from s
    )

2021-11-04 12:03:23,632 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4fcf558a-fc5d-4754-9da0-039cb87b823d&request_guid=daf9d70b-4da3-45e1-b5a3-e3383a1f06fe HTTP/1.1" 200 1035

2021-11-04 12:03:23,639 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_08_CSII_NEW_FACTOR_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:23,641 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_09_CSII_quarterly_estimate_20170727_non_SS_rx as
    with
    t as(
    select
    case
    when 'CSII' ilike 'MDT%' then dateadd(month, -1, gp_transaction_date)
    else gp_transaction_date
    end new_date,
    gp_transaction_date ,
    new_factor,
    avg_facility_spend
    from estimator_12_08_CSII_new_factor_20170727_non_SS_rx
    )
    select
    year(new_date)                                                                          as year,
    quarter(new_date)                                                                       as quarter,
    listagg(distinct new_date, ',') within group (order by new_date)                        as new_months_agg,
    listagg(distinct gp_transaction_date, ',') within group (order by gp_transaction_date)  as old_months_agg,
    sum(new_factor*avg_facility_spend)                                                      as quarterly_estimate
    from t
    group by 1,2
    having year >=2012
    order by year, quarter

2021-11-04 12:03:25,318 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=82441254-20de-4c5d-a6a3-5a8b13f651ca&request_guid=e1ffe1ae-e1e8-4259-a7fb-c0de52df1527 HTTP/1.1" 200 1041

2021-11-04 12:03:25,319 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_09_CSII_QUARTERLY_ESTIMATE_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:25,320 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_10_CSII_join_official_revenue_20170727_non_SS_rx as
    with
    t as(
    select
    year,
    quarter,
    official_revenue,
    fiscal_quarter,
    '20170727' as cut_date,
    reported_date,
    estimate
    from moa.FOUNDATION_ys.foundations_ticker_revenue_information
    where revenue_category = 'CSII'
    order by year, quarter
    ),
    s as(
    select
    max(reported_date) reported_date
    from t
    where reported_date >= cut_date
    and official_revenue is not null
    )
    select
    d.year,
    d.quarter,
    d.quarterly_estimate::float as quarterly_estimate,
    new_months_agg,
    old_months_agg,
    (
    case
    when e.official_revenue = 0 then d.quarterly_estimate
    when reported_date in (select reported_date from s) then null
    else e.official_revenue
    end
    )::float official_revenue,
    fiscal_quarter
    from estimator_12_09_CSII_quarterly_estimate_20170727_non_SS_rx as d
    left join t as e
    on d.year = e.year
    and d.quarter = e.quarter

2021-11-04 12:03:26,571 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=de966db9-9f5d-490c-9390-1410bd97f457&request_guid=346f12ab-c14f-4fc8-b7be-31b3c37ea3e7 HTTP/1.1" 200 1048

2021-11-04 12:03:26,574 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_10_CSII_JOIN_OFFICIAL_REVENUE_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:26,575 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_11_CSII_scaling_factor_20170727_non_SS_rx as
    with
    n0 as(
    select
    *,
    row_number() over(order by year desc, quarter desc) as rwnumb,
    case
    when official_revenue is null then 1
    else 0
    end flag
    from estimator_12_10_CSII_join_official_revenue_20170727_non_SS_rx
    ),
    n1 as(
    select
    year,
    quarter,
    quarterly_estimate,
    case
    when rwnumb = 1 and flag = 0 then null
    else official_revenue
    end official_revenue,
    rwnumb,
    case
    when rwnumb = 1 then 1
    when flag = 1 then flag else 0
    end flag
    from n0
    ),
    n2 as(
    select min(rwnumb) as min_numb
    from n1 where flag = 0
    ),
    n3 as(
    select max(rwnumb) as max_numb
    from n1
    where rwnumb < (select min_numb from n2)
    ),
    t as(
    select
    *,
    'CSII' as company_name,
    row_number() over(order by year desc, quarter desc) as numb
    from estimator_12_10_CSII_join_official_revenue_20170727_non_SS_rx
    ),
    s as(
    select
    sum(quarterly_estimate) as qe_sum
    from t
    where
    case
    when company_name = 'CTEC' then numb between 1 + (select max_numb from n3) and 6 + (select max_numb from n3)
    when company_name != 'CTEC' then numb between 1 + (select max_numb from n3) and 4 + (select max_numb from n3)
    end
    ),
    u as(
    select
    sum(official_revenue) as or_sum
    from t
    where
    case
    when company_name = 'CTEC' then numb between 1 + (select max_numb from n3) and 6 + (select max_numb from n3)
    when company_name != 'CTEC' then numb between 1 + (select max_numb from n3) and 4 + (select max_numb from n3)
    end
    )
    select
    *,
    or_sum/qe_sum as factor
    from s
    left join u

2021-11-04 12:03:29,430 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=dac2325a-0b80-4b64-88c5-e5dba4c4affc&request_guid=50dc5527-9991-430f-892d-efa2b1b067b6 HTTP/1.1" 200 1041

2021-11-04 12:03:29,436 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_11_CSII_SCALING_FACTOR_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:29,438 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    create or replace transient table estimator_12_12_CSII_scaled_estimate_20170727_non_SS_rx as
    select
    a.*,
    b.factor,
    a.quarterly_estimate*b.factor as scaled_quarterly_estimate
    from estimator_12_10_CSII_join_official_revenue_20170727_non_SS_rx as a
    left join estimator_12_11_CSII_scaling_factor_20170727_non_SS_rx as b
    where 1 = 1

2021-11-04 12:03:33,044 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=cb598731-ff5a-4d2a-bfb7-94a1e65d726a&request_guid=8212e34d-4e44-43ed-8f2f-453ce75fbd8b HTTP/1.1" 200 1039

2021-11-04 12:03:33,045 | MainThread | DEBUG | run_sql_step | gp.runner | [('Table ESTIMATOR_12_12_CSII_SCALED_ESTIMATE_20170727_NON_SS_RX successfully created.',)]

2021-11-04 12:03:33,046 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    select
    year,
    quarter,
    official_revenue/1000000,
    quarterly_estimate/1000000,
    factor,
    scaled_quarterly_estimate/1000000,
    'CSII',
    '20170727'
    from estimator_12_12_CSII_scaled_estimate_20170727_non_SS_rx
    where year > '2018'
    order by 1,2 asc

2021-11-04 12:03:33,477 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=bfbfeb22-6a89-4d4a-9348-9eca7d1c6ffe&request_guid=6c9bca08-ae14-4f0f-967f-7f15d68da3cc HTTP/1.1" 200 1176

2021-11-04 12:03:33,483 | MainThread | DEBUG | run_sql_step | gp.runner | []

2021-11-04 12:03:33,485 | MainThread | DEBUG | execute | gp.snowflake | SKIPPING EMPTY QUERY:

2021-11-04 12:03:33,485 | MainThread | DEBUG | execute | gp.snowflake | SQL:
    ------------------------
    -- DONE
    ------------------------

2021-11-04 12:03:33,485 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    

2021-11-04 12:03:33,486 | MainThread | INFO | run_py_step | gp.runner | steps\step_03_projection_excel_sheet_creation.py

2021-11-04 12:03:35,211 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=ac795753-0aa2-4089-a1f4-7eeaa893de90&request_guid=f857d295-56ee-4197-a730-c2e039a5dd92 HTTP/1.1" 200 1283

2021-11-04 12:03:35,667 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=d508aa13-b260-4cdc-92a9-9497648f6a02&request_guid=372e233d-51f6-4bb5-aeaf-d0f1c6020d6a HTTP/1.1" 200 3586

2021-11-04 12:03:35,950 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=088eedaf-62e9-4e55-bdb0-eb5793b9e580&request_guid=6f905828-d15c-4f55-a766-9475cf66bdb8 HTTP/1.1" 200 1287

2021-11-04 12:03:36,119 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=0ee390b3-3f56-478e-9b81-d14e774c2a9f&request_guid=a63b64cf-99b0-4546-8f98-be21c82312b7 HTTP/1.1" 200 3586

2021-11-04 12:03:36,481 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=04994f6f-621e-43d8-ba97-de5bcf5b52cc&request_guid=a512190d-ddb0-4111-afdd-6dcc257d431f HTTP/1.1" 200 1296

2021-11-04 12:03:36,819 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a6826523-3c88-46be-86d3-a50463e8c9c2&request_guid=0a703196-322b-453a-9cf3-b4199f445397 HTTP/1.1" 200 3977

2021-11-04 12:03:36,999 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=9958cbbe-736e-4001-9210-bb06a6394d30&request_guid=053dfc75-0825-412f-b07e-35668f9ea949 HTTP/1.1" 200 1296

2021-11-04 12:03:37,173 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=4cbe7bad-9033-4833-b2ee-d486bc364b83&request_guid=d0792961-21aa-485d-8d99-133d4e58b595 HTTP/1.1" 200 3977

2021-11-04 12:03:37,635 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b35592bd-ebfc-4269-b9d1-4c3dba673902&request_guid=cc6b96ab-0e01-4dbb-b2af-6161050c4ba5 HTTP/1.1" 200 8963

2021-11-04 12:03:38,015 | MainThread | DEBUG | run_py_step | gp.runner | NO RUN

2021-11-04 12:03:38,150 | MainThread | DEBUG | run_py_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=True), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {'step_03_projection_excel_sheet_creation': <module 'steps.step_03_projection_excel_sheet_creation' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\steps\\step_03_projection_excel_sheet_creation.py'>}, 'IDBS': 'MOA.build_kd_20170727', 'FACILITY':             2016-01-01  2016-02-01  2016-03-01  2016-04-01  2016-05-01  2016-06-01  2016-07-01  2016-08-01  ...    2016-11-01    2016-12-01    2017-01-01    2017-02-01    2017-03-01    2017-04-01    2017-05-01    2017-06-01
FACILITYID                                                                                                  ...                                                                                                                
37147              NaN      2970.0     29645.0     46385.0     22390.0     79980.0      6790.0     39940.0  ...  42724.515354  46737.530982  46648.212061  46855.043701  47955.759987  47944.833655  47959.238161  49752.439722
10057         132770.0    214290.0    139720.0    105565.0     79170.0    156805.0     38710.0    111020.0  ...  47253.128045  46416.778337  46077.299847  34499.685382  32259.489043  37078.899864  37321.395643  31572.530878
32266           3395.0     27160.0      8850.0     47530.0         NaN      1560.0      8490.0     12595.0  ...  14440.164511  17644.693678  17464.957031  17357.829370  16977.968411  15655.173949  15035.330639  25200.705648
11425          93825.0     80195.0     66090.0     70425.0     99990.0     39525.0     86130.0     68235.0  ...  22612.071092  23022.692606  22105.241713  22713.973623  22852.943858  24658.406194  25298.923991  24895.043360
28144          15280.0     25465.0     18675.0      7640.0     16975.0         NaN     14430.0      5095.0  ...   6923.026393   6635.232747   7030.602649   6048.627944   6035.699155   6246.523366  19036.145990  23455.143359
...                ...         ...         ...         ...         ...         ...         ...         ...  ...           ...           ...           ...           ...           ...           ...           ...           ...
52627              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
58951              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
65998              NaN      3645.0      3645.0         NaN         NaN         NaN         NaN         NaN  ...      0.000000      0.000000      0.000000           NaN           NaN           NaN           NaN           NaN
66175              NaN         NaN     14685.0         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
66505              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN

[112 rows x 36 columns], 'LR':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'LR_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'PROJ':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'PROJ_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'RAW':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'RAW_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'TIC_PROJ_No_SS': <utilities.util.PROJECTION object at 0x000001B221D16A00>, 'TIC_PROJ_SS': <utilities.util.PROJECTION object at 0x000001B208E32B80>, 'excel_book': <openpyxl.workbook.workbook.Workbook object at 0x000001B223DD6400>, 'filename': '..\\Alphas\\2017Q2\\2017Q2_Estimate_20170727_CSII.xlsx', 'np': <module 'numpy' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\numpy\\__init__.py'>, 'pd': <module 'pandas' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\pandas\\__init__.py'>, 'proj_results':   Ticker  SameStore_12_12  SameStore_LR  SameStore_No_CVD_LR  SameStore_No_LR  No_SameStore_12_12  No_SameStore_LR  No_SameStore_No_CVD_LR    Average
0   CSII        61.121104      61.42854             61.42854        53.875858           53.305367        41.133108               41.133108  53.346518, 'pxl': <module 'openpyxl' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\openpyxl\\__init__.py'>, 'tic': 'CSII', 'util': <module 'utilities.util' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\utilities\\util.py'>, 'writer': <pandas.io.excel._openpyxl.OpenpyxlWriter object at 0x000001B2090543D0>}

2021-11-04 12:03:38,151 | MainThread | INFO | run_sql_step | gp.runner | run_sql_step: steps\step_99_finish.sql

2021-11-04 12:03:38,289 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=True), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {'step_03_projection_excel_sheet_creation': <module 'steps.step_03_projection_excel_sheet_creation' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\steps\\step_03_projection_excel_sheet_creation.py'>}, 'IDBS': 'MOA.build_kd_20170727', 'FACILITY':             2016-01-01  2016-02-01  2016-03-01  2016-04-01  2016-05-01  2016-06-01  2016-07-01  2016-08-01  ...    2016-11-01    2016-12-01    2017-01-01    2017-02-01    2017-03-01    2017-04-01    2017-05-01    2017-06-01
FACILITYID                                                                                                  ...                                                                                                                
37147              NaN      2970.0     29645.0     46385.0     22390.0     79980.0      6790.0     39940.0  ...  42724.515354  46737.530982  46648.212061  46855.043701  47955.759987  47944.833655  47959.238161  49752.439722
10057         132770.0    214290.0    139720.0    105565.0     79170.0    156805.0     38710.0    111020.0  ...  47253.128045  46416.778337  46077.299847  34499.685382  32259.489043  37078.899864  37321.395643  31572.530878
32266           3395.0     27160.0      8850.0     47530.0         NaN      1560.0      8490.0     12595.0  ...  14440.164511  17644.693678  17464.957031  17357.829370  16977.968411  15655.173949  15035.330639  25200.705648
11425          93825.0     80195.0     66090.0     70425.0     99990.0     39525.0     86130.0     68235.0  ...  22612.071092  23022.692606  22105.241713  22713.973623  22852.943858  24658.406194  25298.923991  24895.043360
28144          15280.0     25465.0     18675.0      7640.0     16975.0         NaN     14430.0      5095.0  ...   6923.026393   6635.232747   7030.602649   6048.627944   6035.699155   6246.523366  19036.145990  23455.143359
...                ...         ...         ...         ...         ...         ...         ...         ...  ...           ...           ...           ...           ...           ...           ...           ...           ...
52627              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
58951              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
65998              NaN      3645.0      3645.0         NaN         NaN         NaN         NaN         NaN  ...      0.000000      0.000000      0.000000           NaN           NaN           NaN           NaN           NaN
66175              NaN         NaN     14685.0         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
66505              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN

[112 rows x 36 columns], 'LR':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'LR_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'PROJ':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'PROJ_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'RAW':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'RAW_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'TIC_PROJ_No_SS': <utilities.util.PROJECTION object at 0x000001B221D16A00>, 'TIC_PROJ_SS': <utilities.util.PROJECTION object at 0x000001B208E32B80>, 'excel_book': <openpyxl.workbook.workbook.Workbook object at 0x000001B223DD6400>, 'filename': '..\\Alphas\\2017Q2\\2017Q2_Estimate_20170727_CSII.xlsx', 'np': <module 'numpy' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\numpy\\__init__.py'>, 'pd': <module 'pandas' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\pandas\\__init__.py'>, 'proj_results':   Ticker  SameStore_12_12  SameStore_LR  SameStore_No_CVD_LR  SameStore_No_LR  No_SameStore_12_12  No_SameStore_LR  No_SameStore_No_CVD_LR    Average
0   CSII        61.121104      61.42854             61.42854        53.875858           53.305367        41.133108               41.133108  53.346518, 'pxl': <module 'openpyxl' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\openpyxl\\__init__.py'>, 'tic': 'CSII', 'util': <module 'utilities.util' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\utilities\\util.py'>, 'writer': <pandas.io.excel._openpyxl.OpenpyxlWriter object at 0x000001B2090543D0>}

2021-11-04 12:03:38,430 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=True), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {'step_03_projection_excel_sheet_creation': <module 'steps.step_03_projection_excel_sheet_creation' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\steps\\step_03_projection_excel_sheet_creation.py'>}, 'IDBS': 'MOA.build_kd_20170727', 'FACILITY':             2016-01-01  2016-02-01  2016-03-01  2016-04-01  2016-05-01  2016-06-01  2016-07-01  2016-08-01  ...    2016-11-01    2016-12-01    2017-01-01    2017-02-01    2017-03-01    2017-04-01    2017-05-01    2017-06-01
FACILITYID                                                                                                  ...                                                                                                                
37147              NaN      2970.0     29645.0     46385.0     22390.0     79980.0      6790.0     39940.0  ...  42724.515354  46737.530982  46648.212061  46855.043701  47955.759987  47944.833655  47959.238161  49752.439722
10057         132770.0    214290.0    139720.0    105565.0     79170.0    156805.0     38710.0    111020.0  ...  47253.128045  46416.778337  46077.299847  34499.685382  32259.489043  37078.899864  37321.395643  31572.530878
32266           3395.0     27160.0      8850.0     47530.0         NaN      1560.0      8490.0     12595.0  ...  14440.164511  17644.693678  17464.957031  17357.829370  16977.968411  15655.173949  15035.330639  25200.705648
11425          93825.0     80195.0     66090.0     70425.0     99990.0     39525.0     86130.0     68235.0  ...  22612.071092  23022.692606  22105.241713  22713.973623  22852.943858  24658.406194  25298.923991  24895.043360
28144          15280.0     25465.0     18675.0      7640.0     16975.0         NaN     14430.0      5095.0  ...   6923.026393   6635.232747   7030.602649   6048.627944   6035.699155   6246.523366  19036.145990  23455.143359
...                ...         ...         ...         ...         ...         ...         ...         ...  ...           ...           ...           ...           ...           ...           ...           ...           ...
52627              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
58951              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
65998              NaN      3645.0      3645.0         NaN         NaN         NaN         NaN         NaN  ...      0.000000      0.000000      0.000000           NaN           NaN           NaN           NaN           NaN
66175              NaN         NaN     14685.0         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
66505              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN

[112 rows x 36 columns], 'LR':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'LR_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'PROJ':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'PROJ_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'RAW':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'RAW_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'TIC_PROJ_No_SS': <utilities.util.PROJECTION object at 0x000001B221D16A00>, 'TIC_PROJ_SS': <utilities.util.PROJECTION object at 0x000001B208E32B80>, 'excel_book': <openpyxl.workbook.workbook.Workbook object at 0x000001B223DD6400>, 'filename': '..\\Alphas\\2017Q2\\2017Q2_Estimate_20170727_CSII.xlsx', 'np': <module 'numpy' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\numpy\\__init__.py'>, 'pd': <module 'pandas' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\pandas\\__init__.py'>, 'proj_results':   Ticker  SameStore_12_12  SameStore_LR  SameStore_No_CVD_LR  SameStore_No_LR  No_SameStore_12_12  No_SameStore_LR  No_SameStore_No_CVD_LR    Average
0   CSII        61.121104      61.42854             61.42854        53.875858           53.305367        41.133108               41.133108  53.346518, 'pxl': <module 'openpyxl' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\openpyxl\\__init__.py'>, 'tic': 'CSII', 'util': <module 'utilities.util' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\utilities\\util.py'>, 'writer': <pandas.io.excel._openpyxl.OpenpyxlWriter object at 0x000001B2090543D0>}

2021-11-04 12:03:38,563 | MainThread | DEBUG | run_sql_step | gp.runner | env.globals: {'range': <class 'range'>, 'dict': <class 'dict'>, 'lipsum': <function generate_lorem_ipsum at 0x000001B208D349D0>, 'cycler': <class 'jinja2.utils.Cycler'>, 'joiner': <class 'jinja2.utils.Joiner'>, 'namespace': <class 'jinja2.utils.Namespace'>, 'fetch_all_simple': <function fetch_all_simple at 0x000001B208C23A60>, 'fetch_one_simple': <function fetch_one_simple at 0x000001B208DEA550>, 'fetch_value': <function fetch_value at 0x000001B208DF2550>, 'SimpleNamespace': <class 'types.SimpleNamespace'>, 'last_fetch': [], 'settings': namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, settings_file='C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\settings.rx.json', settings_json='{\n    "email_enabled": false,\n    "debug": true,    \n    "run_auto": true,\n\n\n\n\n\n    "cut_date": "20170727",\n    "prev_18mo": "\'2016-01-01\'",\n    "FY_QTR":"2017Q2",\n    "exclude_id":"",\n    "wkbk_exist":false,\n\n\n\n\n    "keep_temp_tables": false,\n\n    "replace_build_schemas": false,\n\n    "replace_stage_schema": false,\n\n    "drop_stage_tables": false,\n\n    "database": "MOA",\n\n\n    "build_schema":         "build_kd_",\n    "foundation_schema":    "foundation_ys",\n    "stage_schema":         "stage_kd",\n    "product_schema":       "*** not used yet ***",\n\n\n\n    "limit": null,\n\n\n\n\n\n\n\n    "ticker_list":["CSII"],\n\n    "max_threads": 10,\n    "warehouse"         : "vader"\n}   ', settings_map=namespace(FY_QTR='2017Q2', build_schema='build_kd_', cut_date='20170727', database='MOA', debug=True, drop_stage_tables=False, email_enabled=False, exclude_id='', foundation_schema='foundation_ys', keep_temp_tables=False, limit=None, max_threads=10, prev_18mo="'2016-01-01'", product_schema='*** not used yet ***', replace_build_schemas=False, replace_stage_schema=False, run_auto=True, stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=False), settings_subfile='rx', stage_schema='stage_kd', ticker_list=['CSII'], warehouse='vader', wkbk_exist=True), 'run_id': 51782, 'git_hash': 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'run_date': datetime.date(2021, 11, 4), 'job_output_url': 'https://s3.amazonaws.com/guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030', 'cwd': 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas', 'log_debug': <function log_debug at 0x000001B208DF25E0>, 'log_info': <function log_info at 0x000001B208DF2670>, 'log_warning': <function log_warning at 0x000001B208DF2700>, 'log_error': <function log_error at 0x000001B208DF2790>, 'raise': <function raise_helper at 0x000001B208DF28B0>, 'assert': <function assert_helper at 0x000001B208DF2820>, 'validate_pk': <function validate_primary_keys at 0x000001B208DF29D0>, 'validate_uk': <function validate_unique_keys at 0x000001B208DF2A60>, 'modules': {'step_03_projection_excel_sheet_creation': <module 'steps.step_03_projection_excel_sheet_creation' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\steps\\step_03_projection_excel_sheet_creation.py'>}, 'IDBS': 'MOA.build_kd_20170727', 'FACILITY':             2016-01-01  2016-02-01  2016-03-01  2016-04-01  2016-05-01  2016-06-01  2016-07-01  2016-08-01  ...    2016-11-01    2016-12-01    2017-01-01    2017-02-01    2017-03-01    2017-04-01    2017-05-01    2017-06-01
FACILITYID                                                                                                  ...                                                                                                                
37147              NaN      2970.0     29645.0     46385.0     22390.0     79980.0      6790.0     39940.0  ...  42724.515354  46737.530982  46648.212061  46855.043701  47955.759987  47944.833655  47959.238161  49752.439722
10057         132770.0    214290.0    139720.0    105565.0     79170.0    156805.0     38710.0    111020.0  ...  47253.128045  46416.778337  46077.299847  34499.685382  32259.489043  37078.899864  37321.395643  31572.530878
32266           3395.0     27160.0      8850.0     47530.0         NaN      1560.0      8490.0     12595.0  ...  14440.164511  17644.693678  17464.957031  17357.829370  16977.968411  15655.173949  15035.330639  25200.705648
11425          93825.0     80195.0     66090.0     70425.0     99990.0     39525.0     86130.0     68235.0  ...  22612.071092  23022.692606  22105.241713  22713.973623  22852.943858  24658.406194  25298.923991  24895.043360
28144          15280.0     25465.0     18675.0      7640.0     16975.0         NaN     14430.0      5095.0  ...   6923.026393   6635.232747   7030.602649   6048.627944   6035.699155   6246.523366  19036.145990  23455.143359
...                ...         ...         ...         ...         ...         ...         ...         ...  ...           ...           ...           ...           ...           ...           ...           ...           ...
52627              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
58951              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
65998              NaN      3645.0      3645.0         NaN         NaN         NaN         NaN         NaN  ...      0.000000      0.000000      0.000000           NaN           NaN           NaN           NaN           NaN
66175              NaN         NaN     14685.0         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN
66505              NaN         NaN         NaN         NaN         NaN         NaN         NaN         NaN  ...           NaN           NaN           NaN           NaN           NaN           NaN           NaN           NaN

[112 rows x 36 columns], 'LR':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  10.319027      44.5  4.560434    10.319027       NaN       NaN  0.057511      4.560434        47.059238
1   2016Q2  10.721292      48.5  4.560434    10.721292  0.089888  0.038983  0.008118      4.560434        48.893738
2   2016Q3   9.895439      49.8  4.560434     9.895439  0.026804 -0.077029 -0.093825      4.560434        45.127492
3   2016Q4  10.853575      50.0  4.560434    10.853575  0.004016  0.096826 -0.010060      4.560434        49.497006
4   2017Q1  12.472885      52.1  4.560434    12.472885  0.042000  0.149196  0.091780      4.560434        56.881763
5   2017Q2  13.402476      52.9  4.560434    13.469890  0.015355  0.074529  0.161220      4.560434        61.428540, 'LR_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'LR_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY  SCALE_ADJUST  ADJ_PROJECTIONS
0   2016Q1  36.967544      44.5  1.300405    36.967544       NaN       NaN  0.080287      1.300405        48.072774
1   2016Q2  39.256906      48.5  1.300405    39.256906  0.089888  0.061929  0.052575      1.300405        51.049872
2   2016Q3  36.231138      49.8  1.300405    36.231138  0.026804 -0.077076 -0.053913      1.300405        47.115149
3   2016Q4  38.774114      50.0  1.300405    38.774114  0.004016  0.070188  0.008441      1.300405        50.422046
4   2017Q1  39.843694      52.1  1.300405    39.843694  0.042000  0.027585 -0.005510      1.300405        51.812933
5   2017Q2  40.991362      52.9  1.300405    41.133108  0.015355  0.028804  0.011147      1.300405        53.489694, 'PROJ':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.319027      44.5  4.560434    47.059238       NaN       NaN  0.057511
1   2016Q2  10.721292      48.5  4.560434    48.893738  0.089888  0.038983  0.008118
2   2016Q3   9.895439      49.8  4.560434    45.127492  0.026804 -0.077029 -0.093825
3   2016Q4  10.853575      50.0  4.560434    49.497006  0.004016  0.096826 -0.010060
4   2017Q1  12.472885      52.1  4.560434    56.881763  0.042000  0.149196  0.091780
5   2017Q2  13.402476      52.9  4.560434    61.121104  0.015355  0.074529  0.155408, 'PROJ_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'PROJ_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  36.967544      44.5  1.300405    48.072774       NaN       NaN  0.080287
1   2016Q2  39.256906      48.5  1.300405    51.049872  0.089888  0.061929  0.052575
2   2016Q3  36.231138      49.8  1.300405    47.115149  0.026804 -0.077076 -0.053913
3   2016Q4  38.774114      50.0  1.300405    50.422046  0.004016  0.070188  0.008441
4   2017Q1  39.843694      52.1  1.300405    51.812933  0.042000  0.027585 -0.005510
5   2017Q2  40.991362      52.9  1.300405    53.305367  0.015355  0.028804  0.007663, 'RAW':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD':   CALENDAR  RAW_SPEND  REPORTED     FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1   2.920936      44.5  16.615151    48.531793       NaN       NaN  0.090602
1   2016Q2   3.156140      48.5  16.615151    52.439744  0.089888  0.080524  0.081232
2   2016Q3   2.759010      49.8  16.615151    45.841369  0.026804 -0.125828 -0.079491
3   2016Q4   2.973298      50.0  16.615151    49.401804  0.004016  0.077669 -0.011964
4   2017Q1   3.172832      52.1  16.615151    52.717084  0.042000  0.067108  0.011844
5   2017Q2   3.242574      52.9  16.615151    53.875858  0.015355  0.021981  0.018447, 'RAW_CVD_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'RAW_No_SS':   CALENDAR  RAW_SPEND  REPORTED    FACTOR  PROJECTIONS       QoQ   Est_QoQ  ACCURACY
0   2016Q1  10.495371      44.5  4.722632    49.565776       NaN       NaN  0.113838
1   2016Q2  11.561329      48.5  4.722632    54.599901  0.089888  0.101565  0.125771
2   2016Q3  10.104382      49.8  4.722632    47.719276  0.026804 -0.126019 -0.041782
3   2016Q4  10.626008      50.0  4.722632    50.182727  0.004016  0.051624  0.003655
4   2017Q1  10.142246      52.1  4.722632    47.898095  0.042000 -0.045526 -0.080651
5   2017Q2   6.676780      52.9  4.722632    31.531972  0.015355 -0.341686 -0.403932, 'TIC_PROJ_No_SS': <utilities.util.PROJECTION object at 0x000001B221D16A00>, 'TIC_PROJ_SS': <utilities.util.PROJECTION object at 0x000001B208E32B80>, 'excel_book': <openpyxl.workbook.workbook.Workbook object at 0x000001B223DD6400>, 'filename': '..\\Alphas\\2017Q2\\2017Q2_Estimate_20170727_CSII.xlsx', 'np': <module 'numpy' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\numpy\\__init__.py'>, 'pd': <module 'pandas' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\pandas\\__init__.py'>, 'proj_results':   Ticker  SameStore_12_12  SameStore_LR  SameStore_No_CVD_LR  SameStore_No_LR  No_SameStore_12_12  No_SameStore_LR  No_SameStore_No_CVD_LR    Average
0   CSII        61.121104      61.42854             61.42854        53.875858           53.305367        41.133108               41.133108  53.346518, 'pxl': <module 'openpyxl' from 'C:\\Users\\redmond.xia\\AppData\\Local\\Programs\\Python\\lib\\site-packages\\openpyxl\\__init__.py'>, 'tic': 'CSII', 'util': <module 'utilities.util' from 'C:\\dev\\da.research\\personal\\rxia\\ETL_Alphas\\utilities\\util.py'>, 'writer': <pandas.io.excel._openpyxl.OpenpyxlWriter object at 0x000001B2090543D0>}

2021-11-04 12:03:38,564 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    select current_user(), current_role(), current_warehouse(), current_database(), current_schema(), current_session()

2021-11-04 12:03:38,733 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=a204cc15-36f3-4179-9d72-3d58561e21d4&request_guid=334910bb-3704-43d4-a1a9-c1b221fb2b47 HTTP/1.1" 200 1065

2021-11-04 12:03:38,735 | MainThread | DEBUG | run_sql_step | gp.runner | [('RXIA', 'ANALYST', 'VADER', 'MOA', 'BUILD_KD_20170727', '16995209695274')]

2021-11-04 12:03:38,736 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show locks

2021-11-04 12:03:38,993 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2dfb544a-6773-40b1-a04f-0dbaf43ed2b4&request_guid=21aee8a4-90cf-434d-a636-a05020a0db83 HTTP/1.1" 200 1098

2021-11-04 12:03:38,994 | MainThread | DEBUG | run_sql_step | gp.runner | []

2021-11-04 12:03:38,995 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show transactions

2021-11-04 12:03:39,245 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=2682c572-1f46-4db1-b05f-568e6af71eee&request_guid=7178bf1a-20b6-47e0-8ff1-c09e5411719c HTTP/1.1" 200 1095

2021-11-04 12:03:39,246 | MainThread | DEBUG | run_sql_step | gp.runner | []

2021-11-04 12:03:39,247 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show databases

2021-11-04 12:03:39,489 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=82a6ece7-3e30-437d-9e98-286d8dd5488e&request_guid=194a0635-89bc-4c09-85f8-ee44be45e4d5 HTTP/1.1" 200 1945

2021-11-04 12:03:39,494 | MainThread | DEBUG | send_batch | snowflake.connector.telemetry | Sending 1 logs to telemetry. Data is {'logs': [{'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d0e', 'value': 818}, 'timestamp': '1636041754951'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328ea', 'value': 821}, 'timestamp': '1636041756182'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8d4-0000-0f7505f30b26', 'value': 819}, 'timestamp': '1636041756382'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e983-0000-0f7505f2edd2', 'value': 831}, 'timestamp': '1636041757200'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d12', 'value': 822}, 'timestamp': '1636041758419'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d12', 'value': 0}, 'timestamp': '1636041758419'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f332f6', 'value': 818}, 'timestamp': '1636041758650'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f332f6', 'value': 0}, 'timestamp': '1636041758650'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328ee', 'value': 820}, 'timestamp': '1636041759883'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328ee', 'value': 0}, 'timestamp': '1636041759883'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328f2', 'value': 824}, 'timestamp': '1636041760070'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328f2', 'value': 0}, 'timestamp': '1636041760070'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e983-0000-0f7505f2edd6', 'value': 820}, 'timestamp': '1636041760256'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e983-0000-0f7505f2edd6', 'value': 0}, 'timestamp': '1636041760256'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8d4-0000-0f7505f30b2a', 'value': 824}, 'timestamp': '1636041760467'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e8d4-0000-0f7505f30b2a', 'value': 0}, 'timestamp': '1636041760467'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e983-0000-0f7505f2edda', 'value': 826}, 'timestamp': '1636041760750'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e983-0000-0f7505f2edda', 'value': 0}, 'timestamp': '1636041760750'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d16', 'value': 822}, 'timestamp': '1636041760959'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d16', 'value': 0}, 'timestamp': '1636041760959'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d1a', 'value': 821}, 'timestamp': '1636041761144'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d1a', 'value': 0}, 'timestamp': '1636041761144'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f332fa', 'value': 822}, 'timestamp': '1636041761325'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f332fa', 'value': 1}, 'timestamp': '1636041761326'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f332fe', 'value': 819}, 'timestamp': '1636041765108'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f332fe', 'value': 1}, 'timestamp': '1636041765109'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f33302', 'value': 826}, 'timestamp': '1636041767152'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f33302', 'value': 0}, 'timestamp': '1636041767152'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f33306', 'value': 819}, 'timestamp': '1636041769099'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9eb-0000-0f7505f33306', 'value': 0}, 'timestamp': '1636041769099'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328f6', 'value': 818}, 'timestamp': '1636041775189'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328f6', 'value': 0}, 'timestamp': '1636041775189'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e983-0000-0f7505f2edde', 'value': 817}, 'timestamp': '1636041776787'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e983-0000-0f7505f2edde', 'value': 0}, 'timestamp': '1636041776787'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328fa', 'value': 821}, 'timestamp': '1636041777970'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328fa', 'value': 0}, 'timestamp': '1636041777970'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328fe', 'value': 821}, 'timestamp': '1636041779420'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e9ac-0000-0f7505f328fe', 'value': 0}, 'timestamp': '1636041779420'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d1e', 'value': 819}, 'timestamp': '1636041780476'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d1e', 'value': 0}, 'timestamp': '1636041780476'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d22', 'value': 822}, 'timestamp': '1636041781481'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01122-0502-e8ec-0000-0f7505f31d22', 'value': 0}, 'timestamp': '1636041781481'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ede2', 'value': 815}, 'timestamp': '1636041782663'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ede2', 'value': 0}, 'timestamp': '1636041782663'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f3330a', 'value': 824}, 'timestamp': '1636041783856'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f3330a', 'value': 0}, 'timestamp': '1636041783856'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ede6', 'value': 822}, 'timestamp': '1636041785353'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ede6', 'value': 0}, 'timestamp': '1636041785353'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f32902', 'value': 819}, 'timestamp': '1636041787228'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f32902', 'value': 0}, 'timestamp': '1636041787228'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d26', 'value': 821}, 'timestamp': '1636041788483'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d26', 'value': 0}, 'timestamp': '1636041788483'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8d4-0000-0f7505f30b2e', 'value': 819}, 'timestamp': '1636041789012'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8d4-0000-0f7505f30b2e', 'value': 0}, 'timestamp': '1636041789012'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edea', 'value': 819}, 'timestamp': '1636041794161'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edea', 'value': 1}, 'timestamp': '1636041794162'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d2a', 'value': 820}, 'timestamp': '1636041795548'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d2a', 'value': 0}, 'timestamp': '1636041795548'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edee', 'value': 818}, 'timestamp': '1636041798579'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edee', 'value': 0}, 'timestamp': '1636041798579'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edf2', 'value': 824}, 'timestamp': '1636041801885'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edf2', 'value': 0}, 'timestamp': '1636041801885'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f3330e', 'value': 825}, 'timestamp': '1636041803634'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f3330e', 'value': 2}, 'timestamp': '1636041803636'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8d4-0000-0f7505f30b32', 'value': 819}, 'timestamp': '1636041805319'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8d4-0000-0f7505f30b32', 'value': 0}, 'timestamp': '1636041805319'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edf6', 'value': 821}, 'timestamp': '1636041806572'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edf6', 'value': 0}, 'timestamp': '1636041806572'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f32906', 'value': 821}, 'timestamp': '1636041809434'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f32906', 'value': 1}, 'timestamp': '1636041809435'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f3290a', 'value': 819}, 'timestamp': '1636041813044'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f3290a', 'value': 0}, 'timestamp': '1636041813044'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d2e', 'value': 823}, 'timestamp': '1636041813480'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d2e', 'value': 1}, 'timestamp': '1636041813481'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edfa', 'value': 824}, 'timestamp': '1636041815215'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edfa', 'value': 0}, 'timestamp': '1636041815215'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f3290e', 'value': 821}, 'timestamp': '1636041815669'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f3290e', 'value': 1}, 'timestamp': '1636041815670'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f33312', 'value': 820}, 'timestamp': '1636041815951'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f33312', 'value': 0}, 'timestamp': '1636041815951'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edfe', 'value': 819}, 'timestamp': '1636041816121'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2edfe', 'value': 0}, 'timestamp': '1636041816121'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d32', 'value': 819}, 'timestamp': '1636041816482'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d32', 'value': 0}, 'timestamp': '1636041816482'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ee02', 'value': 826}, 'timestamp': '1636041816824'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ee02', 'value': 0}, 'timestamp': '1636041816824'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d36', 'value': 824}, 'timestamp': '1636041817003'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d36', 'value': 0}, 'timestamp': '1636041817003'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ee06', 'value': 825}, 'timestamp': '1636041817175'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ee06', 'value': 0}, 'timestamp': '1636041817175'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f33316', 'value': 833}, 'timestamp': '1636041817650'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f33316', 'value': 4}, 'timestamp': '1636041817654'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ee0a', 'value': 819}, 'timestamp': '1636041818734'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e983-0000-0f7505f2ee0a', 'value': 0}, 'timestamp': '1636041818734'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f3331a', 'value': 819}, 'timestamp': '1636041818994'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9eb-0000-0f7505f3331a', 'value': 0}, 'timestamp': '1636041818994'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d3a', 'value': 821}, 'timestamp': '1636041819246'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e8ec-0000-0f7505f31d3a', 'value': 0}, 'timestamp': '1636041819246'}, {'message': {'type': 'client_time_consume_first_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f32912', 'value': 821}, 'timestamp': '1636041819491'}, {'message': {'type': 'client_time_consume_last_result', 'query_id': '01a01123-0502-e9ac-0000-0f7505f32912', 'value': 0}, 'timestamp': '1636041819491'}]}.

2021-11-04 12:03:39,630 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /telemetry/send?request_guid=c0803399-11e1-4f18-af2e-c0d8d2ba6712 HTTP/1.1" 200 86

2021-11-04 12:03:39,630 | MainThread | DEBUG | send_batch | snowflake.connector.telemetry | Failed to upload metrics to telemetry.
Traceback (most recent call last):
  File "C:\Users\redmond.xia\AppData\Local\Programs\Python\lib\site-packages\snowflake\connector\json_result.py", line 107, in __next__
    raise StopIteration
StopIteration

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\redmond.xia\AppData\Local\Programs\Python\lib\site-packages\snowflake\connector\telemetry.py", line 109, in send_batch
    ret = self._rest.request(TelemetryClient.SF_PATH_TELEMETRY, body=body,
  File "C:\Users\redmond.xia\AppData\Local\Programs\Python\lib\site-packages\snowflake\connector\network.py", line 341, in request
    return self._post_request(
  File "C:\Users\redmond.xia\AppData\Local\Programs\Python\lib\site-packages\snowflake\connector\network.py", line 564, in _post_request
    if ret.get('data') and ret['data'].get('queryId'):
AttributeError: 'str' object has no attribute 'get'
2021-11-04 12:03:39,633 | MainThread | DEBUG | run_sql_step | gp.runner | [(datetime.datetime(2021, 10, 18, 20, 4, 5, 70000, tzinfo=<UTC>), 'AHA', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 18, 20, 5, 32, 131000, tzinfo=<UTC>), 'AHA_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2020, 3, 19, 14, 47, 15, 889000, tzinfo=<UTC>), 'AUROCHS', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2018, 5, 4, 13, 13, 49, 59000, tzinfo=<UTC>), 'BACKUP', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2021, 3, 16, 21, 11, 45, 107000, tzinfo=<UTC>), 'BISON', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 3, 16, 21, 15, 58, 132000, tzinfo=<UTC>), 'BISON_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2017, 5, 10, 13, 51, 21, 627000, tzinfo=<UTC>), 'CHINAJOBS', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2018, 4, 24, 15, 58, 34, 944000, tzinfo=<UTC>), 'CLIENT', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 6, 349000, tzinfo=<UTC>), 'CMS_NPPES', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 11, 439000, tzinfo=<UTC>), 'CMS_NPPES_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 16, 304000, tzinfo=<UTC>), 'CMS_PROVIDER_OF_SERVICE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 19, 14, 18, 20, 44000, tzinfo=<UTC>), 'CMS_PROVIDER_OF_SERVICE_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2017, 5, 10, 20, 36, 41, 445000, tzinfo=<UTC>), 'FOOKU', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 4, 30, 13, 52, 44, 176000, tzinfo=<UTC>), 'MAMMOTH', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 5, 10, 20, 38, 21, 832000, tzinfo=<UTC>), 'MOA', 'N', 'Y', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2018, 1, 22, 14, 41, 58, 380000, tzinfo=<UTC>), 'MOA_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2020, 6, 23, 21, 26, 3, 825000, tzinfo=<UTC>), 'MOA_LIVE_ARCHIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 1, 20, 40, 11, 674000, tzinfo=<UTC>), 'MONITOR', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 9, 28, 16, 51, 1, 276000, tzinfo=<UTC>), 'MONITOR_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2019, 5, 1, 22, 17, 48, 996000, tzinfo=<UTC>), 'PETREL', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2019, 5, 13, 20, 46, 56, 191000, tzinfo=<UTC>), 'PETREL_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2020, 6, 1, 17, 15, 49, 687000, tzinfo=<UTC>), 'PIKA', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2018, 12, 17, 17, 31, 11, 90000, tzinfo=<UTC>), 'POTOROO', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2019, 5, 13, 21, 24, 7, 869000, tzinfo=<UTC>), 'POTOROO_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2020, 2, 28, 17, 59, 36, 675000, tzinfo=<UTC>), 'PUBLICDATA', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2019, 8, 20, 13, 49, 57, 361000, tzinfo=<UTC>), 'PUBLISH_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2019, 8, 20, 14, 23, 35, 969000, tzinfo=<UTC>), 'PUBLISH_STAGE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2017, 5, 10, 13, 44, 41, 757000, tzinfo=<UTC>), 'QUAGGA', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 2, 27, 18, 29, 58, 460000, tzinfo=<UTC>), 'RAPTOR', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 5, 5, 15, 16, 4, 153000, tzinfo=<UTC>), 'RAWDATA', 'N', 'N', '', 'SYSADMIN', 'Original data, Read/Write for ETL, Read/Only for Analysts', '', '1'), (datetime.datetime(2017, 2, 13, 18, 48, 10, 531000, tzinfo=<UTC>), 'RESEARCH', 'Y', 'N', '', 'SYSADMIN', 'For R&D', '', '1'), (datetime.datetime(2021, 7, 28, 19, 8, 14, 219000, tzinfo=<UTC>), 'SARCO', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 7, 28, 19, 8, 19, 694000, tzinfo=<UTC>), 'SARCO_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2020, 2, 28, 17, 59, 52, 793000, tzinfo=<UTC>), 'SHARED', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2018, 8, 22, 4, 12, 45, 68000, tzinfo=<UTC>), 'SNOWFLAKE', 'N', 'N', 'SNOWFLAKE.ACCOUNT_USAGE', '', '', '', '1'), (datetime.datetime(2017, 5, 8, 14, 16, 13, 8000, tzinfo=<UTC>), 'STEGA', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2021, 10, 18, 20, 6, 30, 999000, tzinfo=<UTC>), 'TARPAN', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2021, 10, 18, 20, 6, 32, 653000, tzinfo=<UTC>), 'TARPAN_LIVE', 'N', 'N', '', 'ETL', '', '', '1'), (datetime.datetime(2018, 12, 17, 17, 30, 58, 527000, tzinfo=<UTC>), 'TEMP', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2017, 2, 27, 18, 29, 59, 63000, tzinfo=<UTC>), 'TRACKER', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2019, 3, 8, 18, 7, 17, 943000, tzinfo=<UTC>), 'TRACKER2_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1'), (datetime.datetime(2020, 3, 20, 15, 18, 58, 984000, tzinfo=<UTC>), 'TRACKER3_LIVE', 'N', 'N', '', 'SYSADMIN', '', '', '1')]

2021-11-04 12:03:39,640 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show schemas in database

2021-11-04 12:03:47,863 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=77681853-fb19-472b-8a8b-d5c636578872&request_guid=312171fc-56b0-4184-95dd-4d90b6eeea89 HTTP/1.1" 200 13023

2021-11-04 12:03:47,872 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:47,875 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:47,877 | MainThread | DEBUG | run_sql_step | gp.runner | [(datetime.datetime(2018, 12, 19, 17, 47, 13, 983000, tzinfo=<UTC>), 'BASE', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 8, 6, 14, 28, 11, 407000, tzinfo=<UTC>), 'BUILD_AF_20180719', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180719, RUN_ID=1514, SETTINGS=af, AUTO=True, GIT_HASH=89f7bbd7411530e40efb2130373761a0253e569e', '', '1'), (datetime.datetime(2020, 6, 10, 18, 38, 33, 616000, tzinfo=<UTC>), 'BUILD_JJ', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200604, RUN_ID=24023, SETTINGS=jj, AUTO=True, GIT_HASH=4ad8a20bcd30ab1e18d242203b17ce99687f4343', '', '1'), (datetime.datetime(2018, 12, 4, 20, 25, 15, 707000, tzinfo=<UTC>), 'BUILD_KD_20160108', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20160108, RUN_ID=4273, SETTINGS=kd, AUTO=True, GIT_HASH=a0131519674a51ddbf7d336a1fd99ec14fb76501', '', '1'), (datetime.datetime(2018, 12, 4, 16, 35, 19, 878000, tzinfo=<UTC>), 'BUILD_KD_20160501', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20160501, RUN_ID=4270, SETTINGS=kd, AUTO=True, GIT_HASH=a0131519674a51ddbf7d336a1fd99ec14fb76501', '', '1'), (datetime.datetime(2021, 9, 2, 20, 57, 35, 899000, tzinfo=<UTC>), 'BUILD_KD_20160721', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20160721, RUN_ID=46739, SETTINGS=rx, AUTO=True, GIT_HASH=dfbd1af0db75b0250477806846b3ecee34e5218d', '', '1'), (datetime.datetime(2021, 9, 2, 21, 5, 51, 217000, tzinfo=<UTC>), 'BUILD_KD_20161020', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20161020, RUN_ID=46740, SETTINGS=rx, AUTO=True, GIT_HASH=dfbd1af0db75b0250477806846b3ecee34e5218d', '', '1'), (datetime.datetime(2021, 9, 2, 21, 24, 42, 701000, tzinfo=<UTC>), 'BUILD_KD_20170119', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170119, RUN_ID=46741, SETTINGS=rx, AUTO=True, GIT_HASH=dfbd1af0db75b0250477806846b3ecee34e5218d', '', '1'), (datetime.datetime(2021, 9, 4, 3, 21, 24, 89000, tzinfo=<UTC>), 'BUILD_KD_20170223', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170223, RUN_ID=46842, SETTINGS=rx, AUTO=True, GIT_HASH=dfbd1af0db75b0250477806846b3ecee34e5218d', '', '1'), (datetime.datetime(2018, 5, 30, 20, 38, 15, 595000, tzinfo=<UTC>), 'BUILD_KD_20170301', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170301, RUN_ID=698, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2021, 9, 2, 21, 26, 19, 920000, tzinfo=<UTC>), 'BUILD_KD_20170427', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170427, RUN_ID=47270, SETTINGS=rx, AUTO=True, GIT_HASH=03d373eb8519e56aaa4504df0e6405d8a9663c4d', '', '1'), (datetime.datetime(2018, 6, 28, 20, 58, 12, 543000, tzinfo=<UTC>), 'BUILD_KD_20170713', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170713, RUN_ID=49544, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 4, 11, 0, 37, 16, 491000, tzinfo=<UTC>), 'BUILD_KD_20170720', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170720, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2018, 6, 4, 13, 15, 8, 674000, tzinfo=<UTC>), 'BUILD_KD_20170727', 'N', 'Y', 'MOA', 'ANALYST', 'CUT_DATE=20170727, RUN_ID=47653, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 6, 4, 13, 30, 42, 167000, tzinfo=<UTC>), 'BUILD_KD_20170803', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170803, RUN_ID=47565, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 5, 1, 19, 4, 53, 406000, tzinfo=<UTC>), 'BUILD_KD_20170817', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170817, RUN_ID=1878, SETTINGS=kd, AUTO=True, GIT_HASH=20e7aeaafbef97244f97afaca5746c6c80a609bf', '', '1'), (datetime.datetime(2018, 5, 30, 20, 17, 33, 102000, tzinfo=<UTC>), 'BUILD_KD_20170824', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170824, RUN_ID=3879, SETTINGS=KD, AUTO=True, GIT_HASH=1cccabf7fc074652a7a8573fd7019c9b41e0ef43', '', '1'), (datetime.datetime(2018, 5, 30, 20, 53, 23, 129000, tzinfo=<UTC>), 'BUILD_KD_20170831', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170831, RUN_ID=956, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 6, 21, 15, 57, 21, 106000, tzinfo=<UTC>), 'BUILD_KD_20170928', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170928, RUN_ID=939, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 6, 21, 15, 56, 28, 542000, tzinfo=<UTC>), 'BUILD_KD_20170929', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170929, RUN_ID=938, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 4, 11, 2, 15, 59, 187000, tzinfo=<UTC>), 'BUILD_KD_20171019', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171019, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 5, 15, 15, 27, 53, 641000, tzinfo=<UTC>), 'BUILD_KD_20171026', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171026, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2018, 5, 31, 13, 28, 44, 175000, tzinfo=<UTC>), 'BUILD_KD_20171102', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171102, RUN_ID=47565, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 5, 31, 13, 23, 24, 317000, tzinfo=<UTC>), 'BUILD_KD_20171103', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171103, RUN_ID=708, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 5, 1, 18, 22, 38, 710000, tzinfo=<UTC>), 'BUILD_KD_20171116', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171116, RUN_ID=1878, SETTINGS=kd, AUTO=True, GIT_HASH=20e7aeaafbef97244f97afaca5746c6c80a609bf', '', '1'), (datetime.datetime(2018, 5, 30, 20, 29, 7, 933000, tzinfo=<UTC>), 'BUILD_KD_20171123', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171123, RUN_ID=3879, SETTINGS=KD, AUTO=True, GIT_HASH=1cccabf7fc074652a7a8573fd7019c9b41e0ef43', '', '1'), (datetime.datetime(2018, 5, 30, 21, 2, 58, 789000, tzinfo=<UTC>), 'BUILD_KD_20171130', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171130, RUN_ID=940, SETTINGS=KD, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 12, 18, 13, 11, 36, 447000, tzinfo=<UTC>), 'BUILD_KD_20171214', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171214, RUN_ID=4809, SETTINGS=kd, AUTO=True, GIT_HASH=a0131519674a51ddbf7d336a1fd99ec14fb76501', '', '1'), (datetime.datetime(2018, 6, 21, 14, 20, 49, 210000, tzinfo=<UTC>), 'BUILD_KD_20171228', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171228, RUN_ID=935, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 11, 2, 20, 40, 12, 568000, tzinfo=<UTC>), 'BUILD_KD_20180104', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180104, RUN_ID=4313, SETTINGS=kd, AUTO=True, GIT_HASH=a0131519674a51ddbf7d336a1fd99ec14fb76501', '', '1'), (datetime.datetime(2019, 10, 16, 15, 25, 30, 799000, tzinfo=<UTC>), 'BUILD_KD_20180111', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180111, RUN_ID=13723, SETTINGS=kd, AUTO=True, GIT_HASH=34e26a6675b1ed651a0e4298f4c2a39302048ef4', '', '1'), (datetime.datetime(2018, 7, 12, 21, 22, 17, 210000, tzinfo=<UTC>), 'BUILD_KD_20180118', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180118, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 5, 30, 14, 46, 22, 128000, tzinfo=<UTC>), 'BUILD_KD_20180125', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180125, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 4, 10, 18, 56, 44, 314000, tzinfo=<UTC>), 'BUILD_KD_20180125B', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180125, RUN_ID=678, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 5, 31, 14, 3, 25, 851000, tzinfo=<UTC>), 'BUILD_KD_20180201', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180201, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2018, 5, 31, 14, 17, 20, 18000, tzinfo=<UTC>), 'BUILD_KD_20180208', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180208, RUN_ID=13622, SETTINGS=KD, AUTO=True, GIT_HASH=34e26a6675b1ed651a0e4298f4c2a39302048ef4', '', '1'), (datetime.datetime(2018, 5, 1, 16, 19, 16, 760000, tzinfo=<UTC>), 'BUILD_KD_20180215', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180215, RUN_ID=47506, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 5, 1, 17, 40, 27, 184000, tzinfo=<UTC>), 'BUILD_KD_20180222', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180222, RUN_ID=47653, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 5, 30, 20, 43, 27, 374000, tzinfo=<UTC>), 'BUILD_KD_20180301', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180301, RUN_ID=47555, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 5, 9, 17, 53, 2, 244000, tzinfo=<UTC>), 'BUILD_KD_20180329', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180329, RUN_ID=930, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 5, 9, 17, 10, 55, 501000, tzinfo=<UTC>), 'BUILD_KD_20180405', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180405, RUN_ID=4313, SETTINGS=kd, AUTO=True, GIT_HASH=a0131519674a51ddbf7d336a1fd99ec14fb76501', '', '1'), (datetime.datetime(2018, 6, 7, 15, 2, 45, 479000, tzinfo=<UTC>), 'BUILD_KD_20180412', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180412, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 4, 24, 20, 9, 21, 798000, tzinfo=<UTC>), 'BUILD_KD_20180419', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180419, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 5, 15, 21, 48, 15, 31000, tzinfo=<UTC>), 'BUILD_KD_20180426', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180426, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2018, 5, 22, 19, 47, 56, 783000, tzinfo=<UTC>), 'BUILD_KD_20180503', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180503, RUN_ID=49403, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 5, 10, 22, 12, 45, 598000, tzinfo=<UTC>), 'BUILD_KD_20180510', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180510, RUN_ID=560, SETTINGS=kd, AUTO=False, GIT_HASH=78a26d21a2e82d97d744b606ce8ed93d97c5eecb', '', '1'), (datetime.datetime(2018, 5, 18, 19, 22, 19, 918000, tzinfo=<UTC>), 'BUILD_KD_20180517', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180517, RUN_ID=9203, SETTINGS=kd, AUTO=True, GIT_HASH=6f470e4f86b50dd622f038d3b5eb7984b1e58c4b', '', '1'), (datetime.datetime(2021, 9, 13, 5, 26, 34, 759000, tzinfo=<UTC>), 'BUILD_KD_20180531', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180531, RUN_ID=47367, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 6, 12, 20, 46, 41, 161000, tzinfo=<UTC>), 'BUILD_KD_20180607', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180607, RUN_ID=953, SETTINGS=kd, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 6, 22, 16, 45, 19, 993000, tzinfo=<UTC>), 'BUILD_KD_20180621', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180621, RUN_ID=1060, SETTINGS=KD, AUTO=False, GIT_HASH=e8e3d11ec192c2d6fde995e9d4533a6c2276f9ac', '', '1'), (datetime.datetime(2018, 7, 9, 12, 32, 37, 339000, tzinfo=<UTC>), 'BUILD_KD_20180705', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180705, RUN_ID=4315, SETTINGS=kd, AUTO=True, GIT_HASH=a0131519674a51ddbf7d336a1fd99ec14fb76501', '', '1'), (datetime.datetime(2018, 7, 12, 20, 43, 57, 449000, tzinfo=<UTC>), 'BUILD_KD_20180712', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180712, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 7, 19, 15, 22, 1, 953000, tzinfo=<UTC>), 'BUILD_KD_20180719', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180719, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2018, 7, 26, 20, 8, 29, 932000, tzinfo=<UTC>), 'BUILD_KD_20180726', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180726, RUN_ID=49403, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 11, 25, 16, 55, 20, 918000, tzinfo=<UTC>), 'BUILD_KD_20180801', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180801, RUN_ID=15825, SETTINGS=KD, AUTO=True, GIT_HASH=fca28a068f2918eb517639b3ad78f667a0a794dd', '', '1'), (datetime.datetime(2018, 8, 3, 16, 2, 25, 703000, tzinfo=<UTC>), 'BUILD_KD_20180802', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180802, RUN_ID=47565, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2018, 8, 20, 15, 54, 45, 467000, tzinfo=<UTC>), 'BUILD_KD_20180816', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180816, RUN_ID=16383, SETTINGS=kd, AUTO=True, GIT_HASH=6497de3bd74f3059ee3b679f918203077a3965f0', '', '1'), (datetime.datetime(2018, 8, 23, 22, 26, 13, 645000, tzinfo=<UTC>), 'BUILD_KD_20180823', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180823, RUN_ID=3827, SETTINGS=kd, AUTO=True, GIT_HASH=1cccabf7fc074652a7a8573fd7019c9b41e0ef43', '', '1'), (datetime.datetime(2018, 9, 4, 16, 14, 58, 406000, tzinfo=<UTC>), 'BUILD_KD_20180830', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180830, RUN_ID=3194, SETTINGS=kd, AUTO=True, GIT_HASH=ed41b2eb4f829bbe87e237b61e35a52bf7731a44', '', '1'), (datetime.datetime(2018, 9, 21, 17, 1, 10, 954000, tzinfo=<UTC>), 'BUILD_KD_20180920', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180920, RUN_ID=2935, SETTINGS=kd, AUTO=True, GIT_HASH=6a4787fb951471b80d78500065ce6d998e662c39', '', '1'), (datetime.datetime(2018, 10, 5, 15, 11, 12, 406000, tzinfo=<UTC>), 'BUILD_KD_20180927', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180927, RUN_ID=3238, SETTINGS=kd, AUTO=True, GIT_HASH=c960c25a0203cf36877f3a6223317b8a4f51252e', '', '1'), (datetime.datetime(2018, 12, 6, 16, 30, 17, 217000, tzinfo=<UTC>), 'BUILD_KD_20181004', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181004, RUN_ID=4323, SETTINGS=kd, AUTO=True, GIT_HASH=a0131519674a51ddbf7d336a1fd99ec14fb76501', '', '1'), (datetime.datetime(2018, 10, 11, 18, 27, 3, 686000, tzinfo=<UTC>), 'BUILD_KD_20181011', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181011, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 10, 18, 19, 9, 55, 898000, tzinfo=<UTC>), 'BUILD_KD_20181018', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181018, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 10, 1, 19, 7, 41, 13000, tzinfo=<UTC>), 'BUILD_KD_20181024', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181024, RUN_ID=23841, SETTINGS=kd, AUTO=True, GIT_HASH=0a7a8bb7d003fbebfe35dda41206c8447708d4a2', '', '1'), (datetime.datetime(2018, 10, 25, 18, 10, 4, 321000, tzinfo=<UTC>), 'BUILD_KD_20181025', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181025, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2018, 11, 1, 18, 7, 20, 99000, tzinfo=<UTC>), 'BUILD_KD_20181101', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181101, RUN_ID=50836, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2018, 11, 1, 18, 42, 14, 871000, tzinfo=<UTC>), 'BUILD_KD_20181102', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181102, RUN_ID=3769, SETTINGS=KD, AUTO=True, GIT_HASH=bf64c6be2e57bb914e46749ec712188d5108ee4c', '', '1'), (datetime.datetime(2018, 11, 27, 17, 3, 2, 627000, tzinfo=<UTC>), 'BUILD_KD_20181115', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181115, RUN_ID=9203, SETTINGS=kd, AUTO=True, GIT_HASH=6f470e4f86b50dd622f038d3b5eb7984b1e58c4b', '', '1'), (datetime.datetime(2019, 3, 25, 22, 2, 40, 768000, tzinfo=<UTC>), 'BUILD_KD_20181122', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181122, RUN_ID=7413, SETTINGS=KD, AUTO=True, GIT_HASH=a69633d6b3fd98fe358186343db3329445a84297', '', '1'), (datetime.datetime(2018, 12, 27, 15, 30, 26, 186000, tzinfo=<UTC>), 'BUILD_KD_20181227', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181227, RUN_ID=5132, SETTINGS=kd, AUTO=True, GIT_HASH=8ab6ce01ab09d2262100bbefdf89b28a0a3c612b', '', '1'), (datetime.datetime(2019, 1, 3, 15, 32, 55, 572000, tzinfo=<UTC>), 'BUILD_KD_20190103', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190103, RUN_ID=5206, SETTINGS=kd, AUTO=True, GIT_HASH=f19c46402cae71675331a4eebd3a239f0c486e1c', '', '1'), (datetime.datetime(2019, 1, 10, 15, 38, 10, 692000, tzinfo=<UTC>), 'BUILD_KD_20190110', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190110, RUN_ID=13723, SETTINGS=kd, AUTO=True, GIT_HASH=34e26a6675b1ed651a0e4298f4c2a39302048ef4', '', '1'), (datetime.datetime(2019, 1, 17, 14, 16, 28, 862000, tzinfo=<UTC>), 'BUILD_KD_20190117', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190117, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 2, 20, 16, 20, 16, 315000, tzinfo=<UTC>), 'BUILD_KD_20190124', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190124, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 2, 1, 17, 6, 14, 540000, tzinfo=<UTC>), 'BUILD_KD_20190131', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190131, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2019, 10, 15, 2, 6, 3, 309000, tzinfo=<UTC>), 'BUILD_KD_20190207', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190207, RUN_ID=13622, SETTINGS=KD, AUTO=True, GIT_HASH=34e26a6675b1ed651a0e4298f4c2a39302048ef4', '', '1'), (datetime.datetime(2019, 2, 20, 19, 45, 48, 639000, tzinfo=<UTC>), 'BUILD_KD_20190214', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190214, RUN_ID=47506, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2019, 2, 22, 16, 20, 21, 932000, tzinfo=<UTC>), 'BUILD_KD_20190221', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190221, RUN_ID=47653, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2019, 3, 25, 22, 30, 55, 353000, tzinfo=<UTC>), 'BUILD_KD_20190228', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190228, RUN_ID=50836, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2019, 3, 19, 11, 57, 32, 323000, tzinfo=<UTC>), 'BUILD_KD_20190314', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190314, RUN_ID=7151, SETTINGS=kd, AUTO=True, GIT_HASH=3466cf2080ca58539ccc7ca69b59a92ae4d489a7', '', '1'), (datetime.datetime(2019, 3, 21, 23, 59, 48, 15000, tzinfo=<UTC>), 'BUILD_KD_20190321', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190321, RUN_ID=7354, SETTINGS=KD, AUTO=True, GIT_HASH=a69633d6b3fd98fe358186343db3329445a84297', '', '1'), (datetime.datetime(2019, 3, 28, 12, 6, 20, 25000, tzinfo=<UTC>), 'BUILD_KD_20190328', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190328, RUN_ID=7612, SETTINGS=kd, AUTO=True, GIT_HASH=a69633d6b3fd98fe358186343db3329445a84297', '', '1'), (datetime.datetime(2019, 4, 4, 13, 43, 59, 498000, tzinfo=<UTC>), 'BUILD_KD_20190404', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190404, RUN_ID=7671, SETTINGS=kd, AUTO=True, GIT_HASH=a69633d6b3fd98fe358186343db3329445a84297', '', '1'), (datetime.datetime(2021, 9, 8, 19, 30, 58, 929000, tzinfo=<UTC>), 'BUILD_KD_20190410', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190410, RUN_ID=47036, SETTINGS=rx, AUTO=True, GIT_HASH=03d373eb8519e56aaa4504df0e6405d8a9663c4d', '', '1'), (datetime.datetime(2019, 4, 11, 14, 3, 29, 347000, tzinfo=<UTC>), 'BUILD_KD_20190411', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190411, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 4, 18, 13, 14, 49, 429000, tzinfo=<UTC>), 'BUILD_KD_20190418', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190418, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2021, 6, 16, 21, 13, 36, 100000, tzinfo=<UTC>), 'BUILD_KD_20190424', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190424, RUN_ID=42481, SETTINGS=rx, AUTO=True, GIT_HASH=911dc76f5b6d34f17eb410a44334a6afb15ca6d6', '', '1'), (datetime.datetime(2019, 4, 25, 14, 7, 41, 878000, tzinfo=<UTC>), 'BUILD_KD_20190425', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190425, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2020, 12, 21, 20, 7, 37, 674000, tzinfo=<UTC>), 'BUILD_KD_20190426', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190426, RUN_ID=31590, SETTINGS=kd, AUTO=True, GIT_HASH=ff933613e04e91699a386b5935fa92cda32e3d65', '', '1'), (datetime.datetime(2021, 6, 16, 16, 13, 42, 795000, tzinfo=<UTC>), 'BUILD_KD_20190501', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190501, RUN_ID=42441, SETTINGS=rx, AUTO=True, GIT_HASH=75dfc7d2d108bb8bdc6b5de3b997a40bac34ed39', '', '1'), (datetime.datetime(2019, 6, 10, 12, 8, 18, 436000, tzinfo=<UTC>), 'BUILD_KD_20190502', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190502, RUN_ID=50985, SETTINGS=rx, AUTO=True, GIT_HASH=d188b46b2d19409c16848d9cd39cb0007e05b8d8', '', '1'), (datetime.datetime(2019, 5, 13, 14, 17, 30, 871000, tzinfo=<UTC>), 'BUILD_KD_20190509', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190509, RUN_ID=15729, SETTINGS=kd, AUTO=True, GIT_HASH=fca28a068f2918eb517639b3ad78f667a0a794dd', '', '1'), (datetime.datetime(2019, 5, 17, 20, 36, 57, 396000, tzinfo=<UTC>), 'BUILD_KD_20190516', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190516, RUN_ID=16381, SETTINGS=KD, AUTO=True, GIT_HASH=6497de3bd74f3059ee3b679f918203077a3965f0', '', '1'), (datetime.datetime(2019, 5, 24, 13, 39, 56, 643000, tzinfo=<UTC>), 'BUILD_KD_20190523', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190523, RUN_ID=15729, SETTINGS=kd, AUTO=True, GIT_HASH=fca28a068f2918eb517639b3ad78f667a0a794dd', '', '1'), (datetime.datetime(2019, 6, 5, 17, 25, 17, 742000, tzinfo=<UTC>), 'BUILD_KD_20190530', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190530, RUN_ID=15729, SETTINGS=kd, AUTO=True, GIT_HASH=fca28a068f2918eb517639b3ad78f667a0a794dd', '', '1'), (datetime.datetime(2019, 6, 7, 11, 26, 54, 100000, tzinfo=<UTC>), 'BUILD_KD_20190606', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190606, RUN_ID=15729, SETTINGS=kd, AUTO=True, GIT_HASH=fca28a068f2918eb517639b3ad78f667a0a794dd', '', '1'), (datetime.datetime(2019, 6, 17, 11, 53, 6, 61000, tzinfo=<UTC>), 'BUILD_KD_20190613', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190613, RUN_ID=15729, SETTINGS=kd, AUTO=True, GIT_HASH=fca28a068f2918eb517639b3ad78f667a0a794dd', '', '1'), (datetime.datetime(2019, 6, 21, 12, 36, 15, 362000, tzinfo=<UTC>), 'BUILD_KD_20190620', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190620, RUN_ID=9375, SETTINGS=KD, AUTO=True, GIT_HASH=80b2296e58e0f14ce4da8bb3bbcef4e572859160', '', '1'), (datetime.datetime(2019, 6, 27, 23, 22, 2, 86000, tzinfo=<UTC>), 'BUILD_KD_20190627', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190627, RUN_ID=9618, SETTINGS=kd, AUTO=True, GIT_HASH=5575bde00827a8793b45491cd2ead3fbec28718c', '', '1'), (datetime.datetime(2019, 7, 8, 13, 8, 4, 677000, tzinfo=<UTC>), 'BUILD_KD_20190704', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190704, RUN_ID=9708, SETTINGS=kd, AUTO=True, GIT_HASH=5575bde00827a8793b45491cd2ead3fbec28718c', '', '1'), (datetime.datetime(2019, 7, 11, 17, 49, 45, 183000, tzinfo=<UTC>), 'BUILD_KD_20190711', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190711, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 7, 19, 15, 12, 47, 27000, tzinfo=<UTC>), 'BUILD_KD_20190718', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190718, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 7, 31, 21, 26, 30, 459000, tzinfo=<UTC>), 'BUILD_KD_20190725', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190725, RUN_ID=50985, SETTINGS=rx, AUTO=True, GIT_HASH=d188b46b2d19409c16848d9cd39cb0007e05b8d8', '', '1'), (datetime.datetime(2021, 9, 14, 23, 13, 23, 652000, tzinfo=<UTC>), 'BUILD_KD_20190729', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190729, RUN_ID=47614, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2019, 8, 1, 21, 58, 42, 905000, tzinfo=<UTC>), 'BUILD_KD_20190801', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190801, RUN_ID=50836, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2019, 8, 12, 17, 0, 42, 794000, tzinfo=<UTC>), 'BUILD_KD_20190808', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190808, RUN_ID=41199, SETTINGS=rx, AUTO=True, GIT_HASH=53cbe62de29b73f8485547b65c7c527ee87bc221', '', '1'), (datetime.datetime(2019, 8, 19, 18, 40, 56, 224000, tzinfo=<UTC>), 'BUILD_KD_20190815', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190815, RUN_ID=12065, SETTINGS=kd, AUTO=True, GIT_HASH=0c0fcda3e84dbd4a580862fc5f3e49a57d94b507', '', '1'), (datetime.datetime(2019, 9, 13, 13, 11, 52, 454000, tzinfo=<UTC>), 'BUILD_KD_20190912', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190912, RUN_ID=12979, SETTINGS=KD, AUTO=True, GIT_HASH=ecbf91722c8fc4624bcd777e34bdce1d0d6f5ca6', '', '1'), (datetime.datetime(2019, 9, 13, 13, 7, 16, 868000, tzinfo=<UTC>), 'BUILD_KD_20190913', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190913, RUN_ID=12395, SETTINGS=kd, AUTO=True, GIT_HASH=0c0fcda3e84dbd4a580862fc5f3e49a57d94b507', '', '1'), (datetime.datetime(2019, 10, 1, 13, 20, 58, 463000, tzinfo=<UTC>), 'BUILD_KD_20190926', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190926, RUN_ID=13274, SETTINGS=kd, AUTO=True, GIT_HASH=ecbf91722c8fc4624bcd777e34bdce1d0d6f5ca6', '', '1'), (datetime.datetime(2019, 10, 7, 15, 6, 40, 556000, tzinfo=<UTC>), 'BUILD_KD_20191003', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191003, RUN_ID=13452, SETTINGS=kd, AUTO=True, GIT_HASH=4048989d6df1ac02c066b3f7e21b836c4f1b0ce8', '', '1'), (datetime.datetime(2019, 10, 10, 19, 22, 46, 718000, tzinfo=<UTC>), 'BUILD_KD_20191010', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191010, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 10, 17, 20, 29, 58, 610000, tzinfo=<UTC>), 'BUILD_KD_20191017', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191017, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2019, 10, 24, 12, 46, 18, 529000, tzinfo=<UTC>), 'BUILD_KD_20191024', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191024, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2021, 2, 19, 17, 34, 28, 143000, tzinfo=<UTC>), 'BUILD_KD_20191025', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191025, RUN_ID=35902, SETTINGS=kd, AUTO=True, GIT_HASH=45e5a1d8fe0d67ca452197d01cf93c722bbfd7c6', '', '1'), (datetime.datetime(2019, 11, 1, 13, 32, 27, 265000, tzinfo=<UTC>), 'BUILD_KD_20191031', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191031, RUN_ID=50985, SETTINGS=rx, AUTO=True, GIT_HASH=d188b46b2d19409c16848d9cd39cb0007e05b8d8', '', '1'), (datetime.datetime(2020, 9, 24, 22, 9, 45, 995000, tzinfo=<UTC>), 'BUILD_KD_20191101', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191101, RUN_ID=28176, SETTINGS=kd, AUTO=True, GIT_HASH=56d0306ed81bcb02c92e674c782fbd9d835d5ab2', '', '1'), (datetime.datetime(2019, 11, 7, 21, 37, 16, 457000, tzinfo=<UTC>), 'BUILD_KD_20191107', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191107, RUN_ID=15014, SETTINGS=KD, AUTO=True, GIT_HASH=136d73a1a0c772aa8fe58b4f9f89d3f09f1c19b7', '', '1'), (datetime.datetime(2019, 11, 14, 22, 57, 42, 407000, tzinfo=<UTC>), 'BUILD_KD_20191114', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191114, RUN_ID=15307, SETTINGS=kd, AUTO=True, GIT_HASH=136d73a1a0c772aa8fe58b4f9f89d3f09f1c19b7', '', '1'), (datetime.datetime(2019, 12, 2, 19, 55, 29, 718000, tzinfo=<UTC>), 'BUILD_KD_20191128', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191128, RUN_ID=16105, SETTINGS=kd, AUTO=True, GIT_HASH=6497de3bd74f3059ee3b679f918203077a3965f0', '', '1'), (datetime.datetime(2019, 12, 10, 13, 42, 46, 627000, tzinfo=<UTC>), 'BUILD_KD_20191205', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191205, RUN_ID=16477, SETTINGS=KD, AUTO=True, GIT_HASH=6497de3bd74f3059ee3b679f918203077a3965f0', '', '1'), (datetime.datetime(2019, 12, 12, 14, 49, 36, 526000, tzinfo=<UTC>), 'BUILD_KD_20191212', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191212, RUN_ID=27056, SETTINGS=kd, AUTO=True, GIT_HASH=4c64b118b8d5c6c908d36c3af583e51ec9334333', '', '1'), (datetime.datetime(2020, 1, 6, 15, 12, 59, 968000, tzinfo=<UTC>), 'BUILD_KD_20191226', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191226, RUN_ID=17256, SETTINGS=KD, AUTO=True, GIT_HASH=d5c44a55f1b838d22749a014feea5f9975732119', '', '1'), (datetime.datetime(2020, 1, 6, 15, 41, 45, 604000, tzinfo=<UTC>), 'BUILD_KD_20200102', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200102, RUN_ID=17427, SETTINGS=kd, AUTO=True, GIT_HASH=964e34a027086a922d9cc267a9d912cb2c4644df', '', '1'), (datetime.datetime(2020, 1, 9, 12, 35, 36, 62000, tzinfo=<UTC>), 'BUILD_KD_20200109', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200109, RUN_ID=17456, SETTINGS=KD, AUTO=True, GIT_HASH=964e34a027086a922d9cc267a9d912cb2c4644df', '', '1'), (datetime.datetime(2020, 1, 17, 16, 38, 46, 722000, tzinfo=<UTC>), 'BUILD_KD_20200116', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200116, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 1, 23, 18, 13, 44, 910000, tzinfo=<UTC>), 'BUILD_KD_20200123', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200123, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 2, 4, 13, 38, 17, 924000, tzinfo=<UTC>), 'BUILD_KD_20200130', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200130, RUN_ID=47794, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2020, 2, 10, 15, 18, 2, 13000, tzinfo=<UTC>), 'BUILD_KD_20200206', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200206, RUN_ID=47638, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2020, 2, 13, 14, 25, 44, 828000, tzinfo=<UTC>), 'BUILD_KD_20200213', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200213, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2020, 2, 20, 16, 26, 42, 128000, tzinfo=<UTC>), 'BUILD_KD_20200220', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200220, RUN_ID=50287, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2020, 3, 2, 19, 28, 31, 316000, tzinfo=<UTC>), 'BUILD_KD_20200227', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200227, RUN_ID=50985, SETTINGS=rx, AUTO=True, GIT_HASH=d188b46b2d19409c16848d9cd39cb0007e05b8d8', '', '1'), (datetime.datetime(2020, 3, 5, 20, 3, 36, 912000, tzinfo=<UTC>), 'BUILD_KD_20200305', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200305, RUN_ID=20705, SETTINGS=kd, AUTO=True, GIT_HASH=5d951bda1829f5e60dc8bcd15cd5b617601a4f67', '', '1'), (datetime.datetime(2020, 3, 13, 17, 1, 4, 705000, tzinfo=<UTC>), 'BUILD_KD_20200312', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200312, RUN_ID=21069, SETTINGS=kd, AUTO=True, GIT_HASH=cf8fb558f75505b3b3f877f076aa8aab0a0a1a28', '', '1'), (datetime.datetime(2020, 3, 20, 16, 2, 50, 683000, tzinfo=<UTC>), 'BUILD_KD_20200319', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200319, RUN_ID=21149, SETTINGS=kd, AUTO=True, GIT_HASH=4ddd674794127f42739c128d2b6bae35cf521bb9', '', '1'), (datetime.datetime(2020, 3, 27, 16, 5, 52, 120000, tzinfo=<UTC>), 'BUILD_KD_20200326', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200326, RUN_ID=21538, SETTINGS=kd, AUTO=True, GIT_HASH=d4ef22137895ada8286bb976e7ca65c6b4288ed4', '', '1'), (datetime.datetime(2020, 4, 2, 14, 6, 35, 39000, tzinfo=<UTC>), 'BUILD_KD_20200402', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200402, RUN_ID=21794, SETTINGS=kd, AUTO=True, GIT_HASH=d4ef22137895ada8286bb976e7ca65c6b4288ed4', '', '1'), (datetime.datetime(2020, 4, 7, 17, 20, 11, 363000, tzinfo=<UTC>), 'BUILD_KD_20200407', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200407, RUN_ID=21761, SETTINGS=KD, AUTO=True, GIT_HASH=d4ef22137895ada8286bb976e7ca65c6b4288ed4', '', '1'), (datetime.datetime(2020, 4, 9, 12, 51, 30, 970000, tzinfo=<UTC>), 'BUILD_KD_20200409', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200409, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 4, 16, 13, 33, 39, 527000, tzinfo=<UTC>), 'BUILD_KD_20200416', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200416, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 4, 23, 14, 5, 31, 772000, tzinfo=<UTC>), 'BUILD_KD_20200423', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200423, RUN_ID=47648, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2020, 5, 1, 14, 20, 49, 260000, tzinfo=<UTC>), 'BUILD_KD_20200430', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200430, RUN_ID=50985, SETTINGS=rx, AUTO=True, GIT_HASH=d188b46b2d19409c16848d9cd39cb0007e05b8d8', '', '1'), (datetime.datetime(2020, 5, 11, 18, 50, 11, 484000, tzinfo=<UTC>), 'BUILD_KD_20200507', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200507, RUN_ID=49403, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 5, 15, 20, 54, 29, 288000, tzinfo=<UTC>), 'BUILD_KD_20200514', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200514, RUN_ID=23349, SETTINGS=kd, AUTO=True, GIT_HASH=6fec63b9077505b96f4cf1ed37bc787a15421da3', '', '1'), (datetime.datetime(2020, 5, 28, 21, 55, 39, 3000, tzinfo=<UTC>), 'BUILD_KD_20200528', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200528, RUN_ID=23885, SETTINGS=KD, AUTO=True, GIT_HASH=0a7a8bb7d003fbebfe35dda41206c8447708d4a2', '', '1'), (datetime.datetime(2020, 6, 8, 19, 48, 43, 725000, tzinfo=<UTC>), 'BUILD_KD_20200604', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200604, RUN_ID=24044, SETTINGS=kd, AUTO=True, GIT_HASH=0a7a8bb7d003fbebfe35dda41206c8447708d4a2', '', '1'), (datetime.datetime(2020, 6, 11, 21, 10, 37, 505000, tzinfo=<UTC>), 'BUILD_KD_20200611', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200611, RUN_ID=24289, SETTINGS=sms, AUTO=True, GIT_HASH=9e76d56ea953dc201630d4a92bb3375bdc3cf574', '', '1'), (datetime.datetime(2020, 6, 18, 17, 45, 2, 127000, tzinfo=<UTC>), 'BUILD_KD_20200618', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200618, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 6, 29, 20, 49, 2, 806000, tzinfo=<UTC>), 'BUILD_KD_20200625', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200625, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2021, 4, 26, 16, 30, 41, 784000, tzinfo=<UTC>), 'BUILD_KD_20200702', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200702, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 7, 9, 12, 51, 48, 448000, tzinfo=<UTC>), 'BUILD_KD_20200709', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200709, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 7, 16, 12, 41, 58, 337000, tzinfo=<UTC>), 'BUILD_KD_20200716', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200716, RUN_ID=49869, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 7, 23, 12, 30, 34, 527000, tzinfo=<UTC>), 'BUILD_KD_20200723', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200723, RUN_ID=50909, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2020, 7, 30, 15, 9, 30, 43000, tzinfo=<UTC>), 'BUILD_KD_20200730', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200730, RUN_ID=50985, SETTINGS=rx, AUTO=True, GIT_HASH=d188b46b2d19409c16848d9cd39cb0007e05b8d8', '', '1'), (datetime.datetime(2021, 2, 18, 18, 17, 10, 509000, tzinfo=<UTC>), 'BUILD_KD_20200806', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200806, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 8, 13, 15, 0, 23, 732000, tzinfo=<UTC>), 'BUILD_KD_20200813', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200813, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 8, 20, 13, 32, 8, 421000, tzinfo=<UTC>), 'BUILD_KD_20200820', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200820, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 8, 28, 2, 51, 9, 534000, tzinfo=<UTC>), 'BUILD_KD_20200827', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200827, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 9, 3, 19, 13, 13, 375000, tzinfo=<UTC>), 'BUILD_KD_20200903', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200903, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 9, 10, 13, 14, 44, 529000, tzinfo=<UTC>), 'BUILD_KD_20200910', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200910, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 9, 17, 14, 4, 56, 193000, tzinfo=<UTC>), 'BUILD_KD_20200917', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200917, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 9, 24, 16, 11, 2, 302000, tzinfo=<UTC>), 'BUILD_KD_20200924', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200924, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 10, 5, 16, 45, 22, 203000, tzinfo=<UTC>), 'BUILD_KD_20201001', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201001, RUN_ID=40094, SETTINGS=kd, AUTO=True, GIT_HASH=a1e987200e7847eec0782cb6ff0f6578eda81e94', '', '1'), (datetime.datetime(2020, 10, 8, 12, 36, 13, 281000, tzinfo=<UTC>), 'BUILD_KD_20201008', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201008, RUN_ID=47404, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2020, 10, 15, 11, 37, 7, 433000, tzinfo=<UTC>), 'BUILD_KD_20201015', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201015, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2020, 10, 22, 12, 45, 41, 917000, tzinfo=<UTC>), 'BUILD_KD_20201022', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201022, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2020, 10, 29, 12, 22, 34, 442000, tzinfo=<UTC>), 'BUILD_KD_20201029', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201029, RUN_ID=50826, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2021, 2, 18, 18, 44, 17, 435000, tzinfo=<UTC>), 'BUILD_KD_20201105', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201105, RUN_ID=50836, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2020, 11, 12, 18, 54, 47, 655000, tzinfo=<UTC>), 'BUILD_KD_20201112', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201112, RUN_ID=33604, SETTINGS=test, AUTO=True, GIT_HASH=d1d0fa077a07c3e9e900e5a8fa2594979a29150a', '', '1'), (datetime.datetime(2020, 11, 21, 19, 20, 9, 329000, tzinfo=<UTC>), 'BUILD_KD_20201119', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201119, RUN_ID=30411, SETTINGS=kd, AUTO=True, GIT_HASH=4823a2adf571ee5f4215bd8b1b607deec3222c11', '', '1'), (datetime.datetime(2020, 11, 27, 19, 44, 4, 636000, tzinfo=<UTC>), 'BUILD_KD_20201126', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201126, RUN_ID=30705, SETTINGS=kd, AUTO=True, GIT_HASH=56bed866cb1f21c276ace0b5f4ec02710a301f31', '', '1'), (datetime.datetime(2020, 12, 4, 20, 34, 4, 306000, tzinfo=<UTC>), 'BUILD_KD_20201203', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201203, RUN_ID=31061, SETTINGS=KD, AUTO=True, GIT_HASH=56bed866cb1f21c276ace0b5f4ec02710a301f31', '', '1'), (datetime.datetime(2020, 12, 10, 15, 20, 11, 210000, tzinfo=<UTC>), 'BUILD_KD_20201210', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201210, RUN_ID=31176, SETTINGS=KD, AUTO=True, GIT_HASH=4e33a602cf2d6e21defa6041e5ecd15595384e1e', '', '1'), (datetime.datetime(2020, 12, 17, 20, 33, 3, 910000, tzinfo=<UTC>), 'BUILD_KD_20201217', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201217, RUN_ID=31585, SETTINGS=kd, AUTO=True, GIT_HASH=ff933613e04e91699a386b5935fa92cda32e3d65', '', '1'), (datetime.datetime(2020, 12, 24, 18, 59, 10, 262000, tzinfo=<UTC>), 'BUILD_KD_20201224', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201224, RUN_ID=31777, SETTINGS=KD, AUTO=True, GIT_HASH=ff933613e04e91699a386b5935fa92cda32e3d65', '', '1'), (datetime.datetime(2021, 1, 1, 17, 29, 38, 761000, tzinfo=<UTC>), 'BUILD_KD_20201231', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201231, RUN_ID=32246, SETTINGS=KD, AUTO=True, GIT_HASH=ff933613e04e91699a386b5935fa92cda32e3d65', '', '1'), (datetime.datetime(2021, 1, 7, 13, 23, 28, 612000, tzinfo=<UTC>), 'BUILD_KD_20210107', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210107, RUN_ID=32369, SETTINGS=KD, AUTO=True, GIT_HASH=ff933613e04e91699a386b5935fa92cda32e3d65', '', '1'), (datetime.datetime(2021, 1, 14, 14, 53, 21, 248000, tzinfo=<UTC>), 'BUILD_KD_20210114', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210114, RUN_ID=47404, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2021, 1, 21, 13, 53, 23, 366000, tzinfo=<UTC>), 'BUILD_KD_20210121', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210121, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2021, 1, 28, 13, 16, 29, 958000, tzinfo=<UTC>), 'BUILD_KD_20210128', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210128, RUN_ID=50244, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2021, 2, 4, 13, 6, 33, 901000, tzinfo=<UTC>), 'BUILD_KD_20210204', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210204, RUN_ID=35607, SETTINGS=kd, AUTO=True, GIT_HASH=45e5a1d8fe0d67ca452197d01cf93c722bbfd7c6', '', '1'), (datetime.datetime(2021, 2, 11, 13, 9, 47, 166000, tzinfo=<UTC>), 'BUILD_KD_20210211', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210211, RUN_ID=50186, SETTINGS=rx, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2021, 2, 18, 13, 28, 52, 457000, tzinfo=<UTC>), 'BUILD_KD_20210218', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210218, RUN_ID=47595, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2021, 2, 25, 15, 14, 25, 223000, tzinfo=<UTC>), 'BUILD_KD_20210225', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210225, RUN_ID=50836, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2021, 3, 8, 18, 38, 51, 311000, tzinfo=<UTC>), 'BUILD_KD_20210304', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210304, RUN_ID=47555, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2021, 3, 17, 17, 27, 29, 647000, tzinfo=<UTC>), 'BUILD_KD_20210311', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210311, RUN_ID=37978, SETTINGS=kd, AUTO=True, GIT_HASH=fdc4c19829dc56d8ff80ce4b493459b051794020', '', '1'), (datetime.datetime(2021, 3, 18, 12, 35, 29, 133000, tzinfo=<UTC>), 'BUILD_KD_20210318', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210318, RUN_ID=38255, SETTINGS=kd, AUTO=True, GIT_HASH=48fcc5022c22cade17fe85d8f189c69fc2ab500a', '', '1'), (datetime.datetime(2021, 3, 29, 21, 53, 7, 254000, tzinfo=<UTC>), 'BUILD_KD_20210325', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210325, RUN_ID=38789, SETTINGS=KD, AUTO=True, GIT_HASH=1b553656f667447cca36aeecd93a8ce13cef4e68', '', '1'), (datetime.datetime(2021, 4, 6, 18, 39, 4, 947000, tzinfo=<UTC>), 'BUILD_KD_20210401', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210401, RUN_ID=39120, SETTINGS=kd, AUTO=True, GIT_HASH=f40c775f51d55dc69be71f272dd3b85692975cd5', '', '1'), (datetime.datetime(2021, 4, 8, 12, 12, 36, 212000, tzinfo=<UTC>), 'BUILD_KD_20210408', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210408, RUN_ID=39477, SETTINGS=kd, AUTO=True, GIT_HASH=3015dc097c7cf32a1c6565cf395b9100298a386e', '', '1'), (datetime.datetime(2021, 4, 15, 11, 52, 53, 931000, tzinfo=<UTC>), 'BUILD_KD_20210415', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210415, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2021, 5, 19, 20, 2, 43, 240000, tzinfo=<UTC>), 'BUILD_KD_20210421', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210421, RUN_ID=41167, SETTINGS=rx, AUTO=True, GIT_HASH=53cbe62de29b73f8485547b65c7c527ee87bc221', '', '1'), (datetime.datetime(2021, 4, 22, 12, 12, 11, 635000, tzinfo=<UTC>), 'BUILD_KD_20210422', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210422, RUN_ID=47648, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2021, 4, 29, 11, 58, 14, 679000, tzinfo=<UTC>), 'BUILD_KD_20210429', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210429, RUN_ID=50836, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2021, 5, 6, 12, 21, 23, 179000, tzinfo=<UTC>), 'BUILD_KD_20210506', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210506, RUN_ID=47653, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2021, 5, 13, 11, 56, 56, 876000, tzinfo=<UTC>), 'BUILD_KD_20210513', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210513, RUN_ID=41152, SETTINGS=kd, AUTO=True, GIT_HASH=d42350e0a9e9fbfea47426c1541f5edcd19812f2', '', '1'), (datetime.datetime(2021, 5, 20, 12, 26, 58, 788000, tzinfo=<UTC>), 'BUILD_KD_20210520', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210520, RUN_ID=41232, SETTINGS=KD, AUTO=True, GIT_HASH=d42350e0a9e9fbfea47426c1541f5edcd19812f2', '', '1'), (datetime.datetime(2021, 5, 27, 15, 36, 21, 245000, tzinfo=<UTC>), 'BUILD_KD_20210527', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210527, RUN_ID=47032, SETTINGS=rx, AUTO=True, GIT_HASH=03d373eb8519e56aaa4504df0e6405d8a9663c4d', '', '1'), (datetime.datetime(2021, 6, 7, 16, 10, 57, 607000, tzinfo=<UTC>), 'BUILD_KD_20210603', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210603, RUN_ID=42251, SETTINGS=KD, AUTO=True, GIT_HASH=348e45901f4c84de21cbd89caffc9a4e7035ad8b', '', '1'), (datetime.datetime(2021, 6, 14, 13, 9, 6, 556000, tzinfo=<UTC>), 'BUILD_KD_20210610', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210610, RUN_ID=42460, SETTINGS=kd, AUTO=True, GIT_HASH=348e45901f4c84de21cbd89caffc9a4e7035ad8b', '', '1'), (datetime.datetime(2021, 6, 17, 14, 0, 59, 330000, tzinfo=<UTC>), 'BUILD_KD_20210617', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210617, RUN_ID=42559, SETTINGS=KD, AUTO=True, GIT_HASH=54b8117077936ee1dd4bea990b9881479b4a901c', '', '1'), (datetime.datetime(2021, 6, 24, 12, 25, 7, 637000, tzinfo=<UTC>), 'BUILD_KD_20210624', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210624, RUN_ID=43192, SETTINGS=kd, AUTO=True, GIT_HASH=69817e03008d532e5f2213943d508fc653e96989', '', '1'), (datetime.datetime(2021, 7, 1, 12, 43, 22, 418000, tzinfo=<UTC>), 'BUILD_KD_20210701', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210701, RUN_ID=43711, SETTINGS=kd, AUTO=True, GIT_HASH=613a248ba9868503d85a03dbe564a703f1c77676', '', '1'), (datetime.datetime(2021, 7, 8, 18, 56, 53, 738000, tzinfo=<UTC>), 'BUILD_KD_20210708', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210708, RUN_ID=43985, SETTINGS=kd, AUTO=True, GIT_HASH=dac8bf02d26bd71ce61777a00117ce113eca6d60', '', '1'), (datetime.datetime(2021, 7, 15, 12, 4, 9, 372000, tzinfo=<UTC>), 'BUILD_KD_20210715', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210715, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2021, 7, 22, 11, 6, 36, 874000, tzinfo=<UTC>), 'BUILD_KD_20210722', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210722, RUN_ID=47595, SETTINGS=rx, AUTO=True, GIT_HASH=e0adbf61b7f4fb906892aaccad3fa855f9776461', '', '1'), (datetime.datetime(2021, 7, 29, 13, 22, 51, 971000, tzinfo=<UTC>), 'BUILD_KD_20210729', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210729, RUN_ID=50836, SETTINGS=rx, AUTO=True, GIT_HASH=4a5dbc15db4b980bfee019336cb85c2cb02bc45d', '', '1'), (datetime.datetime(2021, 8, 5, 12, 3, 45, 902000, tzinfo=<UTC>), 'BUILD_KD_20210805', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210805, RUN_ID=47129, SETTINGS=rx, AUTO=True, GIT_HASH=03d373eb8519e56aaa4504df0e6405d8a9663c4d', '', '1'), (datetime.datetime(2021, 8, 13, 14, 54, 35, 221000, tzinfo=<UTC>), 'BUILD_KD_20210812', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210812, RUN_ID=45805, SETTINGS=kd, AUTO=True, GIT_HASH=29ac6f9f4944d5d673fb20094f4fcdbf8d68b734', '', '1'), (datetime.datetime(2021, 8, 19, 13, 44, 50, 89000, tzinfo=<UTC>), 'BUILD_KD_20210819', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210819, RUN_ID=45855, SETTINGS=KD, AUTO=True, GIT_HASH=29ac6f9f4944d5d673fb20094f4fcdbf8d68b734', '', '1'), (datetime.datetime(2021, 8, 26, 12, 11, 57, 72000, tzinfo=<UTC>), 'BUILD_KD_20210826', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210826, RUN_ID=48497, SETTINGS=KD, AUTO=True, GIT_HASH=91fb91d80330cae220a6d116ab6d81739e8d5062', '', '1'), (datetime.datetime(2021, 9, 8, 13, 54, 23, 408000, tzinfo=<UTC>), 'BUILD_KD_20210902', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210902, RUN_ID=46995, SETTINGS=rx, AUTO=True, GIT_HASH=03d373eb8519e56aaa4504df0e6405d8a9663c4d', '', '1'), (datetime.datetime(2021, 9, 27, 16, 59, 5, 598000, tzinfo=<UTC>), 'BUILD_KD_20210923', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210923, RUN_ID=49140, SETTINGS=kd, AUTO=True, GIT_HASH=32734286f09174bfcf9e5dfd500723d30ea21bff', '', '1'), (datetime.datetime(2021, 10, 7, 11, 58, 30, 750000, tzinfo=<UTC>), 'BUILD_KD_20211007', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20211007, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2021, 10, 14, 11, 37, 51, 591000, tzinfo=<UTC>), 'BUILD_KD_20211014', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20211014, RUN_ID=49966, SETTINGS=kd, AUTO=True, GIT_HASH=01c8e6e94419a641f2bcd6897dfdf02b0a697b1b', '', '1'), (datetime.datetime(2021, 10, 21, 12, 3, 5, 866000, tzinfo=<UTC>), 'BUILD_KD_20211021', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20211021, RUN_ID=50386, SETTINGS=kd, AUTO=True, GIT_HASH=eea7d9da3ffcc8d8da84fdae65c215537fe3ad3b', '', '1'), (datetime.datetime(2021, 10, 28, 12, 23, 49, 154000, tzinfo=<UTC>), 'BUILD_KD_20211028', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20211028, RUN_ID=51568, SETTINGS=kd, AUTO=True, GIT_HASH=41c1279b2f2ce7a49fea3d1975f4d3464f4be70f', '', '1'), (datetime.datetime(2021, 11, 4, 13, 4, 17, 381000, tzinfo=<UTC>), 'BUILD_KD_20211104', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20211104, RUN_ID=51780, SETTINGS=kd, AUTO=True, GIT_HASH=41c1279b2f2ce7a49fea3d1975f4d3464f4be70f', '', '1'), (datetime.datetime(2021, 9, 13, 5, 21, 48, 115000, tzinfo=<UTC>), 'BUILD_KD_20211202', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20211202, RUN_ID=49547, SETTINGS=rx, AUTO=True, GIT_HASH=a6a21942799827050d5141fcb62c8cd0060e0080', '', '1'), (datetime.datetime(2018, 5, 1, 22, 30, 24, 329000, tzinfo=<UTC>), 'BUILD_LT_20170720_RUN3', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170720, RUN_ID=571, SETTINGS=lt, AUTO=False, GIT_HASH=c22cac99012a219867134113a82e1c43a86d8578', '', '1'), (datetime.datetime(2018, 5, 2, 15, 10, 35, 776000, tzinfo=<UTC>), 'BUILD_LT_20170720_RUN4', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170720, RUN_ID=290, SETTINGS=lt, AUTO=False, GIT_HASH=25b0b7508e65a4203b4066c95395f358088e3312', '', '1'), (datetime.datetime(2018, 5, 2, 21, 4, 21, 809000, tzinfo=<UTC>), 'BUILD_LT_20170720_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170720, RUN_ID=3963, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 5, 25, 14, 38, 2, 306000, tzinfo=<UTC>), 'BUILD_LT_20170720_RUN6', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170720, RUN_ID=1306, SETTINGS=lt, AUTO=False, GIT_HASH=375f5de0add2392a4593800af190ba2b126b9454', '', '1'), (datetime.datetime(2018, 11, 2, 20, 37, 0, 755000, tzinfo=<UTC>), 'BUILD_LT_20170803_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170803, RUN_ID=3855, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 11, 8, 20, 36, 1, 810000, tzinfo=<UTC>), 'BUILD_LT_20170817_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170817, RUN_ID=4065, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 6, 18, 20, 30, 21, 803000, tzinfo=<UTC>), 'BUILD_LT_20170824_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170824, RUN_ID=903, SETTINGS=lt, AUTO=False, GIT_HASH=c22cac99012a219867134113a82e1c43a86d8578', '', '1'), (datetime.datetime(2018, 5, 3, 20, 53, 33, 450000, tzinfo=<UTC>), 'BUILD_LT_20171012_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171012, RUN_ID=265, SETTINGS=lt, AUTO=False, GIT_HASH=d25d6e7dc4c1fde834be1334a9e7f7067706c04b', '', '1'), (datetime.datetime(2018, 5, 1, 22, 45, 48, 378000, tzinfo=<UTC>), 'BUILD_LT_20171019_RUN3', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 5, 2, 15, 28, 13, 567000, tzinfo=<UTC>), 'BUILD_LT_20171019_RUN4', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171019, RUN_ID=290, SETTINGS=lt, AUTO=False, GIT_HASH=25b0b7508e65a4203b4066c95395f358088e3312', '', '1'), (datetime.datetime(2018, 5, 2, 21, 16, 32, 447000, tzinfo=<UTC>), 'BUILD_LT_20171019_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171019, RUN_ID=3963, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 5, 18, 18, 18, 35, 786000, tzinfo=<UTC>), 'BUILD_LT_20171019_RUN51', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171019, RUN_ID=513, SETTINGS=lt, AUTO=False, GIT_HASH=39009efea67d09c868eacfbf1084c2d5c9bf3746', '', '1'), (datetime.datetime(2018, 5, 25, 14, 46, 13, 334000, tzinfo=<UTC>), 'BUILD_LT_20171019_RUN6', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171019, RUN_ID=1306, SETTINGS=lt, AUTO=False, GIT_HASH=375f5de0add2392a4593800af190ba2b126b9454', '', '1'), (datetime.datetime(2018, 11, 2, 20, 49, 34, 45000, tzinfo=<UTC>), 'BUILD_LT_20171102_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171102, RUN_ID=3855, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 11, 8, 21, 5, 40, 414000, tzinfo=<UTC>), 'BUILD_LT_20171103_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171103, RUN_ID=3969, SETTINGS=LT, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 11, 13, 21, 47, 42, 544000, tzinfo=<UTC>), 'BUILD_LT_20171116_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171116, RUN_ID=4057, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 6, 18, 20, 46, 15, 791000, tzinfo=<UTC>), 'BUILD_LT_20171123_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171123, RUN_ID=4065, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 10, 29, 21, 3, 4, 340000, tzinfo=<UTC>), 'BUILD_LT_20180118_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180118, RUN_ID=3930, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 5, 1, 22, 58, 28, 857000, tzinfo=<UTC>), 'BUILD_LT_20180125_RUN3', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 5, 2, 15, 40, 22, 740000, tzinfo=<UTC>), 'BUILD_LT_20180125_RUN4', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180125, RUN_ID=290, SETTINGS=lt, AUTO=False, GIT_HASH=25b0b7508e65a4203b4066c95395f358088e3312', '', '1'), (datetime.datetime(2018, 5, 2, 21, 29, 28, 423000, tzinfo=<UTC>), 'BUILD_LT_20180125_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180125, RUN_ID=3963, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 5, 25, 14, 58, 8, 150000, tzinfo=<UTC>), 'BUILD_LT_20180125_RUN6', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180125, RUN_ID=1306, SETTINGS=lt, AUTO=False, GIT_HASH=375f5de0add2392a4593800af190ba2b126b9454', '', '1'), (datetime.datetime(2018, 11, 2, 21, 0, 36, 521000, tzinfo=<UTC>), 'BUILD_LT_20180208_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180208, RUN_ID=3855, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 11, 8, 21, 41, 14, 441000, tzinfo=<UTC>), 'BUILD_LT_20180215_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180215, RUN_ID=4065, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 7, 13, 14, 38, 42, 457000, tzinfo=<UTC>), 'BUILD_LT_20180222_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180222, RUN_ID=3458, SETTINGS=lt, AUTO=False, GIT_HASH=f1b053cef6bf03cc70981e9d8e7f72bb8dc7071b', '', '1'), (datetime.datetime(2018, 6, 6, 19, 5, 19, 185000, tzinfo=<UTC>), 'BUILD_LT_20180405_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180405, RUN_ID=745, SETTINGS=lt, AUTO=False, GIT_HASH=c22cac99012a219867134113a82e1c43a86d8578', '', '1'), (datetime.datetime(2018, 6, 6, 18, 50, 21, 251000, tzinfo=<UTC>), 'BUILD_LT_20180412_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180412, RUN_ID=3930, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 4, 25, 21, 53, 46, 32000, tzinfo=<UTC>), 'BUILD_LT_20180419_RUN1', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 5, 7, 17, 50, 1, 766000, tzinfo=<UTC>), 'BUILD_LT_20180419_RUN4', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180419, RUN_ID=290, SETTINGS=lt, AUTO=False, GIT_HASH=25b0b7508e65a4203b4066c95395f358088e3312', '', '1'), (datetime.datetime(2018, 5, 2, 22, 50, 50, 308000, tzinfo=<UTC>), 'BUILD_LT_20180419_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180419, RUN_ID=3963, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 5, 25, 15, 11, 5, 677000, tzinfo=<UTC>), 'BUILD_LT_20180419_RUN6', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180419, RUN_ID=1306, SETTINGS=lt, AUTO=False, GIT_HASH=375f5de0add2392a4593800af190ba2b126b9454', '', '1'), (datetime.datetime(2018, 6, 6, 17, 22, 10, 129000, tzinfo=<UTC>), 'BUILD_LT_20180426_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180426, RUN_ID=3517, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 7, 23, 20, 30, 19, 707000, tzinfo=<UTC>), 'BUILD_LT_20180426_RUN6', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180426, RUN_ID=1334, SETTINGS=lt, AUTO=False, GIT_HASH=375f5de0add2392a4593800af190ba2b126b9454', '', '1'), (datetime.datetime(2018, 6, 6, 17, 59, 4, 482000, tzinfo=<UTC>), 'BUILD_LT_20180503_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180503, RUN_ID=3855, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 5, 17, 13, 34, 16, 317000, tzinfo=<UTC>), 'BUILD_LT_20180510_RUN1', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180510, RUN_ID=510, SETTINGS=lt, AUTO=False, GIT_HASH=39009efea67d09c868eacfbf1084c2d5c9bf3746', '', '1'), (datetime.datetime(2018, 6, 7, 15, 56, 17, 875000, tzinfo=<UTC>), 'BUILD_LT_20180510_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180510, RUN_ID=756, SETTINGS=lt, AUTO=False, GIT_HASH=c22cac99012a219867134113a82e1c43a86d8578', '', '1'), (datetime.datetime(2018, 5, 18, 18, 52, 12, 713000, tzinfo=<UTC>), 'BUILD_LT_20180510_RUN51', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180510, RUN_ID=513, SETTINGS=lt, AUTO=False, GIT_HASH=39009efea67d09c868eacfbf1084c2d5c9bf3746', '', '1'), (datetime.datetime(2018, 11, 8, 22, 10, 45, 48000, tzinfo=<UTC>), 'BUILD_LT_20180517_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180517, RUN_ID=4065, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 7, 17, 13, 53, 54, 490000, tzinfo=<UTC>), 'BUILD_LT_20180712_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180712, RUN_ID=3930, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 8, 6, 14, 7, 27, 606000, tzinfo=<UTC>), 'BUILD_LT_20180719', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180719, RUN_ID=1512, SETTINGS=af, AUTO=False, GIT_HASH=89f7bbd7411530e40efb2130373761a0253e569e', '', '1'), (datetime.datetime(2018, 7, 24, 13, 47, 16, 307000, tzinfo=<UTC>), 'BUILD_LT_20180719_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180719, RUN_ID=3929, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 8, 3, 14, 21, 26, 509000, tzinfo=<UTC>), 'BUILD_LT_20180802_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180802, RUN_ID=3855, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 8, 20, 21, 52, 39, 607000, tzinfo=<UTC>), 'BUILD_LT_20180816_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180816, RUN_ID=4065, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 9, 21, 21, 4, 2, 783000, tzinfo=<UTC>), 'BUILD_LT_20180913_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180913, RUN_ID=3094, SETTINGS=lt, AUTO=False, GIT_HASH=7e942a572c3a0aa7cc0e08f609b9b323e1d33893', '', '1'), (datetime.datetime(2018, 9, 27, 15, 3, 2, 650000, tzinfo=<UTC>), 'BUILD_LT_20180920_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180920, RUN_ID=3144, SETTINGS=lt, AUTO=False, GIT_HASH=d6aa122a824430e90614620ff62e6ea1e82b331f', '', '1'), (datetime.datetime(2018, 10, 5, 23, 10, 47, 365000, tzinfo=<UTC>), 'BUILD_LT_20180923_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180923, RUN_ID=3235, SETTINGS=lt, AUTO=False, GIT_HASH=d6aa122a824430e90614620ff62e6ea1e82b331f', '', '1'), (datetime.datetime(2018, 10, 6, 0, 16, 57, 943000, tzinfo=<UTC>), 'BUILD_LT_20181004_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181004, RUN_ID=3388, SETTINGS=lt, AUTO=False, GIT_HASH=d6aa122a824430e90614620ff62e6ea1e82b331f', '', '1'), (datetime.datetime(2018, 10, 18, 16, 58, 13, 866000, tzinfo=<UTC>), 'BUILD_LT_20181018_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181018, RUN_ID=3564, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 10, 24, 16, 16, 44, 609000, tzinfo=<UTC>), 'BUILD_LT_20181019_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181019, RUN_ID=3543, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 11, 6, 15, 53, 14, 463000, tzinfo=<UTC>), 'BUILD_LT_20181025_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181025, RUN_ID=3882, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2018, 11, 14, 17, 13, 14, 557000, tzinfo=<UTC>), 'BUILD_LT_20181108_RUN5', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20181108, RUN_ID=4066, SETTINGS=lt, AUTO=False, GIT_HASH=1926d0b4941f434d789a32d16c62231e8df830df', '', '1'), (datetime.datetime(2019, 5, 22, 13, 40, 32, 136000, tzinfo=<UTC>), 'BUILD_OI', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190516, RUN_ID=8839, SETTINGS=oi, AUTO=True, GIT_HASH=231b38cd5da16dd86b7e9b8ee21a6536649d0ea0', '', '1'), (datetime.datetime(2020, 6, 3, 17, 52, 9, 656000, tzinfo=<UTC>), 'BUILD_SMS_20190502', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190502, RUN_ID=23814, SETTINGS=sms, AUTO=True, GIT_HASH=9e76d56ea953dc201630d4a92bb3375bdc3cf574', '', '1'), (datetime.datetime(2020, 6, 3, 18, 20, 6, 881000, tzinfo=<UTC>), 'BUILD_SMS_20190725', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20190725, RUN_ID=23814, SETTINGS=sms, AUTO=True, GIT_HASH=9e76d56ea953dc201630d4a92bb3375bdc3cf574', '', '1'), (datetime.datetime(2020, 6, 3, 18, 52, 22, 204000, tzinfo=<UTC>), 'BUILD_SMS_20191024', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20191024, RUN_ID=23814, SETTINGS=sms, AUTO=True, GIT_HASH=9e76d56ea953dc201630d4a92bb3375bdc3cf574', '', '1'), (datetime.datetime(2020, 6, 3, 19, 13, 35, 24000, tzinfo=<UTC>), 'BUILD_SMS_20200220', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200220, RUN_ID=23814, SETTINGS=sms, AUTO=True, GIT_HASH=9e76d56ea953dc201630d4a92bb3375bdc3cf574', '', '1'), (datetime.datetime(2020, 6, 3, 19, 35, 17, 692000, tzinfo=<UTC>), 'BUILD_SMS_20200430', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20200430, RUN_ID=23814, SETTINGS=sms, AUTO=True, GIT_HASH=9e76d56ea953dc201630d4a92bb3375bdc3cf574', '', '1'), (datetime.datetime(2019, 1, 8, 22, 22, 18, 114000, tzinfo=<UTC>), 'FACILITY_INFO', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 8, 1, 17, 37, 39, 904000, tzinfo=<UTC>), 'FOUNDATION_AF', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 5, 8, 22, 45, 15, 232000, tzinfo=<UTC>), 'FOUNDATION_EY_2', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 11, 13, 21, 44, 18, tzinfo=<UTC>), 'FOUNDATION_LT', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 5, 22, 13, 35, 9, 877000, tzinfo=<UTC>), 'FOUNDATION_OI', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 1, 29, 17, 18, 35, 149000, tzinfo=<UTC>), 'FOUNDATION_YS', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2021, 11, 4, 16, 3, 40, 77000, tzinfo=<UTC>), 'INFORMATION_SCHEMA', 'N', 'N', 'MOA', '', 'Views describing the contents of schemas in this database', '', '1'), (datetime.datetime(2020, 6, 17, 16, 0, 34, 470000, tzinfo=<UTC>), 'KD_SMS', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2020, 3, 4, 22, 46, 48, 758000, tzinfo=<UTC>), 'MOA_QA_CUT_OVER_CUT', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 5, 10, 15, 39, 59, 778000, tzinfo=<UTC>), 'OI_QUANT_PRODUCT', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2017, 12, 14, 19, 28, 17, 227000, tzinfo=<UTC>), 'PYBRICKS', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2017, 7, 15, 17, 55, 12, 528000, tzinfo=<UTC>), 'QA', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 12, 11, 20, 51, 23, 658000, tzinfo=<UTC>), 'QDFP_BUILD_20170706', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170706, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 11, 21, 21, 11, 771000, tzinfo=<UTC>), 'QDFP_BUILD_20170713', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170713, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 11, 21, 50, 52, 854000, tzinfo=<UTC>), 'QDFP_BUILD_20170720', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170720, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 11, 22, 21, 22, 844000, tzinfo=<UTC>), 'QDFP_BUILD_20170727', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170727, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 11, 22, 51, 25, 477000, tzinfo=<UTC>), 'QDFP_BUILD_20170803', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170803, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 11, 23, 20, 58, 23000, tzinfo=<UTC>), 'QDFP_BUILD_20170810', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170810, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 11, 23, 49, 38, 424000, tzinfo=<UTC>), 'QDFP_BUILD_20170817', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170817, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 0, 20, 9, 672000, tzinfo=<UTC>), 'QDFP_BUILD_20170824', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170824, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 0, 50, 36, 693000, tzinfo=<UTC>), 'QDFP_BUILD_20170831', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170831, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 1, 19, 32, 752000, tzinfo=<UTC>), 'QDFP_BUILD_20170907', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170907, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 1, 48, 41, 958000, tzinfo=<UTC>), 'QDFP_BUILD_20170914', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170914, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 2, 17, 5, 327000, tzinfo=<UTC>), 'QDFP_BUILD_20170921', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20170921, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 8, 15, 6, 27, 2000, tzinfo=<UTC>), 'QDFP_BUILD_20170928', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20170928, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 15, 28, 54, 547000, tzinfo=<UTC>), 'QDFP_BUILD_20171005', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171005, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 15, 49, 41, 302000, tzinfo=<UTC>), 'QDFP_BUILD_20171012', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171012, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 16, 8, 31, 930000, tzinfo=<UTC>), 'QDFP_BUILD_20171019', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171019, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 16, 27, 49, 160000, tzinfo=<UTC>), 'QDFP_BUILD_20171026', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171026, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 16, 46, 43, 472000, tzinfo=<UTC>), 'QDFP_BUILD_20171102', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171102, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 17, 6, 33, 314000, tzinfo=<UTC>), 'QDFP_BUILD_20171109', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171109, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 17, 24, 12, 796000, tzinfo=<UTC>), 'QDFP_BUILD_20171116', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171116, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 17, 41, 57, 812000, tzinfo=<UTC>), 'QDFP_BUILD_20171123', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171123, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 17, 59, 46, 614000, tzinfo=<UTC>), 'QDFP_BUILD_20171130', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171130, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 18, 18, 49, 876000, tzinfo=<UTC>), 'QDFP_BUILD_20171207', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171207, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 18, 37, 47, 581000, tzinfo=<UTC>), 'QDFP_BUILD_20171214', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171214, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 18, 55, 12, 399000, tzinfo=<UTC>), 'QDFP_BUILD_20171221', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171221, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 19, 14, 6, 31000, tzinfo=<UTC>), 'QDFP_BUILD_20171228', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20171228, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 19, 32, 2, 835000, tzinfo=<UTC>), 'QDFP_BUILD_20180104', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180104, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 19, 50, 1, 732000, tzinfo=<UTC>), 'QDFP_BUILD_20180111', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180111, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 20, 7, 24, 904000, tzinfo=<UTC>), 'QDFP_BUILD_20180118', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180118, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 20, 25, 29, 925000, tzinfo=<UTC>), 'QDFP_BUILD_20180125', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180125, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 20, 44, 24, 161000, tzinfo=<UTC>), 'QDFP_BUILD_20180201', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180201, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 21, 2, 17, 676000, tzinfo=<UTC>), 'QDFP_BUILD_20180208', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180208, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 21, 20, 48, 872000, tzinfo=<UTC>), 'QDFP_BUILD_20180215', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180215, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 21, 38, 46, 249000, tzinfo=<UTC>), 'QDFP_BUILD_20180222', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180222, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 21, 56, 51, 142000, tzinfo=<UTC>), 'QDFP_BUILD_20180301', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180301, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 22, 15, 57, 993000, tzinfo=<UTC>), 'QDFP_BUILD_20180308', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180308, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 22, 35, 25, 284000, tzinfo=<UTC>), 'QDFP_BUILD_20180315', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180315, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 22, 53, 7, 339000, tzinfo=<UTC>), 'QDFP_BUILD_20180322', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180322, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 23, 11, 16, 979000, tzinfo=<UTC>), 'QDFP_BUILD_20180329', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180329, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 8, 23, 29, 31, 116000, tzinfo=<UTC>), 'QDFP_BUILD_20180405', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20180405, RUN_ID=4427, SETTINGS=qdfp, AUTO=True, GIT_HASH=5127a13d60ed84c912b9571e59f821fe29946bce', '', '1'), (datetime.datetime(2018, 12, 12, 2, 46, 12, 442000, tzinfo=<UTC>), 'QDFP_BUILD_20180412', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180412, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 3, 17, 43, 696000, tzinfo=<UTC>), 'QDFP_BUILD_20180419', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180419, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 3, 49, 41, 850000, tzinfo=<UTC>), 'QDFP_BUILD_20180426', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180426, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 4, 20, 33, 891000, tzinfo=<UTC>), 'QDFP_BUILD_20180503', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180503, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 4, 50, 56, 100000, tzinfo=<UTC>), 'QDFP_BUILD_20180510', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180510, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 5, 21, 57, 268000, tzinfo=<UTC>), 'QDFP_BUILD_20180517', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180517, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 5, 54, 7, 103000, tzinfo=<UTC>), 'QDFP_BUILD_20180524', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180524, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 6, 26, 10, 749000, tzinfo=<UTC>), 'QDFP_BUILD_20180531', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180531, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 6, 56, 22, 158000, tzinfo=<UTC>), 'QDFP_BUILD_20180607', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180607, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 7, 26, 59, 923000, tzinfo=<UTC>), 'QDFP_BUILD_20180614', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180614, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 7, 57, 32, 116000, tzinfo=<UTC>), 'QDFP_BUILD_20180621', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180621, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 8, 28, 47, 961000, tzinfo=<UTC>), 'QDFP_BUILD_20180628', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180628, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 9, 0, 11, 405000, tzinfo=<UTC>), 'QDFP_BUILD_20180705', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180705, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 9, 33, 29, 330000, tzinfo=<UTC>), 'QDFP_BUILD_20180712', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180712, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 10, 6, 44, 38000, tzinfo=<UTC>), 'QDFP_BUILD_20180719', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180719, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 10, 40, 50, 148000, tzinfo=<UTC>), 'QDFP_BUILD_20180726', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180726, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 11, 14, 58, 246000, tzinfo=<UTC>), 'QDFP_BUILD_20180802', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180802, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 11, 47, 45, 625000, tzinfo=<UTC>), 'QDFP_BUILD_20180809', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180809, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 12, 21, 10, 983000, tzinfo=<UTC>), 'QDFP_BUILD_20180816', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180816, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 12, 55, 36, 222000, tzinfo=<UTC>), 'QDFP_BUILD_20180823', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180823, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 13, 30, 24, 773000, tzinfo=<UTC>), 'QDFP_BUILD_20180830', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180830, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 14, 5, 25, 911000, tzinfo=<UTC>), 'QDFP_BUILD_20180906', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180906, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 14, 39, 41, 658000, tzinfo=<UTC>), 'QDFP_BUILD_20180913', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180913, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 15, 14, 4, 608000, tzinfo=<UTC>), 'QDFP_BUILD_20180920', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180920, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 12, 15, 48, 40, 309000, tzinfo=<UTC>), 'QDFP_BUILD_20180927', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180927, RUN_ID=4615, SETTINGS=qdfp, AUTO=True, GIT_HASH=63698053d52ffc34371f2123ee9c95e6764572b9', '', '1'), (datetime.datetime(2018, 12, 7, 20, 0, 11, 856000, tzinfo=<UTC>), 'QDFP_FOUNDATION', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 12, 7, 19, 13, 29, 372000, tzinfo=<UTC>), 'QDFP_STAGE', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 3, 4, 2, 40, 729000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190102', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 3, 13, 44, 17, 22000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190103', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 3, 18, 7, 56, 121000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190103_MDT_ONLY', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 4, 22, 20, 47, 643000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190104', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 7, 23, 27, 45, 750000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190107', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 8, 17, 9, 50, 972000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190108', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 11, 23, 40, 30, 984000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190111', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 14, 0, 31, 59, 564000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190113', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 15, 20, 22, 33, 719000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190115', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 1, 24, 0, 21, 45, 426000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190123', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 2, 12, 17, 13, 56, 744000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190212', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 3, 28, 16, 42, 31, 664000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190328', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 3, 29, 15, 11, 34, 202000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190329', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 4, 5, 13, 53, 36, 416000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190405', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 5, 10, 15, 6, 25, 787000, tzinfo=<UTC>), 'QUANT_PRODUCT_20190510', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 2, 7, 14, 28, 51, 771000, tzinfo=<UTC>), 'RAW', 'N', 'N', 'MOA', 'ETL', '', '', '1'), (datetime.datetime(2021, 2, 10, 15, 8, 19, 503000, tzinfo=<UTC>), 'RESEARCH', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20201112, RUN_ID=33588, SETTINGS=test, AUTO=True, GIT_HASH=d1d0fa077a07c3e9e900e5a8fa2594979a29150a', '', '1'), (datetime.datetime(2017, 7, 11, 18, 59, 31, 275000, tzinfo=<UTC>), 'SCRATCH', 'N', 'N', 'MOA', 'ETL', '', '', '1'), (datetime.datetime(2021, 4, 27, 18, 52, 34, 36000, tzinfo=<UTC>), 'SQUAREPOINT2_BUILD_KD_20210422', 'N', 'N', 'MOA', 'ANALYST', 'CUT_DATE=20210422, RUN_ID=40169, SETTINGS=squarepoint2018_kd, AUTO=True, GIT_HASH=a6300358f246b4ddcb5b3fe6c2211017414d7ece', '', '1'), (datetime.datetime(2021, 4, 27, 18, 50, 7, 945000, tzinfo=<UTC>), 'SQUAREPOINT2_STAGE', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2020, 3, 12, 16, 8, 49, 576000, tzinfo=<UTC>), 'SQUAREPOINT_BUILD_20180104', 'N', 'N', 'MOA', 'ETL', 'CUT_DATE=20180104, RUN_ID=20792, SETTINGS=squarepoint2018, AUTO=True, GIT_HASH=6b5b278296540011c85b8a6ff1cd9aece721c976', '', '1'), (datetime.datetime(2018, 8, 6, 14, 7, 27, 189000, tzinfo=<UTC>), 'STAGE_AF', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2020, 6, 10, 18, 38, 33, 186000, tzinfo=<UTC>), 'STAGE_JJ', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 4, 10, 18, 56, 43, 926000, tzinfo=<UTC>), 'STAGE_KD', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2018, 3, 22, 21, 30, 30, 595000, tzinfo=<UTC>), 'STAGE_LT', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2019, 5, 21, 14, 26, 9, 29000, tzinfo=<UTC>), 'STAGE_OI', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2020, 6, 3, 17, 52, 9, 336000, tzinfo=<UTC>), 'STAGE_SMS', 'N', 'N', 'MOA', 'ANALYST', '', '', '1'), (datetime.datetime(2021, 10, 15, 20, 28, 29, 674000, tzinfo=<UTC>), 'STAGE_SUMMARY', 'N', 'N', 'MOA', 'ETL', '', '', '1'), (datetime.datetime(2018, 2, 8, 18, 25, 55, 381000, tzinfo=<UTC>), 'STAGE_YS', 'N', 'N', 'MOA', 'ANALYST', '', '', '1')]

2021-11-04 12:03:48,354 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show variables

2021-11-04 12:03:48,549 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=b9df7dc3-b6f5-497c-80be-80373e26b91a&request_guid=158f27c1-0975-41c4-a9a2-691411b390c3 HTTP/1.1" 200 1202

2021-11-04 12:03:48,551 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:48,552 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:48,553 | MainThread | DEBUG | run_sql_step | gp.runner | [(16995209695274, datetime.datetime(2021, 11, 4, 16, 2, 37, 713000, tzinfo=<UTC>), datetime.datetime(2021, 11, 4, 16, 2, 37, 774000, tzinfo=<UTC>), 'CURRENT_GIT_HASH', 'aa5329f43a922a03a3cab17fb8dc13e53a920030', 'text', ''), (16995209695274, datetime.datetime(2021, 11, 4, 16, 2, 35, 467000, tzinfo=<UTC>), datetime.datetime(2021, 11, 4, 16, 2, 35, 530000, tzinfo=<UTC>), 'CURRENT_RUN_ID', '51782', 'fixed', '')]

2021-11-04 12:03:48,555 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    show parameters

2021-11-04 12:03:48,736 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=29ce42bb-48a8-4bf7-be72-4f5e07177e00&request_guid=5af80e16-87c7-4d39-a1be-c15e7c8f7fc9 HTTP/1.1" 200 5402

2021-11-04 12:03:48,741 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:48,741 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:48,741 | MainThread | DEBUG | run_sql_step | gp.runner | [('ABORT_DETACHED_QUERY', 'true', 'false', 'ACCOUNT', 'If true, Snowflake will automatically abort queries when it detects that the client has disappeared.', 'BOOLEAN'), ('AUTOCOMMIT', 'true', 'true', '', 'The autocommit property determines whether is statement should to be implicitly\nwrapped within a transaction or not. If autocommit is set to true, then a \nstatement that requires a transaction is executed within a transaction \nimplicitly. If autocommit is off then an explicit commit or rollback is required\nto close a transaction. The default autocommit value is true.', 'BOOLEAN'), ('AUTOCOMMIT_API_SUPPORTED', 'true', 'true', '', 'Whether autocommit feature is enabled for this client. This parameter is for\nSnowflake use only.', 'BOOLEAN'), ('BINARY_INPUT_FORMAT', 'HEX', 'HEX', '', 'input format for binary', 'STRING'), ('BINARY_OUTPUT_FORMAT', 'HEX', 'HEX', '', 'display format for binary', 'STRING'), ('CLIENT_ENABLE_CONSERVATIVE_MEMORY_USAGE', 'true', 'true', '', 'Enables conservative memory usage for JDBC', 'BOOLEAN'), ('CLIENT_ENABLE_DEFAULT_OVERWRITE_IN_PUT', 'false', 'false', '', 'Set default value of overwrite option to true for put command, if overwrite option is not specified in the sql command.', 'BOOLEAN'), ('CLIENT_ENABLE_LOG_INFO_STATEMENT_PARAMETERS', 'false', 'false', '', 'Enable info-level logging for Prepared Statement binding parameters', 'BOOLEAN'), ('CLIENT_MEMORY_LIMIT', '1536', '1536', '', 'Limit the amount of memory used by the client in MB', 'NUMBER'), ('CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog and schema if set to true', 'BOOLEAN'), ('CLIENT_METADATA_USE_SESSION_DATABASE', 'false', 'false', '', 'For client metadata request(getTables()), use session catalog but multiple schemas if set to true (in conjunction with CLIENT_METADATA_REQUEST_USE_CONNECTION_CTX', 'BOOLEAN'), ('CLIENT_PREFETCH_THREADS', '4', '4', 'SESSION', 'Customer parameter to control threads, 0=auto', 'NUMBER'), ('CLIENT_RESULT_CHUNK_SIZE', '160', '160', '', 'Set the max result chunk size in MB on the client side', 'NUMBER'), ('CLIENT_RESULT_COLUMN_CASE_INSENSITIVE', 'false', 'false', '', 'Column name search is case insensitive in clients', 'BOOLEAN'), ('CLIENT_SESSION_CLONE', 'false', 'false', '', 'If true, client clones a new session from the previously used tokens for the account and user.', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE', 'false', 'false', '', 'If true, client session will not expire automatically', 'BOOLEAN'), ('CLIENT_SESSION_KEEP_ALIVE_HEARTBEAT_FREQUENCY', '900', '3600', 'SESSION', 'Heartbeat frequency in seconds for CLIENT_SESSION_KEEP_ALIVE.', 'NUMBER'), ('CLIENT_TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_LTZ', 'TIMESTAMP_LTZ', '', 'If a variable is bound to the TIMESTAMP data type using the bind API, determines which TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ (default), TIMESTAMP_NTZ', 'STRING'), ('C_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to C API', 'STRING'), ('DATE_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for date', 'STRING'), ('DATE_OUTPUT_FORMAT', 'YYYY-MM-DD', 'YYYY-MM-DD', '', 'display format for date', 'STRING'), ('ENABLE_UNLOAD_PHYSICAL_TYPE_OPTIMIZATION', 'true', 'true', '', 'Enable physical-type optimizations used in Snowflake to affect the Parquet output', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_MERGE', 'true', 'true', '', 'raise an error when attempting to merge-update a row that joins many rows', 'BOOLEAN'), ('ERROR_ON_NONDETERMINISTIC_UPDATE', 'false', 'false', '', 'raise an error when attempting to update a row that joins many rows', 'BOOLEAN'), ('GEOGRAPHY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOGRAPHY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GEOMETRY_OUTPUT_FORMAT', 'GeoJSON', 'GeoJSON', '', 'GEOMETRY display format: GeoJSON, WKT, or WKB(case-insensitive)', 'STRING'), ('GO_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to golang driver', 'STRING'), ('JDBC_FORMAT_DATE_WITH_TIMEZONE', 'true', 'true', '', "When true, ResultSet#getDate(int columnIndex, Calendar cal) and getDate(String columnName, Calendar cal) will display the date using the Calendar's output.", 'BOOLEAN'), ('JDBC_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to jdbc', 'STRING'), ('JDBC_TREAT_DECIMAL_AS_INT', 'true', 'true', '', 'When scale is 0, whether to treat Decimal as Int in JDBC', 'BOOLEAN'), ('JDBC_TREAT_TIMESTAMP_NTZ_AS_UTC', 'false', 'false', '', 'When true, Timestamp_NTZ values are always stored in UTC timezone', 'BOOLEAN'), ('JDBC_USE_SESSION_TIMEZONE', 'true', 'true', '', 'When true, JDBC driver will not display timezone offset between JVM and session.', 'BOOLEAN'), ('JSON_INDENT', '2', '2', '', 'Width of indentation in JSON output (0 for compact)', 'NUMBER'), ('JS_TREAT_INTEGER_AS_BIGINT', 'false', 'false', '', 'If true, the nodejs client will convert all integer columns to bigint type', 'BOOLEAN'), ('LANGUAGE', 'en', 'en', '', 'The selected language that will be used by UI, GS, Query Coordination and XP. The input languages should be in BCP-47 format. AKA. dash format.See LocaleUtil.java for the details.', 'STRING'), ('LOCK_TIMEOUT', '10800', '43200', 'ACCOUNT', 'Number of seconds to wait while trying to lock a resource, before timing out \nand aborting the statement. A value of 0 turns off lock waiting i.e. the \nstatement must acquire the lock immediately or abort. If multiple resources \nneed to be locked by the statement, the timeout applies separately to each \nlock attempt.', 'NUMBER'), ('LOG_LEVEL', 'OFF', 'OFF', '', 'LOG_LEVEL to use when filtering events', 'STRING'), ('MULTI_STATEMENT_COUNT', '1', '1', '', 'Number of statement included in submitted query text.\nThis parameter is submitted by user to avoid sql injection.\nValue 1 means one statement, value > 1 means n statement\ncan be executed, if not equal to the value will raise the\nexception. Value 0 means any number of statement can be\n executed', 'NUMBER'), ('ODBC_QUERY_RESULT_FORMAT', 'ARROW', 'JSON', 'SYSTEM', 'Format used to serialize query result to send back to odbc', 'STRING'), ('ODBC_SCHEMA_CACHING', 'false', 'false', '', 'When true, enables schema caching in ODBC. This can speed up SQLColumns API calls.', 'BOOLEAN'), ('ODBC_USE_CUSTOM_SQL_DATA_TYPES', 'false', 'false', '', 'ODBC return snowflake specific sql data types in result set metadata', 'BOOLEAN'), ('PREVENT_UNLOAD_TO_INTERNAL_STAGES', 'false', 'false', '', 'Prevent unload sensitive data to non-external stages (user stage, table stage, named stage).', 'BOOLEAN'), ('PYTHON_CONNECTOR_QUERY_RESULT_FORMAT', 'ARROW', 'ARROW', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('QA_TEST_NAME', '', '', '', 'Test name if running in QA mode. Used as a diversifier for shared pools', 'STRING'), ('QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to client ', 'STRING'), ('QUERY_TAG', 'RUN_ID=51782', '', 'SESSION', 'String (up to 2000 characters) used to tag statements executed by the session', 'STRING'), ('QUOTED_IDENTIFIERS_IGNORE_CASE', 'false', 'false', '', 'If true, the case of quoted identifiers is ignored', 'BOOLEAN'), ('ROWS_PER_RESULTSET', '0', '0', '', 'maxium number of rows in a result set', 'NUMBER'), ('SEARCH_PATH', '$current, $public', '$current, $public', '', 'Search path for unqualified object references.', 'STRING'), ('SHOW_EXTERNAL_TABLE_KIND_AS_TABLE', 'true', 'true', '', 'Change the way external table KIND info is displayed by SHOW TABLES and SHOW OBJECTS. The KIND column of external tables is displayed as TABLE if true, EXTERNAL_TABLE otherwise.', 'BOOLEAN'), ('SIMULATED_DATA_SHARING_CONSUMER', '', '', '', 'Data sharing views will return rows as if executed in the specified consumer account.', 'STRING'), ('SNOWPARK_LAZY_ANALYSIS', 'true', 'true', '', 'Enable lazy result schema analysis for Snowpark', 'BOOLEAN'), ('SQL_API_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'The result set will use the format provided with the default of JSON', 'STRING'), ('STATEMENT_QUEUED_TIMEOUT_IN_SECONDS', '10800', '0', 'ACCOUNT', 'Timeout in seconds for queued statements: statements will automatically be canceled if they are queued on a warehouse for longer than this amount of time; disabled if set to zero.', 'NUMBER'), ('STATEMENT_TIMEOUT_IN_SECONDS', '10800', '172800', 'ACCOUNT', 'Timeout in seconds for statements: statements are automatically canceled if they run for longer; if set to zero, max value (604800) is enforced.', 'NUMBER'), ('STRICT_JSON_OUTPUT', 'false', 'false', '', 'JSON output is strictly compliant to the specification', 'BOOLEAN'), ('TIMESTAMP_DAY_IS_ALWAYS_24H', 'false', 'false', '', 'If set, arithmetic on days always uses 24 hours per day,\npossibly not preserving the time (due to DST changes)', 'BOOLEAN'), ('TIMESTAMP_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for timestamp', 'STRING'), ('TIMESTAMP_LTZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_LTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_NTZ_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3', 'YYYY-MM-DD HH24:MI:SS.FF3', '', 'Display format for TIMESTAMP_NTZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMESTAMP_OUTPUT_FORMAT', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', 'YYYY-MM-DD HH24:MI:SS.FF3 TZHTZM', '', 'Default display format for all timestamp types.', 'STRING'), ('TIMESTAMP_TYPE_MAPPING', 'TIMESTAMP_NTZ', 'TIMESTAMP_NTZ', '', 'If TIMESTAMP type is used, what specific TIMESTAMP* type it should map to:\n  TIMESTAMP_LTZ, TIMESTAMP_NTZ (default) or TIMESTAMP_TZ', 'STRING'), ('TIMESTAMP_TZ_OUTPUT_FORMAT', '', '', '', 'Display format for TIMESTAMP_TZ values. If empty, TIMESTAMP_OUTPUT_FORMAT is used.', 'STRING'), ('TIMEZONE', 'UTC', 'America/Los_Angeles', 'SESSION', 'time zone', 'STRING'), ('TIME_INPUT_FORMAT', 'AUTO', 'AUTO', '', 'input format for time', 'STRING'), ('TIME_OUTPUT_FORMAT', 'HH24:MI:SS', 'HH24:MI:SS', '', 'display format for time', 'STRING'), ('TRANSACTION_ABORT_ON_ERROR', 'false', 'false', '', 'If this parameter is true, and a statement issued within a non-autocommit\ntransaction returns with an error, then the non-autocommit transaction is\naborted. All statements issued inside that transaction will fail until an\ncommit or rollback statement is executed to close that transaction.', 'BOOLEAN'), ('TRANSACTION_DEFAULT_ISOLATION_LEVEL', 'READ COMMITTED', 'READ COMMITTED', '', 'The default isolation level when starting a starting a transaction, when no\nisolation level was specified', 'STRING'), ('TWO_DIGIT_CENTURY_START', '1970', '1970', '', "For 2-digit dates, defines a century-start year.\nFor example, when set to 1980:\n  - parsing a string '79' will produce 2079\n  - parsing a string '80' will produce 1980", 'NUMBER'), ('UI_QUERY_RESULT_FORMAT', 'JSON', 'JSON', '', 'Format used to serialize query result to send back to python connector ', 'STRING'), ('UNSUPPORTED_DDL_ACTION', 'ignore', 'ignore', '', 'The action to take upon encountering an unsupported ddl statement', 'STRING'), ('USE_CACHED_RESULT', 'true', 'true', '', 'If enabled, query results can be reused between successive invocations of the same query as long as the original result has not expired', 'BOOLEAN'), ('WEEK_OF_YEAR_POLICY', '0', '0', '', 'Defines the policy of assigning weeks to years:\n0: the week needs to have 4 days in a given year;\n1: a week with January 1st always belongs to a given year.', 'NUMBER'), ('WEEK_START', '0', '0', '', 'Defines the first day of the week:\n0: legacy Snowflake behavior; 1: Monday .. 7: Sunday.', 'NUMBER')]

2021-11-04 12:03:48,749 | MainThread | DEBUG | execute | gp.snowflake | SKIPPING EMPTY QUERY:

2021-11-04 12:03:48,749 | MainThread | DEBUG | execute | gp.snowflake | SQL:
    --------------------------------------------------------------------
    -- DONE
    --------------------------------------------------------------------

2021-11-04 12:03:48,749 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    

2021-11-04 12:03:48,749 | MainThread | INFO | _finish | gp.job | duration seconds: 72.37

2021-11-04 12:03:48,749 | MainThread | INFO | _finish | gp.job | duration minutes: 1.21

2021-11-04 12:03:48,750 | MainThread | DEBUG | _finish | gp.job | Memmory Used: 173.9 MB, Delta: 163.2 MB

2021-11-04 12:03:48,750 | MainThread | INFO | _finish | gp.job | JOB RESULT: SUCCESS

2021-11-04 12:03:48,750 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    update rawdata.metadata.job_run_v3
            set finish_success=%s, finish_error=%s, finish_time=current_timestamp(), finish_duration=timestampdiff(second, start_time, current_timestamp()), finish_details=parse_json(%s)
            where run_id=%s

2021-11-04 12:03:48,750 | MainThread | DEBUG | execute | gp.snowflake | Args:
    [
        true,
        null,
        "{\"memory_used_mb\": 173.850624, \"memory_delta_mb\": 163.1571968}",
        51782
    ]

2021-11-04 12:03:50,165 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=22d66ce1-2ea7-4061-b67f-2bed33edf1a5&request_guid=19f6d4c8-445c-4909-a8aa-39a593893a73 HTTP/1.1" 200 1074

2021-11-04 12:03:50,166 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:50,166 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:50,166 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    delete from rawdata.metadata.job_query_history where datediff(days, start_time, current_timestamp())>30

2021-11-04 12:03:50,634 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=48251058-82e2-424d-a932-c563493d2e24&request_guid=0ca428ae-8b08-4510-8400-88679c9ed9ed HTTP/1.1" 200 999

2021-11-04 12:03:50,637 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:50,637 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:50,638 | MainThread | DEBUG | execute | gp.snowflake | SQL CLEAN:
    insert into rawdata.metadata.job_query_history 
            select %s as run_id, QUERY_ID,QUERY_TEXT,DATABASE_NAME,SCHEMA_NAME,QUERY_TYPE,SESSION_ID,USER_NAME,ROLE_NAME,WAREHOUSE_NAME,WAREHOUSE_SIZE,WAREHOUSE_TYPE,QUERY_TAG,EXECUTION_STATUS,ERROR_CODE,ERROR_MESSAGE,START_TIME,END_TIME,TOTAL_ELAPSED_TIME,COMPILATION_TIME,EXECUTION_TIME,QUEUED_PROVISIONING_TIME,QUEUED_REPAIR_TIME,QUEUED_OVERLOAD_TIME,TRANSACTION_BLOCKED_TIME,OUTBOUND_DATA_TRANSFER_CLOUD,OUTBOUND_DATA_TRANSFER_REGION,OUTBOUND_DATA_TRANSFER_BYTES
            from table(rawdata.information_schema.query_history_by_session(session_id => current_session()::number, result_limit => 10000))
            order by start_time

2021-11-04 12:03:50,638 | MainThread | DEBUG | execute | gp.snowflake | Args:
    [
        51782
    ]

2021-11-04 12:03:51,817 | MainThread | DEBUG | _make_request | snowflake.connector.vendored.urllib3.connectionpool | https://guidepoint.snowflakecomputing.com:443 "POST /queries/v1/query-request?requestId=834889d7-c4de-439a-b2c4-2fff276e7493&request_guid=7f2014c2-4246-4c2c-915c-1b2596a6c0dc HTTP/1.1" 200 1058

2021-11-04 12:03:51,818 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:51,818 | MainThread | DEBUG | add_log_to_batch | snowflake.connector.telemetry | TelemetryClient disabled. Ignoring log.

2021-11-04 12:03:56,064 | MainThread | DEBUG | upload_file | gp.s3 | filename=./tmp\output.step_00_init_sql.sql, url=s3://guidepoint.internal/job/rxia/etl_alphas/20211104.51782.rx.aa5329f43a922a03a3cab17fb8dc13e53a920030/output/output.step_00_init_sql.sql

2021-11-04 12:03:56,068 | MainThread | DEBUG | _finish | gp.job | Unable to locate credentials

2021-11-04 12:03:56,068 | MainThread | WARNING | _finish | gp.job | ARCHIVING AND EMAILING OF LOGS DISABLED

2021-11-04 12:03:56,069 | MainThread | DEBUG | _exit | gp.job | ******* EXIT *******

