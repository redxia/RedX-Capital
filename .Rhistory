#Sys.setenv('APCA-PAPER-API-KEY-ID' = "PK70MOT1TD6DWCD6AV2C")
#Sys.setenv('APCA-PAPER-API-SECRET-KEY' = "nHrAa3XfLN2mBfxXZ7BwROOck4fSu81FZOVUcSSr")
#SPY = get_bars('SPY', timeframe = '15Min', limit = 1000)[[1]]
# SPY = getSymbols("SPY", periodicity = 'intraday', verbose = FALSE, output='full', src='av', interval='60min', auto.assign = FALSE)
# spy_returns <- na.omit(SPY$SPY.Close/ lag(SPY$SPY.Close) - 1)
# hmm_intra = depmix(spy_returns ~ 1, family=gaussian(), nstates=2, data=spy_returns)
# hmm_fit_intra = fit(hmm_intra, verbose=FALSE)
# post_probs_intra = posterior(hmm_fit_intra)
# post_probs_intra$date <- index(spy_returns)
# post_probs_intra$sp500 = SPY$SPY.Close[-1]
# x = post_probs_intra[,-c(1,4,5)] * max(SPY['20200101/']$SPY.Close)
# matplot(cbind(x[post_probs_intra$date > '2020-01-01',], SPY['20200101/']$SPY.Close[-1]), type='l', lty=c(3,3,1), main='regime posterior probabilities', ylab = 'probability')
# legend(x='left', c('Regime #1', "Regime #2", 'SP500'), fill=1:3, bty='n')
#
# ## Financial crisis
# x = post_probs[,-c(1,4,5)] * max(SPY['20080101/20110101']$SPY.Adjusted)
# matplot(cbind(x[post_probs$date < "2011-01-01" & post_probs$date > '2008-01-01',], SPY['20080101/20110101']$SPY.Adjusted), type='l', lty=c(3,3,1), main='regime posterior probabilities', ylab = 'probability')
# legend(x='left', c('Regime #2', "Regime #1",'SP500'), fill=1:3, bty='n')
#
# # post 2016
# x = post_probs[,-c(1,4,5)] * max(SPY['20160101/']$SPY.Adjusted)
# matplot(cbind(x[post_probs$date > '2016-01-01',], SPY['20160101/']$SPY.Adjusted), type='l', lty=c(3,3,1), main='regime posterior probabilities', ylab = 'probability')
# legend(x='left', c('Regime #1', "Regime #2", 'SP500'), fill=1:3, bty='n')
model1 = lm(UVXY_Ret$UVXY.Close~SPY_Ret)
summary(model1)
plot(SPY_Ret$SPY.Close, UVXY_Ret$UVXY.Close)
plot(as.numeric(SPY_Ret$SPY.Close), as.numeric(UVXY_Ret$UVXY.Close))
plot(as.numeric(SPY_Ret$SPY.Close[UVXY_Ret$UVXY.Close < 2]), as.numeric(UVXY_Ret$UVXY.Close[UVXY_Ret$UVXY.Close < 2]))
abline(model1)
abline(h=0,v=0)
length(SPY_Ret)
nrow(SPY_Ret)
# This script identify the beta, and provides a regression analysis
library(quantmod)
library(data.table)
# parameters
tickers = c('UVXY','SPY')
date = Sys.Date() - 365 #"2020-06-09"#
getSymbols(tickers, from=date, to = Sys.Date()+1, verbose = FALSE)
getSymbols('DGS3MO', src='FRED', from=date, to = Sys.Date()+1)
rf = as.numeric(DGS3MO[nrow(DGS3MO),]) / 100
UVXY_rets = na.omit(UVXY$UVXY.Adjusted / shift(UVXY$UVXY.Adjusted) - 1)
SPY_rets = na.omit(SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1)
data = data.frame(UVXY_rets$UVXY.Adjusted, SPY_rets$SPY.Adjusted)
data = data[order(data$SPY.Adjusted),]
#data$yhat = predict(polyReg, data)
plot(data$SPY.Adjusted-rf, data$UVXY.Adjusted-rf,
xlab=paste(tickers[2],' Returns'),
ylab=paste(tickers[1],' Returns'),
main='CAPM Model')
abline(h=0,v=0, col='grey',lty='dashed')
#lines(data$SPY.Adjusted,data$yhat, col='red')
linTrReg <- lm(I(UVXY.Adjusted-rf)~I(SPY.Adjusted-rf), data = data)
#polyReg <- lm(T.Adjusted~SPY.Adjusted + I(SPY.Adjusted^2) + I(SPY.Adjusted^3), data = data)
#polyReg <- lm(T.Adjusted~exp(-SPY.Adjusted * 16), data = data)
abline(linTrReg, col='red')
points(x=mean(SPY_rets$SPY.Adjusted), y=mean(UVXY_rets$UVXY.Adjusted), col='darkred', pch=22,lwd=4)
stock_cor = cor(UVXY_rets$UVXY.Adjusted,SPY_rets$SPY.Adjusted)
summary(linTrReg)
#summary(polyReg)
cat(paste(tickers[1],"Correlation:", round(stock_cor,2)), '            ')
cat(paste(tickers[1],"R^2:", round(stock_cor^2,2), '                '))
cat(paste(tickers[1],'Beta Coefficient:'), round(coef(linTrReg)[2],2))
cat(paste(tickers[1],'Alpha:'), round(coef(linTrReg)[1] * length(UVXY_rets$UVXY.Adjusted) * 100,2))
cat(paste(tickers[1],'Mean: '), round(mean(UVXY_rets$UVXY.Adjusted) * length(UVXY_rets$UVXY.Adjusted) * 100,2))
cat(paste(tickers[1],'Volatiltiy:'), round(sd(UVXY_rets$UVXY.Adjusted) * sqrt(length(UVXY_rets$UVXY.Adjusted)) * 100,2))
cat(paste(tickers[2],'Mean: '), round(mean(SPY_rets$SPY.Adjusted) * length(SPY_rets$SPY.Adjusted) * 100,2))
cat(paste(tickers[2],'Volatiltiy:'), round(sd(SPY_rets$SPY.Adjusted) * sqrt(length(SPY_rets$SPY.Adjusted)) * 100),2)
prob_error = (nrow(data[data$UVXY.Adjusted < 0 & data$SPY.Adjusted > 0,]) +
nrow(data[data$UVXY.Adjusted > 0 & data$SPY.Adjusted < 0,])
) / nrow(data)
cat('Probability of being off Diagonal (Historical): ', round(prob_error,4))
prob_topleft = (nrow(data[data$UVXY.Adjusted > 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being top left (Historical): ', round(prob_topleft,4))
prob_botright = (nrow(data[data$UVXY.Adjusted < 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being bottom right (Historical): ', round(prob_botright,4))
prob_topright = (nrow(data[data$UVXY.Adjusted > 0 & data$SPY.Adjusted > 0,])) / nrow(data)
cat('Probability of being top right (Historical): ', round(prob_topright,4))
prob_botleft = (nrow(data[data$UVXY.Adjusted < 0 & data$SPY.Adjusted < 0,])) / nrow(data)
cat('Probability of being bottom left (Historical): ', round(prob_botleft,4))
min(UVXY$UVXY.Close)
View(UVXY)
getSymbols('UVXY', verbose = FALSE, from = "2011-01-01", src = 'av', output = 'full')
UVXY = UVXY['20111031/']
min(UVXY$UVXY.Close)
plot(UVXY["20120101/"]$UVXY.Close, ylim=c(0,115))
plot(UVXY$UVXY.Close[index(UVXY) >= "2017-01-01"], main = "UVXY after 2017")
years <- c('2009', '2010', '2011', '2012', '2013', '2014', '2015','2016','2017','2018','2019','2020','2021')
# plotting ----------------------------------------------------------------
# yearly plots ------------------------------------------------------------
#2012-2015
par(mar = c(4,4,4,6))
matplot(as.Date(index(UVXY['20130101/20140101']), "%m-%d"),
data.frame(c(UVXY['20120101/20130101']$UVXY.Close[1],UVXY['20120101/20130101']$UVXY.Close,UVXY['20120101/20130101']$UVXY.Close[250]), # adjust this date
UVXY['20130101/20140101']$UVXY.Close,
UVXY['20140101/20150101']$UVXY.Close,
UVXY['20150101/20160101']$UVXY.Close
),
type='l', xlab = "Dates", ylab = "UVXY", col = c(1:4), lty = 1, lwd = 2, ylim=c(0,105)
)
abline(v = as.Date(index(UVXY['20130101/20140101']), "%m-%d")
[c(seq(1,nrow(UVXY['20130101/20140101']), 21),252)], col = 'blue', lty = 3)
legend('topright', inset = c(-0.35,0), legend = c("2012","2013",'2014', '2015'),
col=c(1:4), lty=1, lwd = 2, xpd = TRUE)
abline(h=seq(10,105,10), lty=3, col='blue') # add references
#2016-2019
par(mar = c(4,4,4,6))
matplot(as.Date(index(UVXY['20170101/20180101']), "%m-%d"),
data.frame(UVXY['20160101/20170101']$UVXY.Close[-252],
UVXY['20170101/20180101']$UVXY.Close,
UVXY['20180101/20190101']$UVXY.Close,
c(UVXY['20190101/20200101']$UVXY.Close[-252])
),
type='l', xlab = "Dates", ylab = "UVXY", col = c(1:4), lty = 1, lwd = 2, ylim=c(0,90)
)
abline(v = as.Date(index(UVXY['20170101/20180101']), "%m-%d")
[c(seq(1,nrow(UVXY['20170101/20180101']), 21),251)], col = 'blue', lty = 3)
legend('topright', inset = c(-0.35,0), legend = c("2016","2017","2018",'2019'),
col=c(1:4), lty=1, lwd = 2, xpd = TRUE)
abline(h=seq(10,85,10), lty=3, col='blue')
# 2019+
par(mar = c(4,4,4,6))
after2021 = as.numeric(UVXY['20210101/']$UVXY.Close) # use for the latest forward fill. Update
matplot(as.Date(index(UVXY['20190101/20200101']), "%m-%d"),
data.frame(UVXY['20190101/20200101']$UVXY.Close,
UVXY['20200101/20210101']$UVXY.Close[-253],
c(after2021, rep(after2021[length(after2021)],252 - length(after2021)))
),
type='l', xlab = "Dates", ylab = "UVXY", col = c(1:4), lty = 1, lwd = 2, ylim=c(0,115)
)
abline(v = as.Date(index(UVXY['20200101/20210101']), "%m-%d")
[c(seq(1,nrow(UVXY['20200101/20210101']), 21),252)], col = 'blue', lty = 3)
abline(h=seq(10,105,10), lty=3, col='blue')
legend('topright', inset = c(-0.35,0), legend = c("2019","2020","2021"),
col=c(1:3), lty=1, lwd = 2, xpd = TRUE)
min(UVXY['20170101/']$UVXY.Close)
min(UVXY['20120101/20170101']$UVXY.Close)
quantile(UVXY['20170101/']$UVXY.Close, .05)
quantile(UVXY['20170101/']$UVXY.Close, .1)
quantile(UVXY['20170101/']$UVXY.Close, .035)
getSymbols('UVXY', verbose = FALSE, from = "2011-01-01", src = 'av', output = 'full')
getSymbols('SPY', verbose = FALSE, from = "2011-01-01", src = 'av', output = 'full')
UVXY = UVXY['20111031/']
SPY = SPY['20111031/']
# getSymbols('SVXY', verbose = FALSE, from = "2011-01-01", src = 'av', output = 'full')
# getSymbols('VXX', verbose = FALSE, from = "2009-01-30", src = 'av', output = 'full')
# getSymbols('SPY', verbose = FALSE, from = "2011-01-01", src = 'av', output = 'full')
#UVXY_AV = av_get("UVXY", "TIME_SERIES_DAILY_ADJUSTED", outputsize = "full")
#VIXY = av_get("VIXY", "TIME_SERIES_DAILY_ADJUSTED", outputsize = "full")
#SVXY = av_get("SVXY", "TIME_SERIES_DAILY_ADJUSTED", outputsize = "full")
#getSymbols("^VIX", verbose = FALSE, from = "2000-01-30")
UVXY_Ret = (UVXY$UVXY.Close / shift(UVXY$UVXY.Close) - 1)[-1]
SPY_Ret = (SPY$SPY.Close / shift(SPY$SPY.Close) - 1)[-1]
# getting the data --------------------------------------------------------
# trend plots -------------------------------------------------------------
# plot(UVXY["20120101/"]$UVXY.Close/as.numeric(UVXY["20120101/"]$UVXY.Close[1]), ylim=c(0,9))
# lines(SVXY["20120101/"]$SVXY.Close/as.numeric(SVXY["20120101/"]$SVXY.Close[1]), col='red')
# lines(VXX["20120101/"]$VXX.Close/as.numeric(VXX["20120101/"]$VXX.Close[1]), col='red')
# lines(SPY["20120101/"]$SPY.Close/as.numeric(SPY["20120101/"]$SPY.Close[1]), col='red')
plot(as.numeric(SPY_Ret$SPY.Close), as.numeric(UVXY_Ret$UVXY.Close))
plot(as.numeric(SPY_Ret$SPY.Close[UVXY_Ret$UVXY.Close < 2]), as.numeric(UVXY_Ret$UVXY.Close[UVXY_Ret$UVXY.Close < 2]))
abline(h=0,v=0)
# trend plots -------------------------------------------------------------
# plotting ----------------------------------------------------------------
plot(UVXY["20120101/"]$UVXY.Close, ylim=c(0,115))
par(mar = c(4,4,4,6))
after2021 = as.numeric(UVXY['20210101/']$UVXY.Close) # use for the latest forward fill. Update
matplot(as.Date(index(UVXY['20190101/20200101']), "%m-%d"),
data.frame(UVXY['20190101/20200101']$UVXY.Close,
UVXY['20200101/20210101']$UVXY.Close[-253],
c(after2021, rep(after2021[length(after2021)],252 - length(after2021)))
),
type='l', xlab = "Dates", ylab = "UVXY", col = c(1:4), lty = 1, lwd = 2, ylim=c(0,115)
)
abline(v = as.Date(index(UVXY['20200101/20210101']), "%m-%d")
[c(seq(1,nrow(UVXY['20200101/20210101']), 21),252)], col = 'blue', lty = 3)
abline(h=seq(10,105,10), lty=3, col='blue')
legend('topright', inset = c(-0.35,0), legend = c("2019","2020","2021"),
col=c(1:3), lty=1, lwd = 2, xpd = TRUE)
View(UVXY)
# packages ----------------------------------------------------------------
library(quantmod)
library(forecast)
library(timeDate)
library(data.table)
library(alphavantager)
library(quantmod)
library(tseries)
library(zoo)
library(lubridate)
library(DescTools) # winsorized tools
# years that are similar
#2021 2020 2018 2012 2013, 2012, 2013 (2015)
av_api_key("TCQT2QFAN6SOOT8I")
setDefaults(getSymbols.av, api.key = "TCQT2QFAN6SOOT8I")
# packages ----------------------------------------------------------------
setwd("D:/RedX Capital/vix strat")
# getting the data --------------------------------------------------------
getSymbols('UVXY', verbose = FALSE, from = "2011-01-01", src = 'av', output = 'full')
UVXY = UVXY['20111031/']
UVXY_Ret = (UVXY$UVXY.Close / shift(UVXY$UVXY.Close) - 1)[-1]
UVXY_Ret <- as.data.frame(UVXY_Ret)
UVXY_Ret$Date = rownames(UVXY_Ret)
rownames(UVXY_Ret) = NULL
UVXY_Ret$col = as.factor(ifelse(UVXY_Ret$UVXY.Close > 0, 1, 0))
UVXY_Ret = UVXY_Ret[,c('Date','UVXY.Close', 'col')]
# barplot(UVXY_Ret$UVXY.Close, col = c('red','green')[UVXY_Ret$col], main='UVXY Returns', space=0, axes=FALSE, ylab='Returns')
# axis(side = 2, pos = 0, at = seq(-.2,.15,.02))
# abline(h = seq(-.2,.15,.02))
# 2012 --------------------------------------------------------------------
year_2012 = UVXY_Ret$Date <= '2012-12-31' & UVXY_Ret$Date >= "2012-01-01"
UVXY_Ret_2012 = UVXY_Ret[year_2012,]
UVXY_Ret_2012$winsorized = Winsorize(UVXY_Ret_2012$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2012\n','Top 10 returns: \n', sort(UVXY_Ret_2012$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2012$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2012),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2012$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2012$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2012$UVXY.Close > 0) / nrow(UVXY_Ret_2012),'\n',
'probs <= 0: ', sum(UVXY_Ret_2012$UVXY.Close <= 0) / nrow(UVXY_Ret_2012),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2012$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20120101/20121231']), UVXY['20120101/20121231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2012')
barplot(UVXY_Ret_2012$winsorized, col = c('red','green')[UVXY_Ret_2012$col], space=0, axes=FALSE, ylab='Returns', ylim=c(-.5,1))
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2012 --------------------------------------------------------------------
# 2013 --------------------------------------------------------------------
year_2013 = UVXY_Ret$Date <= '2013-12-31' & UVXY_Ret$Date >= "2013-01-01"
UVXY_Ret_2013 = UVXY_Ret[year_2013,]
UVXY_Ret_2013$winsorized = Winsorize(UVXY_Ret_2013$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2013\n','Top 10 returns: \n', sort(UVXY_Ret_2013$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2013$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2013),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2013$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2013$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2013$UVXY.Close > 0) / nrow(UVXY_Ret_2013),'\n',
'probs <= 0: ', sum(UVXY_Ret_2013$UVXY.Close <= 0) / nrow(UVXY_Ret_2013),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2013$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20130101/20131231']), UVXY['20130101/20131231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2013')
barplot(UVXY_Ret_2013$winsorized, col = c('red','green')[UVXY_Ret_2013$col], space=0, axes=FALSE, ylab='Returns', ylim=c(-.5,1))
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2013 --------------------------------------------------------------------
# 2014 --------------------------------------------------------------------
year_2014 = UVXY_Ret$Date <= '2014-12-31' & UVXY_Ret$Date >= "2014-01-01"
UVXY_Ret_2014 = UVXY_Ret[year_2014,]
UVXY_Ret_2014$winsorized = Winsorize(UVXY_Ret_2014$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2014\n','Top 10 returns: \n', sort(UVXY_Ret_2014$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2014$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2014),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2014$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2014$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2014$UVXY.Close > 0) / nrow(UVXY_Ret_2014),'\n',
'probs <= 0: ', sum(UVXY_Ret_2014$UVXY.Close <= 0) / nrow(UVXY_Ret_2014),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2014$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20140101/20141231']), UVXY['20140101/20141231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2014')
barplot(UVXY_Ret_2014$winsorized, col = c('red','green')[UVXY_Ret_2014$col], space=0, axes=FALSE, ylab='Returns')
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2014 --------------------------------------------------------------------
# 2015 --------------------------------------------------------------------
year_2015 = UVXY_Ret$Date <= '2015-12-31' & UVXY_Ret$Date >= "2015-01-01"
UVXY_Ret_2015 = UVXY_Ret[year_2015,]
UVXY_Ret_2015$winsorized = Winsorize(UVXY_Ret_2015$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2015\n','Top 10 returns: \n', sort(UVXY_Ret_2015$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2015$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2015),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2015$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2015$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2015$UVXY.Close > 0) / nrow(UVXY_Ret_2015),'\n',
'probs <= 0: ', sum(UVXY_Ret_2015$UVXY.Close <= 0) / nrow(UVXY_Ret_2015),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2015$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20150101/20151231']), UVXY['20150101/20151231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2015')
barplot(UVXY_Ret_2015$winsorized, col = c('red','green')[UVXY_Ret_2015$col], space=0, axes=FALSE, ylab='Returns')
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2015 --------------------------------------------------------------------
# 2016 --------------------------------------------------------------------
year_2016 = UVXY_Ret$Date <= '2016-12-31' & UVXY_Ret$Date >= "2016-01-01"
UVXY_Ret_2016 = UVXY_Ret[year_2016,]
UVXY_Ret_2016$winsorized = Winsorize(UVXY_Ret_2016$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2016\n','Top 10 returns: \n', sort(UVXY_Ret_2016$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2016$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2016),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2016$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2016$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2016$UVXY.Close > 0) / nrow(UVXY_Ret_2016),'\n',
'probs <= 0: ', sum(UVXY_Ret_2016$UVXY.Close <= 0) / nrow(UVXY_Ret_2016),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2016$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20160101/20161231']), UVXY['20160101/20161231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2016')
barplot(UVXY_Ret_2016$winsorized, col = c('red','green')[UVXY_Ret_2016$col], space=0, axes=FALSE, ylab='Returns')
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2016 --------------------------------------------------------------------
# 2017 --------------------------------------------------------------------
year_2017 = UVXY_Ret$Date <= '2017-12-31' & UVXY_Ret$Date >= "2017-01-01"
UVXY_Ret_2017 = UVXY_Ret[year_2017,]
UVXY_Ret_2017$winsorized = Winsorize(UVXY_Ret_2017$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2017\n','Top 10 returns: \n', sort(UVXY_Ret_2017$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2017$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2017),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2017$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2017$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2017$UVXY.Close > 0) / nrow(UVXY_Ret_2017),'\n',
'probs <= 0: ', sum(UVXY_Ret_2017$UVXY.Close <= 0) / nrow(UVXY_Ret_2017),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2017$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20170101/20171231']), UVXY['20170101/20171231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2017')
barplot(UVXY_Ret_2017$winsorized, col = c('red','green')[UVXY_Ret_2017$col], space=0, axes=FALSE, ylab='Returns')
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2017 --------------------------------------------------------------------
# 2018 --------------------------------------------------------------------
year_2018 = UVXY_Ret$Date <= '2018-12-31' & UVXY_Ret$Date >= "2018-01-01"
UVXY_Ret_2018 = UVXY_Ret[year_2018,]
UVXY_Ret_2018$winsorized = Winsorize(UVXY_Ret_2018$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2018\n','Top 10 returns: \n', sort(UVXY_Ret_2018$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2018$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2018),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2018$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2018$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2018$UVXY.Close > 0) / nrow(UVXY_Ret_2018),'\n',
'probs <= 0: ', sum(UVXY_Ret_2018$UVXY.Close <= 0) / nrow(UVXY_Ret_2018),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2018$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20180101/20181231']), UVXY['20180101/20181231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2018')
barplot(UVXY_Ret_2018$winsorized, col = c('red','green')[UVXY_Ret_2018$col], space=0, axes=FALSE, ylab='Returns', ylim=c(-.5,1))
axis(side = 2, pos = 0, at = seq(-1,1.2,.1))
abline(h=seq(-1,2,.1))
# 2018 --------------------------------------------------------------------
# 2019 --------------------------------------------------------------------
year_2019 = UVXY_Ret$Date <= '2019-12-31' & UVXY_Ret$Date >= "2019-01-01"
UVXY_Ret_2019 = UVXY_Ret[year_2019,]
UVXY_Ret_2019$winsorized = Winsorize(UVXY_Ret_2019$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2019\n','Top 10 returns: \n', sort(UVXY_Ret_2019$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2019$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2019),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2019$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2019$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2019$UVXY.Close > 0) / nrow(UVXY_Ret_2019),'\n',
'probs <= 0: ', sum(UVXY_Ret_2019$UVXY.Close <= 0) / nrow(UVXY_Ret_2019),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2019$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20190101/20191231']), UVXY['20190101/20191231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2019')
barplot(UVXY_Ret_2019$winsorized, col = c('red','green')[UVXY_Ret_2019$col], space=0, axes=FALSE, ylab='Returns', ylim=c(-.5,1))
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2019 --------------------------------------------------------------------
# 2020 --------------------------------------------------------------------
year_2020 = UVXY_Ret$Date <= '2020-12-31' & UVXY_Ret$Date >= "2020-01-01"
UVXY_Ret_2020 = UVXY_Ret[year_2020,]
UVXY_Ret_2020$winsorized = Winsorize(UVXY_Ret_2020$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2020\n','Top 10 returns: \n', sort(UVXY_Ret_2020$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2020$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2020),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2020$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2020$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2020$UVXY.Close > 0) / nrow(UVXY_Ret_2020),'\n',
'probs <= 0: ', sum(UVXY_Ret_2020$UVXY.Close <= 0) / nrow(UVXY_Ret_2020),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2020$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20200101/20201231']), UVXY['20200101/20201231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2020')
barplot(UVXY_Ret_2020$winsorized, col = c('red','green')[UVXY_Ret_2020$col], space=0, axes=FALSE, ylab='Returns')
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2020 --------------------------------------------------------------------
# 2021 --------------------------------------------------------------------
year_2021 = UVXY_Ret$Date <= '2021-12-31' & UVXY_Ret$Date >= "2021-01-01"
UVXY_Ret_2021 = UVXY_Ret[year_2021,]
UVXY_Ret_2021$winsorized = Winsorize(UVXY_Ret_2021$UVXY.Close, minval=-.3, maxval=1,probs=c(.02,.98))
cat('2021\n','Top 10 returns: \n', sort(UVXY_Ret_2021$UVXY.Close, decreasing=TRUE)[1:10],'\n',
'Bottom 10 returns: \n', sort(UVXY_Ret_2021$UVXY.Close, decreasing=FALSE)[1:10], '\n',
'Number of days: ',nrow(UVXY_Ret_2021),'\n',
'Numbers of days ret above 0: ',sum(UVXY_Ret_2021$UVXY.Close > 0),'\n',
'Numbers of days ret <= 0: ',sum(UVXY_Ret_2021$UVXY.Close <= 0),'\n',
'probs > 0: ', sum(UVXY_Ret_2021$UVXY.Close > 0) / nrow(UVXY_Ret_2021),'\n',
'probs <= 0: ', sum(UVXY_Ret_2021$UVXY.Close <= 0) / nrow(UVXY_Ret_2021),'\n')
# par(mfrow=c(1,1))
# hist(UVXY_Ret_2021$UVXY.Close, breaks=50)
par(mfrow=c(2,1))
plot(index(UVXY['20210101/20211231']), UVXY['20210101/20211231']$UVXY.Close, type='l', xlab='Date', ylab='UVXY', main='UVXY 2021')
barplot(UVXY_Ret_2021$winsorized, col = c('red','green')[UVXY_Ret_2021$col], space=0, axes=FALSE, ylab='Returns')
axis(side = 2, pos = 0, at = seq(-.5,1,.1))
abline(h=seq(-.5,1,.1))
# 2021 --------------------------------------------------------------------
Sys.Date()
Sys.Date()-365
library(quantmod)
library(alphavantager)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
#library(AlpacaforR)
av_api_key("TCQT2QFAN6SOOT8I")
setDefaults(getSymbols.av, api.key = "TCQT2QFAN6SOOT8I")
symbols <- "SPY"
#Stock <- getSymbols(symbols, src = "av", output.size = "full", periodicity = "daily", auto.assign = FALSE)
dateMarch6 <- as.Date("2020-01-01")
#Stock <- Stock[index(Stock) >= dateMarch6,]
#DJI <- getSymbols("DJI", from = dateMarch6, auto.assign = FALSE)
#DJI <- av_get(symbols, "TIME_SERIES_DAILY_ADJUSTED", outputsize = "full")
DJI <- getSymbols("SPY", from=Sys.Date()-365, to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
#DJI <- DJI[DJI$timestamp >= dateMarch6,]
#Stock <- av_get(symbols, "TIME_SERIES_INTRADAY", interval = "60min", outputsize = "full")
DJI$Returns <- DJI$SPY.Adjusted / shift(DJI$SPY.Adjusted) - 1
DJI <- na.omit(DJI)
DJI$col <- as.factor(ifelse(DJI$Returns > 0,1,0))
DJI <- as.data.frame(DJI)
barplot(DJI$Returns, col = c("red","green")[DJI$col], main = "SP 500 Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.02))
abline(h = seq(-.2,.15,.02))
DJI$Returns <- DJI$SPY.Adjusted / shift(DJI$SPY.Adjusted) - 1
DJI <- na.omit(DJI)
DJI$col <- as.factor(ifelse(DJI$Returns > 0,1,0))
DJI <- as.data.frame(DJI)
barplot(DJI$Returns, col = c("red","green")[DJI$col], main = "SP 500 Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.02))
abline(h = seq(-.2,.15,.02))
par(mfrow=c(1,1))
library(quantmod)
library(alphavantager)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
#library(AlpacaforR)
av_api_key("TCQT2QFAN6SOOT8I")
setDefaults(getSymbols.av, api.key = "TCQT2QFAN6SOOT8I")
symbols <- "SPY"
#Stock <- getSymbols(symbols, src = "av", output.size = "full", periodicity = "daily", auto.assign = FALSE)
dateMarch6 <- as.Date("2020-01-01")
#Stock <- Stock[index(Stock) >= dateMarch6,]
#DJI <- getSymbols("DJI", from = dateMarch6, auto.assign = FALSE)
#DJI <- av_get(symbols, "TIME_SERIES_DAILY_ADJUSTED", outputsize = "full")
DJI <- getSymbols("SPY", from=Sys.Date()-365, to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
#DJI <- DJI[DJI$timestamp >= dateMarch6,]
#Stock <- av_get(symbols, "TIME_SERIES_INTRADAY", interval = "60min", outputsize = "full")
DJI$Returns <- DJI$SPY.Adjusted / shift(DJI$SPY.Adjusted) - 1
DJI <- na.omit(DJI)
DJI$col <- as.factor(ifelse(DJI$Returns > 0,1,0))
DJI <- as.data.frame(DJI)
barplot(DJI$Returns, col = c("red","green")[DJI$col], main = "SP 500 Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.02))
abline(h = seq(-.2,.15,.02))
avgRet <- function(x){
return(prod(x + 1))
}
DJI$RollMean <- c(rep(NA,2),rollapply(DJI$Returns, width = 3, FUN = avgRet))
DJI$colRoll <- as.factor(ifelse(DJI$RollMean - 1 > 0, 1, 0))
barplot(DJI$RollMean - 1, col = c("red","green")[DJI$colRoll], main = "SP 500/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.02))
abline(h = seq(-.2,.15,.02))
library(quantmod)
library(alphavantager)
library(lubridate)
library(forecast)
library(zoo)
library(data.table)
#library(AlpacaforR)
av_api_key("TCQT2QFAN6SOOT8I")
setDefaults(getSymbols.av, api.key = "TCQT2QFAN6SOOT8I")
symbols <- "SPY"
#Stock <- getSymbols(symbols, src = "av", output.size = "full", periodicity = "daily", auto.assign = FALSE)
dateMarch6 <- as.Date("2020-01-01")
#Stock <- Stock[index(Stock) >= dateMarch6,]
#SPY <- getSymbols("SPY", from = dateMarch6, auto.assign = FALSE)
#SPY <- av_get(symbols, "TIME_SERIES_DAILY_ADJUSTED", outputsize = "full")
SPY <- getSymbols("SPY", from=Sys.Date()-365, to = Sys.Date()+1, verbose = FALSE, auto.assign = FALSE)
#SPY <- SPY[SPY$timestamp >= dateMarch6,]
#Stock <- av_get(symbols, "TIME_SERIES_INTRADAY", interval = "60min", outputsize = "full")
SPY$Returns <- SPY$SPY.Adjusted / shift(SPY$SPY.Adjusted) - 1
SPY <- na.omit(SPY)
SPY$col <- as.factor(ifelse(SPY$Returns > 0,1,0))
SPY <- as.data.frame(SPY)
barplot(SPY$Returns, col = c("red","green")[SPY$col], main = "SP 500 Daily Moves", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.02))
abline(h = seq(-.2,.15,.02))
#box()
avgRet <- function(x){
return(prod(x + 1))
}
SPY$RollMean <- c(rep(NA,2),rollapply(SPY$Returns, width = 3, FUN = avgRet))
SPY$colRoll <- as.factor(ifelse(SPY$RollMean - 1 > 0, 1, 0))
barplot(SPY$RollMean - 1, col = c("red","green")[SPY$colRoll], main = "SP 500/3 day rolling average", space = 0, axes = FALSE, ylab = "Returns")
axis(side = 2, pos = 0, at = seq(-.2,.15,.02))
abline(h = seq(-.2,.15,.02))
ff <- read.csv('F-F_Research_Data_Factors.csv')
setwd("D:/RedX Capital")
ff <- read.csv('F-F_Research_Data_Factors.csv')
View(ff)
barplot(ff$SMB)
barplot(ff$Date,ff$SMB)
barplot(ff$SMB)
barplot(ff[1000:nrow(ff),]$SMB)
barplot(ff[900:nrow(ff),]$SMB)
View(ff)
barplot(ff[900:nrow(ff),]$HML)
